[INFO ] 2017-12-21 08:56:04,059 Line:206 系统开始启动，最大内存：1792;目前总内存：253;目前空闲内存：168
 [INFO ] 2017-12-21 08:56:04,169 Line:284 ===========Tomcat Port=8888
 [INFO ] 2017-12-21 08:56:08,426 Line:2660 ---------------------------------first read dog =======-----------
 [DEBUG] 2017-12-21 08:56:08,591 Line:3336  select count(*) from tblEmployee where openFlag = 1 and statusid=0 and id <> '1' and canJxc=1 
 [DEBUG] 2017-12-21 08:56:08,612 Line:3336  select count(*) from tblEmployee where openFlag = 1 and statusid=0 and id <> '1' and canOa=1 
 [DEBUG] 2017-12-21 08:56:08,615 Line:3336  select count(*) from tblEmployee where openFlag = 1 and statusid=0 and id <> '1' and canCrm=1 
 [DEBUG] 2017-12-21 08:56:08,617 Line:3336  select count(*) from tblEmployee where openFlag = 1 and statusid=0 and id <> '1' and canHr=1 
 [DEBUG] 2017-12-21 08:56:08,626 Line:594 select AccPeriod,AccMonth,AccYear,scompanyId,statusId,isBegin from tblAccPeriod where statusId=1 or isBegin=1
 [DEBUG] 2017-12-21 08:56:08,644 Line:626 ------Init initAccPeriod record:1
 [DEBUG] 2017-12-21 08:56:09,663 Line:1061 ------Init Enumeration record:390
 [DEBUG] 2017-12-21 08:56:09,691 Line:1091 ------Init WorkProfession record:58
 [DEBUG] 2017-12-21 08:56:09,725 Line:1121 ------Init District record:3984
 [DEBUG] 2017-12-21 08:56:09,739 Line:1152 ------Init deptMap record:1
 [DEBUG] 2017-12-21 08:56:10,723 Line:1832 ------Init ModuleList record:
 [DEBUG] 2017-12-21 08:56:10,724 Line:2855 --------Init ModuleList Successful---------------
 [DEBUG] 2017-12-21 08:56:11,263 Line:297  select * from tblDBTableInfo order by TableName 
 [DEBUG] 2017-12-21 08:56:11,338 Line:370 select * from tblDBFieldInfo order by tableId,listOrder
 [DEBUG] 2017-12-21 08:56:12,066 Line:538 ------Init TableInfo record:634
 [DEBUG] 2017-12-21 08:56:12,095 Line:651  select cataName,disName,module,tableName,nameField,codeField from tblScopeCataData order by orderby 
 [DEBUG] 2017-12-21 08:56:12,101 Line:682 ------Init TableInfo record:4
 [DEBUG] 2017-12-21 08:56:12,113 Line:775 ------Init initModuleField record:0
 [DEBUG] 2017-12-21 08:56:12,127 Line:702  select tableName,sentence from tblPopDisSentence where statusId=0 order by tableName 
 [DEBUG] 2017-12-21 08:56:12,135 Line:721 ------Init TableInfo record:26
 [DEBUG] 2017-12-21 08:56:12,170 Line:891 ------Init PropInfo record:7
 [DEBUG] 2017-12-21 08:56:15,275 Line:2947 --------Init Config File ---------------
 [ERROR] 2017-12-21 08:56:15,630 Line:48 java.io.FileNotFoundException: D:\Project\aio\tomcat7\bin\..\..\fileServer_v7\wokeflow\ffd4bcdd_1701241708235230006.xml (系统找不到指定的文件。)
 [DEBUG] 2017-12-21 08:56:15,646 Line:1873 ------Init RefreshTime 
 [DEBUG] 2017-12-21 08:56:15,702 Line:2994 --------Init SMS Start ---------------
 [INFO ] 2017-12-21 08:56:16,039 Line:3011 -------System init Secussful Set Normal status--------------
 [DEBUG] 2017-12-21 08:56:16,040 Line:3855 --------Init Dog Successful---------------
 [INFO ] 2017-12-21 08:56:17,362 Line:89 SAFE 数据库第一个备份任务启动，时间2017-12-21 00:00:00
 [INFO ] 2017-12-21 08:56:17,362 Line:144 SAFE 备份任务开始执行，时间2017-12-21 08:56:17
 [INFO ] 2017-12-21 08:56:17,363 Line:137 SAFE 碎片任务启动，时间2017-12-24 00:00:00
 [INFO ] 2017-12-21 08:56:21,226 Line:148 SAFE 备份任务执行成功，时间2017-12-21 08:56:21
 [DEBUG] 2017-12-21 08:57:16,196 Line:56 ConfigRefresh.getLastInfo -- and refresh ip
 [DEBUG] 2017-12-21 08:57:25,479 Line:2992 MobileAjax 请求地址：/MobileAjax?op=getSessEmp
 [DEBUG] 2017-12-21 08:57:25,480 Line:3003 MobileAjax 操作人:;请求数据：op=[getSessEmp,];
 [DEBUG] 2017-12-21 08:57:25,480 Line:243 AIOApi op=getSessEmp&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 08:57:25,514 Line:2961 MobileAjax 操作人:;返回数据：{"code":"NOLOGIN","msg":"未登陆"}
 [DEBUG] 2017-12-21 08:57:29,073 Line:2992 MobileAjax 请求地址：/MobileAjax?op=LOGIN
 [DEBUG] 2017-12-21 08:57:29,074 Line:3003 MobileAjax 操作人:;请求数据：op=[LOGIN,];name=[admin,];password=[21232f297a57a5a743894a0e4a801fc3,];
 [DEBUG] 2017-12-21 08:57:29,074 Line:243 AIOApi op=LOGIN&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 08:57:29,114 Line:404 PublicMgt.queryClass 查询可新建工作流sql=select work.id,work.templateName,work.templateType,a.ModuleName,work.templateStatus,work.templateClass,work.statusId,work.flowOrder,work.templateFile,work.allowAdd,work.timeType,work.timeVal,work.designType  from OAWorkFlowTemplate work, tblWorkFlowType a where work.templateClass=a.classCode and a.classCode like '00002%'  and work.fileFinish='1' and work.templateStatus=1 and work.statusId=0  order by work.flowOrder
 [DEBUG] 2017-12-21 08:57:29,165 Line:2987 select count(*) from tblSunCompanys a where a.classCode like '00001_____%'
 [DEBUG] 2017-12-21 08:57:29,180 Line:530 select AccYear,AccOverYear from  tblAccPeriod group by Accyear,AccOverYear
 [DEBUG] 2017-12-21 08:57:29,319 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"登陆成功"}
 [DEBUG] 2017-12-21 08:57:29,752 Line:2992 MobileAjax 请求地址：/MobileAjax?op=getSessEmp
 [DEBUG] 2017-12-21 08:57:29,755 Line:3003 MobileAjax 操作人:admin;请求数据：op=[getSessEmp,];
 [DEBUG] 2017-12-21 08:57:29,756 Line:243 AIOApi op=getSessEmp&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 08:57:29,768 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"departmentName":"默认部门","titleId":"12","name":"admin","id":"1"}}
 [DEBUG] 2017-12-21 08:57:29,785 Line:2992 MobileAjax 请求地址：/MobileAjax?op=getEnum&enum=duty
 [DEBUG] 2017-12-21 08:57:29,787 Line:3003 MobileAjax 操作人:admin;请求数据：op=[getEnum,];enum=[duty,];
 [DEBUG] 2017-12-21 08:57:29,789 Line:243 AIOApi op=getEnum&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 08:57:29,794 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":[{"name":"职员","value":"11"},{"name":"法人","value":"1"},{"name":"董事","value":"10"},{"name":"董事长","value":"9"},{"name":"总经理","value":"2"},{"name":"部门经理","value":"3"},{"name":"副经理","value":"5"},{"name":"部长","value":"4"},{"name":"副部长","value":"6"},{"name":"主管","value":"7"},{"name":"副主管","value":"8"},{"name":"其他","value":"12"}]}
 [DEBUG] 2017-12-21 08:57:39,557 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 08:57:39,559 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];
 [DEBUG] 2017-12-21 08:57:39,560 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 08:57:40,045 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 08:57:40,072 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 08:57:40,073 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 08:57:40,073 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 08:57:40,074 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 08:57:40,074 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 08:57:40,074 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 08:57:40,075 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 08:57:40,075 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 08:57:40,075 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 08:57:40,075 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 08:57:40,076 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 08:57:40,076 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 08:57:40,076 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 08:57:40,077 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 08:57:40,077 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 08:57:40,077 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 08:57:40,078 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 08:57:40,078 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 08:57:40,117 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 08:57:40,117 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 08:57:40,117 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 08:57:40,117 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 08:57:40,117 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 08:57:40,118 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 08:57:40,118 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 08:57:40,118 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 08:57:40,120 Line:689 通过SQL读原始数据：48
 [DEBUG] 2017-12-21 08:57:40,121 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 08:57:40,159 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 08:57:49,000 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 08:57:49,001 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[00001,];
 [DEBUG] 2017-12-21 08:57:49,001 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 08:57:49,015 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 08:57:49,015 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 08:57:49,016 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 08:57:49,016 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 08:57:49,016 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 08:57:49,016 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 08:57:49,016 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 08:57:49,017 Line:582 ReportDataMgt.getReportData 参数7:00001
 [DEBUG] 2017-12-21 08:57:49,017 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 08:57:49,017 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 08:57:49,017 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 08:57:49,017 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 08:57:49,017 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 08:57:49,018 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 08:57:49,018 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 08:57:49,018 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 08:57:49,018 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 08:57:49,018 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 08:57:49,019 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 08:57:49,035 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 08:57:49,036 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 08:57:49,036 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 08:57:49,036 Line:587 ReportDataMgt.getReportData warn  and ( b.StockCode like '00001'+'%' )
 [DEBUG] 2017-12-21 08:57:49,036 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 08:57:49,037 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 08:57:49,037 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 08:57:49,037 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and ( b.StockCode like '00001'+'%' ) union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and ( b.StockCode like '00001'+'%' ) union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and ( b.StockCode like '00001'+'%' )) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 08:57:49,038 Line:689 通过SQL读原始数据：23
 [DEBUG] 2017-12-21 08:57:49,038 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 08:57:49,044 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode","00001"],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","f等等！
 [DEBUG] 2017-12-21 08:59:56,777 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 08:59:56,780 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];
 [DEBUG] 2017-12-21 08:59:56,781 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 08:59:56,822 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 08:59:56,823 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 08:59:56,824 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 08:59:56,825 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 08:59:56,826 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 08:59:56,827 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 08:59:56,828 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 08:59:56,829 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 08:59:56,830 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 08:59:56,831 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 08:59:56,832 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 08:59:56,833 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 08:59:56,834 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 08:59:56,836 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 08:59:56,836 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 08:59:56,838 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 08:59:56,839 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 08:59:56,839 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 08:59:56,839 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 08:59:56,845 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 08:59:56,845 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 08:59:56,846 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 08:59:56,846 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 08:59:56,847 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 08:59:56,847 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 08:59:56,847 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 08:59:56,848 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 08:59:56,849 Line:689 通过SQL读原始数据：26
 [DEBUG] 2017-12-21 08:59:56,852 Line:1391 整理数据：2
 [DEBUG] 2017-12-21 08:59:56,872 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:00:09,302 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:00:09,303 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[00003,];StockCode=[,];
 [DEBUG] 2017-12-21 09:00:09,304 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:00:09,322 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:00:09,322 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:00:09,322 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:00:09,322 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:00:09,323 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:00:09,323 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:00:09,323 Line:582 ReportDataMgt.getReportData 参数6:00003
 [DEBUG] 2017-12-21 09:00:09,323 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:00:09,323 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:00:09,324 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:00:09,324 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:00:09,324 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:00:09,324 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:00:09,324 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:00:09,324 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:00:09,325 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:00:09,325 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:00:09,325 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:00:09,325 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:00:09,344 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:00:09,345 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:00:09,346 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:00:09,346 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:00:09,346 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:00:09,346 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:00:09,346 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:00:09,346 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '00003_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '00003%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00003%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00003%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:00:09,347 Line:689 通过SQL读原始数据：25
 [DEBUG] 2017-12-21 09:00:09,348 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:00:09,353 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:01:16,738 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:01:16,741 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];
 [DEBUG] 2017-12-21 09:01:16,742 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:01:16,770 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:01:16,771 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:01:16,772 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:01:16,772 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:01:16,772 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:01:16,773 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:01:16,773 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:01:16,774 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:01:16,774 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:01:16,774 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:01:16,775 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:01:16,775 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:01:16,776 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:01:16,776 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:01:16,777 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:01:16,777 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:01:16,777 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:01:16,778 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:01:16,779 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:01:16,782 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:01:16,783 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:01:16,783 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:01:16,784 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:01:16,784 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:01:16,785 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:01:16,785 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:01:16,785 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:01:16,787 Line:689 通过SQL读原始数据：16
 [DEBUG] 2017-12-21 09:01:16,789 Line:1391 整理数据：2
 [DEBUG] 2017-12-21 09:01:16,800 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:02:06,675 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:02:06,676 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:02:06,677 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:02:06,688 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:02:06,688 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:02:06,688 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:02:06,688 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:02:06,689 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:02:06,689 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:02:06,689 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:02:06,689 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:02:06,689 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:02:06,689 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:02:06,690 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:02:06,690 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:02:06,690 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:02:06,690 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:02:06,690 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:02:06,690 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:02:06,690 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:02:06,691 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:02:06,691 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:02:06,692 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:02:06,693 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:02:06,693 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:02:06,693 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:02:06,693 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:02:06,693 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:02:06,694 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:02:06,694 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:02:06,694 Line:689 通过SQL读原始数据：6
 [DEBUG] 2017-12-21 09:02:06,695 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:02:06,703 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:02:08,185 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:02:08,187 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[2,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];
 [DEBUG] 2017-12-21 09:02:08,188 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:02:08,220 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:02:08,222 Line:567 ReportDataMgt.getReportData 参数1:2
 [DEBUG] 2017-12-21 09:02:08,223 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:02:08,223 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:02:08,224 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:02:08,225 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:02:08,225 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:02:08,226 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:02:08,227 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:02:08,227 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:02:08,228 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:02:08,229 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:02:08,229 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:02:08,230 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:02:08,231 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:02:08,231 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:02:08,232 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:02:08,233 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:02:08,234 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:02:08,239 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:02:08,240 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:02:08,240 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:02:08,241 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:02:08,241 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:02:08,242 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:02:08,242 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:02:08,243 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:02:08,244 Line:689 通过SQL读原始数据：22
 [DEBUG] 2017-12-21 09:02:08,246 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:02:08,264 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:08:54,415 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:08:54,416 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[00003,];StockCode=[,];
 [DEBUG] 2017-12-21 09:08:54,417 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:08:54,430 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:08:54,431 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:08:54,431 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:08:54,432 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:08:54,432 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:08:54,432 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:08:54,432 Line:582 ReportDataMgt.getReportData 参数6:00003
 [DEBUG] 2017-12-21 09:08:54,432 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:08:54,432 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:08:54,433 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:08:54,434 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:08:54,435 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:08:54,435 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:08:54,435 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:08:54,436 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:08:54,436 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:08:54,437 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:08:54,437 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:08:54,437 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:08:54,439 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:08:54,440 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:08:54,440 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:08:54,440 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:08:54,440 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:08:54,440 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:08:54,440 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:08:54,440 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '00003_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '00003%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00003%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00003%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:08:54,441 Line:689 通过SQL读原始数据：10
 [DEBUG] 2017-12-21 09:08:54,441 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:08:54,446 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:08:59,468 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:08:59,471 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:08:59,472 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:08:59,493 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:08:59,494 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:08:59,494 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:08:59,494 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:08:59,494 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:08:59,495 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:08:59,495 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:08:59,495 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:08:59,495 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:08:59,495 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:08:59,495 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:08:59,496 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:08:59,496 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:08:59,496 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:08:59,496 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:08:59,496 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:08:59,496 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:08:59,497 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:08:59,497 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:08:59,500 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:08:59,501 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:08:59,502 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:08:59,503 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:08:59,503 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:08:59,503 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:08:59,503 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:08:59,504 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:08:59,504 Line:689 通过SQL读原始数据：10
 [DEBUG] 2017-12-21 09:08:59,505 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:08:59,511 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:09:06,128 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:09:06,128 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[00003,];StockCode=[,];
 [DEBUG] 2017-12-21 09:09:06,129 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:09:06,143 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:09:06,144 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:09:06,144 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:09:06,144 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:09:06,145 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:09:06,145 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:09:06,146 Line:582 ReportDataMgt.getReportData 参数6:00003
 [DEBUG] 2017-12-21 09:09:06,146 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:09:06,146 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:09:06,146 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:09:06,146 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:09:06,146 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:09:06,147 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:09:06,147 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:09:06,147 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:09:06,148 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:09:06,148 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:09:06,149 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:09:06,149 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:09:06,151 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:09:06,151 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:09:06,152 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:09:06,152 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:09:06,152 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:09:06,152 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:09:06,152 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:09:06,152 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '00003_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '00003%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00003%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00003%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:09:06,153 Line:689 通过SQL读原始数据：9
 [DEBUG] 2017-12-21 09:09:06,153 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:09:06,157 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:09:09,527 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:09:09,529 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:09:09,530 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:09:09,558 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:09:09,558 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:09:09,559 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:09:09,559 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:09:09,559 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:09:09,559 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:09:09,560 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:09:09,560 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:09:09,560 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:09:09,561 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:09:09,561 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:09:09,561 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:09:09,561 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:09:09,562 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:09:09,562 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:09:09,562 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:09:09,562 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:09:09,563 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:09:09,563 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:09:09,567 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:09:09,568 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:09:09,568 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:09:09,568 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:09:09,568 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:09:09,569 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:09:09,569 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:09:09,569 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:09:09,569 Line:689 通过SQL读原始数据：11
 [DEBUG] 2017-12-21 09:09:09,570 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:09:09,576 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:16:56,552 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:16:56,555 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:16:56,556 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:16:56,584 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:16:56,585 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:16:56,586 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:16:56,586 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:16:56,587 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:16:56,587 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:16:56,587 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:16:56,587 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:16:56,588 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:16:56,588 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:16:56,588 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:16:56,589 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:16:56,589 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:16:56,589 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:16:56,590 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:16:56,590 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:16:56,590 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:16:56,591 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:16:56,591 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:16:56,595 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:16:56,596 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:16:56,596 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:16:56,597 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:16:56,597 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:16:56,598 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:16:56,598 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:16:56,598 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:16:56,600 Line:689 通过SQL读原始数据：15
 [DEBUG] 2017-12-21 09:16:56,601 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:16:56,608 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:18:03,699 Line:5227 GlobalsTool.js 生成js 时间50:/js/gen/login.vjs_zh_CN.js
 [DEBUG] 2017-12-21 09:18:03,761 Line:88 CommonServlet.service 请求地址：/CommonServlet?operation=qrcodeDownload
 [DEBUG] 2017-12-21 09:18:03,763 Line:99 CommonServlet.service 操作人:;请求数据：operation=[qrcodeDownload,];
 [DEBUG] 2017-12-21 09:18:04,104 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=valpwd&time=1513819084053
 [DEBUG] 2017-12-21 09:18:04,115 Line:163 UtilServlet.service 操作人:;请求数据：operation=[valpwd,];time=[1513819084053,];
 [DEBUG] 2017-12-21 09:18:04,143 Line:135 BaseAction.execute 请求地址：/loginAction.do?operation=15
 [DEBUG] 2017-12-21 09:18:04,144 Line:146 BaseAction.execute 操作人:;请求数据：operation=[15,];
 [DEBUG] 2017-12-21 09:18:06,631 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=getUserInfo&name=admin&time=1513819086629
 [DEBUG] 2017-12-21 09:18:06,632 Line:163 UtilServlet.service 操作人:;请求数据：operation=[getUserInfo,];name=[admin,];time=[1513819086629,];
 [DEBUG] 2017-12-21 09:18:06,642 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=sunCompany&name=admin&time=1513819086642
 [DEBUG] 2017-12-21 09:18:06,643 Line:163 UtilServlet.service 操作人:;请求数据：operation=[sunCompany,];name=[admin,];time=[1513819086642,];
 [DEBUG] 2017-12-21 09:18:06,721 Line:135 BaseAction.execute 请求地址：/loginAction.do
 [DEBUG] 2017-12-21 09:18:06,721 Line:146 BaseAction.execute 操作人:;请求数据：org.apache.struts.taglib.html.TOKEN=[,];NOTTOKEN=[true,];operation=[10,];ukId=[,];strM1=[,];strM2=[,];clientKey=[,];random=[,];screenWidth=[1263,];sunCompany=[1,];style=[style1,];system=[new,];loc=[zh_CN,];name=[admin,];password=[21232f297a57a5a743894a0e4a801fc3,];
 [DEBUG] 2017-12-21 09:18:06,763 Line:2987 select count(*) from tblSunCompanys a where a.classCode like '00001_____%'
 [DEBUG] 2017-12-21 09:18:06,770 Line:530 select AccYear,AccOverYear from  tblAccPeriod group by Accyear,AccOverYear
 [DEBUG] 2017-12-21 09:18:06,843 Line:135 BaseAction.execute 请求地址：/AIO.do
 [DEBUG] 2017-12-21 09:18:06,843 Line:146 BaseAction.execute 操作人:admin;请求数据：
 [DEBUG] 2017-12-21 09:18:06,878 Line:404 PublicMgt.queryClass 查询可新建工作流sql=select work.id,work.templateName,work.templateType,a.ModuleName,work.templateStatus,work.templateClass,work.statusId,work.flowOrder,work.templateFile,work.allowAdd,work.timeType,work.timeVal,work.designType  from OAWorkFlowTemplate work, tblWorkFlowType a where work.templateClass=a.classCode and a.classCode like '00002%'  and work.fileFinish='1' and work.templateStatus=1 and work.statusId=0  order by work.flowOrder
 [DEBUG] 2017-12-21 09:18:07,065 Line:5227 GlobalsTool.js 生成js 时间25:/js/gen/body2.vjs_zh_CN.js
 [DEBUG] 2017-12-21 09:18:07,334 Line:135 BaseAction.execute 请求地址：/newMenu.do?keyId=28141812_0811271603291400086&name=%E6%88%91%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8F%B0&operation=0&winCurIndex=0
 [DEBUG] 2017-12-21 09:18:07,334 Line:135 BaseAction.execute 请求地址：/MenuQueryAction.do?sysType=1&loadMenu=true
 [DEBUG] 2017-12-21 09:18:07,335 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[28141812_0811271603291400086,];name=[???????・??????°,];operation=[0,];winCurIndex=[0,];
 [DEBUG] 2017-12-21 09:18:07,335 Line:146 BaseAction.execute 操作人:admin;请求数据：sysType=[1,];loadMenu=[true,];
 [DEBUG] 2017-12-21 09:18:07,335 Line:404 PublicMgt.queryClass 查询可新建工作流sql=select work.id,work.templateName,work.templateType,a.ModuleName,work.templateStatus,work.templateClass,work.statusId,work.flowOrder,work.templateFile,work.allowAdd,work.timeType,work.timeVal,work.designType  from OAWorkFlowTemplate work, tblWorkFlowType a where work.templateClass=a.classCode and a.classCode like '00002%'  and work.fileFinish='1' and work.templateStatus=1 and work.statusId=0  order by work.flowOrder
 [DEBUG] 2017-12-21 09:18:07,350 Line:135 BaseAction.execute 请求地址：/MenuQueryAction.do?sysType=2&loadMenu=true
 [DEBUG] 2017-12-21 09:18:07,350 Line:146 BaseAction.execute 操作人:admin;请求数据：sysType=[2,];loadMenu=[true,];
 [DEBUG] 2017-12-21 09:18:07,351 Line:404 PublicMgt.queryClass 查询可新建工作流sql=select work.id,work.templateName,work.templateType,a.ModuleName,work.templateStatus,work.templateClass,work.statusId,work.flowOrder,work.templateFile,work.allowAdd,work.timeType,work.timeVal,work.designType  from OAWorkFlowTemplate work, tblWorkFlowType a where work.templateClass=a.classCode and a.classCode like '00002%'  and work.fileFinish='1' and work.templateStatus=1 and work.statusId=0  order by work.flowOrder
 [DEBUG] 2017-12-21 09:18:07,360 Line:135 BaseAction.execute 请求地址：/MenuQueryAction.do?sysType=3&loadMenu=true
 [DEBUG] 2017-12-21 09:18:07,360 Line:146 BaseAction.execute 操作人:admin;请求数据：sysType=[3,];loadMenu=[true,];
 [DEBUG] 2017-12-21 09:18:07,361 Line:404 PublicMgt.queryClass 查询可新建工作流sql=select work.id,work.templateName,work.templateType,a.ModuleName,work.templateStatus,work.templateClass,work.statusId,work.flowOrder,work.templateFile,work.allowAdd,work.timeType,work.timeVal,work.designType  from OAWorkFlowTemplate work, tblWorkFlowType a where work.templateClass=a.classCode and a.classCode like '00002%'  and work.fileFinish='1' and work.templateStatus=1 and work.statusId=0  order by work.flowOrder
 [DEBUG] 2017-12-21 09:18:07,371 Line:135 BaseAction.execute 请求地址：/MenuQueryAction.do?sysType=0&loadMenu=true
 [DEBUG] 2017-12-21 09:18:07,371 Line:146 BaseAction.execute 操作人:admin;请求数据：sysType=[0,];loadMenu=[true,];
 [DEBUG] 2017-12-21 09:18:07,372 Line:404 PublicMgt.queryClass 查询可新建工作流sql=select work.id,work.templateName,work.templateType,a.ModuleName,work.templateStatus,work.templateClass,work.statusId,work.flowOrder,work.templateFile,work.allowAdd,work.timeType,work.timeVal,work.designType  from OAWorkFlowTemplate work, tblWorkFlowType a where work.templateClass=a.classCode and a.classCode like '00002%'  and work.fileFinish='1' and work.templateStatus=1 and work.statusId=0  order by work.flowOrder
 [DEBUG] 2017-12-21 09:18:10,505 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&src=menu&winCurIndex=1
 [DEBUG] 2017-12-21 09:18:10,505 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];src=[menu,];winCurIndex=[1,];
 [DEBUG] 2017-12-21 09:18:10,505 Line:215 ---------->SET Page 1 DEFAULT URL = /UserFunctionQueryAction.do?tableName=tblGoods
 [DEBUG] 2017-12-21 09:18:10,587 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=22249636_0811041000090620009&editable=true&subSql=
 [DEBUG] 2017-12-21 09:18:10,587 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&src=menu&winCurIndex=1&checkTab=Y
 [DEBUG] 2017-12-21 09:18:10,588 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[22249636_0811041000090620009,];editable=[true,];subSql=[,];
 [DEBUG] 2017-12-21 09:18:10,588 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];src=[menu,];winCurIndex=[1,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:18:10,588 Line:215 ---------->SET Page 1 DEFAULT URL = /UserFunctionQueryAction.do?tableName=tblGoods
 [DEBUG] 2017-12-21 09:18:10,588 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:18:10,629 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:18:10,629 Line:582 ReportDataMgt.getReportData 参数1:0
 [DEBUG] 2017-12-21 09:18:10,658 Line:689 通过SQL读原始数据：29
 [DEBUG] 2017-12-21 09:18:10,660 Line:1391 整理数据：2
 [DEBUG] 2017-12-21 09:18:10,975 Line:5227 GlobalsTool.js 生成js 时间32:/js/gen/validate.vjs_zh_CN.js
 [DEBUG] 2017-12-21 09:18:11,027 Line:5227 GlobalsTool.js 生成js 时间51:/js/gen/defineList.vjstblGoods_zh_CN.js
 [DEBUG] 2017-12-21 09:18:32,827 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?tableName=tblGoods&parentCode=&operation=6&moduleType=&f_brother=&parentTableName=&winCurIndex=1&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:18:32,828 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];parentCode=[,];operation=[6,];moduleType=[,];f_brother=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:18:33,005 Line:5227 GlobalsTool.js 生成js 时间26:/js/gen/editPage.vjs_zh_CN.js
 [DEBUG] 2017-12-21 09:18:33,267 Line:5227 GlobalsTool.js 生成js 时间261:/js/gen/define.vjstblGoods_zh_CN.js
 [DEBUG] 2017-12-21 09:18:42,485 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E9%A6%85%E7%B1%BB&time=1513819122481
 [DEBUG] 2017-12-21 09:18:42,486 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[é???±?,];time=[1513819122481,];
 [DEBUG] 2017-12-21 09:18:42,785 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:18:42,786 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[,];button=[,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[bs0005,];GoodsFullName=[馅类,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[xl,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:18:42,787 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:18:42,831 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:18:42,831 Line:5853 1:
 [DEBUG] 2017-12-21 09:18:42,831 Line:5853 2:00005
 [DEBUG] 2017-12-21 09:18:42,831 Line:5853 3:b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:42,832 Line:5853 4:0
 [DEBUG] 2017-12-21 09:18:42,832 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:18:42,832 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:18:42,832 Line:5853 7:bs0005
 [DEBUG] 2017-12-21 09:18:42,832 Line:5853 8:馅类
 [DEBUG] 2017-12-21 09:18:42,832 Line:5853 9:
 [DEBUG] 2017-12-21 09:18:42,833 Line:5853 10:
 [DEBUG] 2017-12-21 09:18:42,833 Line:5853 11:
 [DEBUG] 2017-12-21 09:18:42,833 Line:5853 12:xl
 [DEBUG] 2017-12-21 09:18:42,833 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:18:42,833 Line:5853 14:
 [DEBUG] 2017-12-21 09:18:42,833 Line:5853 15:
 [DEBUG] 2017-12-21 09:18:42,834 Line:5853 16:
 [DEBUG] 2017-12-21 09:18:42,834 Line:5853 17:
 [DEBUG] 2017-12-21 09:18:42,834 Line:5853 18:
 [DEBUG] 2017-12-21 09:18:42,834 Line:5853 19:
 [DEBUG] 2017-12-21 09:18:42,834 Line:5853 20:
 [DEBUG] 2017-12-21 09:18:42,834 Line:5853 21:
 [DEBUG] 2017-12-21 09:18:42,835 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:18:42,835 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:18:42,835 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:18:42,835 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:18:42,835 Line:5853 26:0
 [DEBUG] 2017-12-21 09:18:42,835 Line:5853 27:0
 [DEBUG] 2017-12-21 09:18:42,836 Line:5853 28:
 [DEBUG] 2017-12-21 09:18:42,836 Line:5853 29:
 [DEBUG] 2017-12-21 09:18:42,836 Line:5853 30:
 [DEBUG] 2017-12-21 09:18:42,836 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:18:42,836 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:18:42,836 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:18:42,837 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:18:42,837 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:18:42,837 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:18:42,837 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:18:42,837 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:18:42,837 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:18:42,838 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:18:42,838 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:18:42,838 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:18:42,838 Line:5853 43:
 [DEBUG] 2017-12-21 09:18:42,838 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:18:42,839 Line:5853 45:
 [DEBUG] 2017-12-21 09:18:42,839 Line:5853 46:0
 [DEBUG] 2017-12-21 09:18:42,839 Line:5853 47:
 [DEBUG] 2017-12-21 09:18:42,839 Line:5853 48:0
 [DEBUG] 2017-12-21 09:18:42,840 Line:5853 49:
 [DEBUG] 2017-12-21 09:18:42,840 Line:5853 50:1
 [DEBUG] 2017-12-21 09:18:42,840 Line:5853 51:2017-12-21 09:18:42
 [DEBUG] 2017-12-21 09:18:42,840 Line:5853 52:2017-12-21 09:18:42
 [DEBUG] 2017-12-21 09:18:42,841 Line:5853 53:1
 [DEBUG] 2017-12-21 09:18:42,841 Line:5853 54:2017-12-21 09:18:42
 [DEBUG] 2017-12-21 09:18:42,841 Line:5853 55:
 [DEBUG] 2017-12-21 09:18:42,842 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:18:42,842 Line:5853 57:1
 [DEBUG] 2017-12-21 09:18:42,842 Line:5853 58:
 [DEBUG] 2017-12-21 09:18:42,842 Line:5853 59:
 [DEBUG] 2017-12-21 09:18:42,843 Line:5853 60:0
 [DEBUG] 2017-12-21 09:18:42,843 Line:5853 61:2
 [DEBUG] 2017-12-21 09:18:43,158 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:18:43,159 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,159 Line:988 1值：00005
 [DEBUG] 2017-12-21 09:18:43,160 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:18:43,161 Line:1025 query condition columnName:PaterCode----value:
 [DEBUG] 2017-12-21 09:18:43,162 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:18:43,162 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:18:43,162 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,162 Line:988 1值：add
 [DEBUG] 2017-12-21 09:18:43,162 Line:988 2值：
 [DEBUG] 2017-12-21 09:18:43,163 Line:988 3值：
 [DEBUG] 2017-12-21 09:18:43,166 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:18:43,166 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:18:43,166 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:18:43,429 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,430 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:18:43,431 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,431 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:18:43,432 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,432 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:18:43,433 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,433 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:18:43,433 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,433 Line:988 1值：00005
 [DEBUG] 2017-12-21 09:18:43,433 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:18:43,434 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:18:43,436 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:18:43,436 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:18:43,437 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:18:43,438 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,438 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:18:43,438 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,438 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,445 Line:1043 ---上述语句时间---7
 [DEBUG] 2017-12-21 09:18:43,446 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:18:43,447 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,447 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:18:43,447 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,447 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,449 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:18:43,449 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:18:43,449 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:18:43,450 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,451 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:18:43,451 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,451 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,453 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:18:43,454 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:18:43,455 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,455 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:18:43,455 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,455 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,458 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:18:43,458 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:18:43,458 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:18:43,460 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,461 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:18:43,461 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,461 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,470 Line:1043 ---上述语句时间---9
 [DEBUG] 2017-12-21 09:18:43,470 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:18:43,470 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,470 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,476 Line:1043 ---上述语句时间---6
 [DEBUG] 2017-12-21 09:18:43,476 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:18:43,477 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,477 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:18:43,478 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,478 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:18:43,478 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,479 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,480 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:18:43,480 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:18:43,480 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:18:43,480 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,481 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,482 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:18:43,482 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:18:43,482 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:18:43,483 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,484 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:18:43,484 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,485 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:18:43,486 Line:321 flag:true
 [DEBUG] 2017-12-21 09:18:43,486 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:18:43,486 Line:1157 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,489 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:18:43,490 Line:408 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:18:43,490 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:18:43,491 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,491 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:18:43,492 Line:321 flag:true
 [DEBUG] 2017-12-21 09:18:43,493 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:18:43,493 Line:1157 1值：00005
 [DEBUG] 2017-12-21 09:18:43,493 Line:1157 2值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,495 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:18:43,495 Line:408 ************上述语句执行时间：2
 [DEBUG] 2017-12-21 09:18:43,496 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:18:43,496 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,496 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,498 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:18:43,499 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:18:43,499 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:18:43,499 Line:988 1值：b83a05a1_1712210918428230003
 [DEBUG] 2017-12-21 09:18:43,501 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:18:43,501 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:18:43,501 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:18:43,502 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:43,503 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:18:43,503 Line:321 flag:false
 [DEBUG] 2017-12-21 09:18:45,064 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=5&keyId=b83a05a1_1712210918428230003&parentCode=00005&f_brother=&checkTab=Y&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:18:45,065 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[5,];keyId=[b83a05a1_1712210918428230003,];parentCode=[00005,];f_brother=[,];checkTab=[Y,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:18:45,067 Line:5010 OAMyWorkFLowMgt.getOAMyWorkFlowInfo 取流程详情 sql=select a.createBy,applyType,a.checkPerson,nextNodeIds,currentNode,b.oaTimeLimitUnit,b.benchmarkTime,a.applyContent,a.departmentCode,a.tableName,a.keyId,a.id,a.lastNodeId,a.lastCheckPerson,a.applyContent,display as currentNodeName from OAMyWorkFlow a  left join OAMyWorkFlowDet b on a.id=b.f_ref left join OAWorkFlowNode c on c.flowId=a.applyType and c.keyId=a.currentNode  where a.keyId='b83a05a1_1712210918428230003' and  a.tableName='tblGoods'
 [DEBUG] 2017-12-21 09:18:45,129 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523' and tblGoodsAccProp.AccCode = '1405'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:18:45,129 Line:1441 DynDBManager.detail 查询详情时，查询关联表数据：表=tblGoods;字段=CostMethod;弹出窗=GoodsAccPropSelect;sql= select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523' and tblGoodsAccProp.AccCode = '1405'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:18:45,142 Line:1525  select * from  tblGoodsStockLimit where f_ref = 'b83a05a1_1712210918428230003' order by detOrderNo
 [DEBUG] 2017-12-21 09:18:45,145 Line:1525  select * from  tblGoodsUnit where f_ref = 'b83a05a1_1712210918428230003' order by detOrderNo
 [DEBUG] 2017-12-21 09:18:45,322 Line:5227 GlobalsTool.js 生成js 时间26:/js/gen/Main.vjs_zh_CN.js
 [DEBUG] 2017-12-21 09:18:49,955 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:18:49,958 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[normal,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];draftQuery=[,];export=[,];query=[true,];defineInfo=[,];isTab=[,];ButtonType=[,billExport,];ButtonTypeName=[,];varKeyIds=[,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[0,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[endClass,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:18:49,993 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                              and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:18:49,994 Line:582 ReportDataMgt.getReportData 参数1:0
 [DEBUG] 2017-12-21 09:18:50,016 Line:689 通过SQL读原始数据：22
 [DEBUG] 2017-12-21 09:18:50,019 Line:1391 整理数据：2
 [DEBUG] 2017-12-21 09:18:54,103 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:18:54,104 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[normal,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                              and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                              and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];draftQuery=[,];export=[,];query=[true,];defineInfo=[,];isTab=[,];ButtonType=[,billExport,];ButtonTypeName=[,];varKeyIds=[,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[endClass,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:18:54,119 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                                 )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:18:54,138 Line:689 通过SQL读原始数据：18
 [DEBUG] 2017-12-21 09:18:54,140 Line:1391 整理数据：2
 [DEBUG] 2017-12-21 09:18:57,409 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:18:57,411 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[normal,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                                 )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                                 )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];draftQuery=[,];export=[,];query=[true,];defineInfo=[,];isTab=[,];ButtonType=[,billExport,];ButtonTypeName=[,];varKeyIds=[,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[normal,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:18:57,424 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:18:57,440 Line:689 通过SQL读原始数据：15
 [DEBUG] 2017-12-21 09:18:57,441 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:19:05,020 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?&selectName=SelectGoodsClassCode&moduleType=&operation=22&popDataType=dataMove&MOID=22249636_0811041000090620009&MOOP=query&popupWin=DataMoveDiv&LinkType=@URL:&displayName=%E5%88%86%E7%BA%A7%E7%9B%AE%E5%BD%95
 [DEBUG] 2017-12-21 09:19:05,020 Line:146 BaseAction.execute 操作人:admin;请求数据：selectName=[SelectGoodsClassCode,];moduleType=[,];operation=[22,];popDataType=[dataMove,];MOID=[22249636_0811041000090620009,];MOOP=[query,];popupWin=[DataMoveDiv,];LinkType=[@URL:,];displayName=[?????§??????,];
 [DEBUG] 2017-12-21 09:19:05,055 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=22249636_0811041000090620009&editable=&subSql=
 [DEBUG] 2017-12-21 09:19:05,055 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?&selectName=SelectGoodsClassCode&moduleType=&operation=22&popDataType=dataMove&MOID=22249636_0811041000090620009&MOOP=query&popupWin=DataMoveDiv&LinkType=@URL:&displayName=%E5%88%86%E7%BA%A7%E7%9B%AE%E5%BD%95&checkTab=Y
 [DEBUG] 2017-12-21 09:19:05,056 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[22249636_0811041000090620009,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:19:05,056 Line:146 BaseAction.execute 操作人:admin;请求数据：selectName=[SelectGoodsClassCode,];moduleType=[,];operation=[22,];popDataType=[dataMove,];MOID=[22249636_0811041000090620009,];MOOP=[query,];popupWin=[DataMoveDiv,];LinkType=[@URL:,];displayName=[?????§??????,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:19:05,056 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:19:05,096 Line:3434 DynDBManager.popSelect selectName=SelectGoodsClassCode; sql=select * from (select tblGoods.classCode f1 ,tblGoods.GoodsNumber f2 ,tblGoods.GoodsFullName f3 ,tblGoods.GoodsSpec f4 ,tblGoods.GoodsFullNamePYM f5 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber desc) as row_id from tblGoods

      where 1=1 and tblGoods.classCode like '_____') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:19:05,179 Line:5227 GlobalsTool.js 生成js 时间33:/js/gen/popupPage.vjs_zh_CN.js
 [DEBUG] 2017-12-21 09:19:15,045 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:19:15,047 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[25,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[00002,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];draftQuery=[,];export=[,];query=[,];defineInfo=[,];isTab=[,];ButtonType=[dataMove,billExport,];ButtonTypeName=[数据搬移,];varKeyIds=[cdf9629a_1712151342258280005|,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[normal,];keyId=[cdf9629a_1712151342258280005,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:19:15,059 Line:921 自定义执行的语句显示： Goods_dataMove :select isCatalog,classCode,CostMethod as OldCostMethod from tblGoods where id=?
 [DEBUG] 2017-12-21 09:19:15,060 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:15,060 Line:988 1值：cdf9629a_1712151342258280005
 [DEBUG] 2017-12-21 09:19:15,062 Line:1025 query condition columnName:isCatalog----value:0
 [DEBUG] 2017-12-21 09:19:15,063 Line:1025 query condition columnName:classCode----value:00001
 [DEBUG] 2017-12-21 09:19:15,063 Line:1025 query condition columnName:OldCostMethod----value:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:19:15,063 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:19:15,063 Line:921 自定义执行的语句显示： Goods_dataMove :select CostMethod as NewCostMethod from tblGoods where classCode=?
 [DEBUG] 2017-12-21 09:19:15,064 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:15,064 Line:988 1值：00002
 [DEBUG] 2017-12-21 09:19:15,069 Line:1025 query condition columnName:NewCostMethod----value:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:19:15,069 Line:1043 ---上述语句时间---6
 [DEBUG] 2017-12-21 09:19:15,070 Line:921 自定义执行的语句显示： Goods_dataMove :select GoodsFullName from tblGoods where charindex(?,?)=1 and id=? and len(?)<=len(?)
 [DEBUG] 2017-12-21 09:19:15,070 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:15,070 Line:988 1值：00001
 [DEBUG] 2017-12-21 09:19:15,071 Line:988 2值：00002
 [DEBUG] 2017-12-21 09:19:15,071 Line:988 3值：cdf9629a_1712151342258280005
 [DEBUG] 2017-12-21 09:19:15,071 Line:988 4值：00001
 [DEBUG] 2017-12-21 09:19:15,071 Line:988 5值：00002
 [DEBUG] 2017-12-21 09:19:15,075 Line:1043 ---上述语句时间---5
 [DEBUG] 2017-12-21 09:19:15,075 Line:921 自定义执行的语句显示： Goods_dataMove :select GoodsFullName as GoodsName from tblGoods where id=? and 
? like ?+'_____'
 [DEBUG] 2017-12-21 09:19:15,075 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:15,076 Line:988 1值：cdf9629a_1712151342258280005
 [DEBUG] 2017-12-21 09:19:15,076 Line:988 2值：00001
 [DEBUG] 2017-12-21 09:19:15,076 Line:988 3值：00002
 [DEBUG] 2017-12-21 09:19:15,079 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:19:15,079 Line:921 自定义执行的语句显示： Goods_dataMove :select tblGoods.GoodsFullName as existGoods from tblGoods where 
(tblGoods.classCode in (select GoodsCode from tblBeginStockDet UNION select GoodsCode from tblBuyInStockDet UNION select GoodsCode from tblStockDet UNION select GoodsCode from tblBuyOutStockDet UNION select GoodsCode from tblSalesOutStockDet UNION select GoodsCode from tblSalesReturnStockDet UNION select GoodsCode from tblSalesOrderDet UNION select GoodsCode from tblCheckDet UNION select GoodsCode from tblAdjustPriceDet UNION select GoodsCode from tblBuyOrderDet UNION select GoodsCode from tblAllotDet UNION select GoodsCode from tblAllotChangeDet UNION select GoodsCode from tblOtherOutDet UNION select GoodsCode from tblOtherInDet UNION select GoodsCode from tblAdjustPriceDet)) and tblGoods.SCompanyID=? and tblGoods.classCode=?
 [DEBUG] 2017-12-21 09:19:15,079 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:15,079 Line:988 1值：00001
 [DEBUG] 2017-12-21 09:19:15,079 Line:988 2值：00002
 [DEBUG] 2017-12-21 09:19:15,150 Line:1025 query condition columnName:existGoods----value:玉米馅
 [DEBUG] 2017-12-21 09:19:15,152 Line:1043 ---上述语句时间---73
 [DEBUG] 2017-12-21 09:19:15,152 Line:313 exeCondition:Goods_dataMove :true
 [DEBUG] 2017-12-21 09:19:15,152 Line:321 flag:true
 [DEBUG] 2017-12-21 09:19:15,152 Line:1264 自定义执行的语句显示： Goods_dataMove:{call proc_getNewClassCode(?,?,?,?)}
 [DEBUG] 2017-12-21 09:19:15,152 Line:1270 tblGoods
 [DEBUG] 2017-12-21 09:19:15,154 Line:1270 00002
 [DEBUG] 2017-12-21 09:19:15,155 Line:1292 存储过程内部信息：  
 [DEBUG] 2017-12-21 09:19:15,155 Line:425 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:19:15,155 Line:313 exeCondition:Goods_dataMove :'null'!='null'
 [DEBUG] 2017-12-21 09:19:15,155 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:15,155 Line:313 exeCondition:Goods_dataMove :'null'!='null'
 [DEBUG] 2017-12-21 09:19:15,157 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:15,157 Line:313 exeCondition:Goods_dataMove :'玉米馅'!='null'
 [DEBUG] 2017-12-21 09:19:15,157 Line:321 flag:true
 [DEBUG] 2017-12-21 09:19:15,157 Line:372 ---error，返回信息：tblGoods.existoperation.error,玉米馅url=
 [DEBUG] 2017-12-21 09:19:16,731 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&moduleType=&checkTab=Y&winCurIndex=1
 [DEBUG] 2017-12-21 09:19:16,732 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];checkTab=[Y,];winCurIndex=[1,];
 [DEBUG] 2017-12-21 09:19:16,742 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:19:16,744 Line:689 通过SQL读原始数据：1
 [DEBUG] 2017-12-21 09:19:16,745 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:19:32,692 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?tableName=tblGoods&parentCode=00005&operation=6&moduleType=&f_brother=&parentTableName=&winCurIndex=1&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:19:32,694 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];parentCode=[00005,];operation=[6,];moduleType=[,];f_brother=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:19:32,721 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:19:32,722 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:19:50,599 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E8%90%9D%E5%8D%9C%E9%A6%85&time=1513819190594
 [DEBUG] 2017-12-21 09:19:50,600 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[è?????é??,];time=[1513819190594,];
 [DEBUG] 2017-12-21 09:19:50,668 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:19:50,669 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0001,];GoodsFullName=[萝卜馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[lbx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:19:50,669 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:19:50,691 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:19:50,691 Line:5853 1:
 [DEBUG] 2017-12-21 09:19:50,691 Line:5853 2:0000500001
 [DEBUG] 2017-12-21 09:19:50,692 Line:5853 3:b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:50,692 Line:5853 4:0
 [DEBUG] 2017-12-21 09:19:50,692 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:19:50,692 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:19:50,692 Line:5853 7:xl0001
 [DEBUG] 2017-12-21 09:19:50,692 Line:5853 8:萝卜馅
 [DEBUG] 2017-12-21 09:19:50,692 Line:5853 9:
 [DEBUG] 2017-12-21 09:19:50,693 Line:5853 10:
 [DEBUG] 2017-12-21 09:19:50,693 Line:5853 11:
 [DEBUG] 2017-12-21 09:19:50,693 Line:5853 12:lbx
 [DEBUG] 2017-12-21 09:19:50,693 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:19:50,693 Line:5853 14:
 [DEBUG] 2017-12-21 09:19:50,693 Line:5853 15:
 [DEBUG] 2017-12-21 09:19:50,694 Line:5853 16:
 [DEBUG] 2017-12-21 09:19:50,694 Line:5853 17:
 [DEBUG] 2017-12-21 09:19:50,694 Line:5853 18:
 [DEBUG] 2017-12-21 09:19:50,694 Line:5853 19:
 [DEBUG] 2017-12-21 09:19:50,694 Line:5853 20:
 [DEBUG] 2017-12-21 09:19:50,694 Line:5853 21:
 [DEBUG] 2017-12-21 09:19:50,694 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:19:50,695 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:19:50,695 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:19:50,695 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:19:50,695 Line:5853 26:0
 [DEBUG] 2017-12-21 09:19:50,695 Line:5853 27:0
 [DEBUG] 2017-12-21 09:19:50,695 Line:5853 28:
 [DEBUG] 2017-12-21 09:19:50,696 Line:5853 29:
 [DEBUG] 2017-12-21 09:19:50,696 Line:5853 30:
 [DEBUG] 2017-12-21 09:19:50,696 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:19:50,696 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:19:50,696 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:19:50,696 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:19:50,696 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:19:50,697 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:19:50,697 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:19:50,697 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:19:50,697 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:19:50,697 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:19:50,697 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:19:50,697 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:19:50,698 Line:5853 43:
 [DEBUG] 2017-12-21 09:19:50,698 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:19:50,698 Line:5853 45:
 [DEBUG] 2017-12-21 09:19:50,698 Line:5853 46:0
 [DEBUG] 2017-12-21 09:19:50,698 Line:5853 47:
 [DEBUG] 2017-12-21 09:19:50,698 Line:5853 48:0
 [DEBUG] 2017-12-21 09:19:50,699 Line:5853 49:
 [DEBUG] 2017-12-21 09:19:50,699 Line:5853 50:1
 [DEBUG] 2017-12-21 09:19:50,699 Line:5853 51:2017-12-21 09:19:50
 [DEBUG] 2017-12-21 09:19:50,699 Line:5853 52:2017-12-21 09:19:50
 [DEBUG] 2017-12-21 09:19:50,699 Line:5853 53:1
 [DEBUG] 2017-12-21 09:19:50,699 Line:5853 54:2017-12-21 09:19:50
 [DEBUG] 2017-12-21 09:19:50,699 Line:5853 55:
 [DEBUG] 2017-12-21 09:19:50,700 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:19:50,700 Line:5853 57:1
 [DEBUG] 2017-12-21 09:19:50,700 Line:5853 58:
 [DEBUG] 2017-12-21 09:19:50,700 Line:5853 59:
 [DEBUG] 2017-12-21 09:19:50,700 Line:5853 60:0
 [DEBUG] 2017-12-21 09:19:50,700 Line:5853 61:2
 [DEBUG] 2017-12-21 09:19:50,712 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:19:50,713 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:50,713 Line:988 1值：0000500001
 [DEBUG] 2017-12-21 09:19:50,713 Line:988 2值：0000500001
 [DEBUG] 2017-12-21 09:19:50,714 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:19:50,714 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:19:50,714 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:19:50,714 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:50,715 Line:988 1值：add
 [DEBUG] 2017-12-21 09:19:50,715 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:19:50,715 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:19:50,718 Line:1025 query condition columnName:PaterC----value:1
 [DEBUG] 2017-12-21 09:19:50,718 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:19:50,719 Line:313 exeCondition:tblGoods_Add :1>0
 [DEBUG] 2017-12-21 09:19:50,722 Line:321 flag:true
 [DEBUG] 2017-12-21 09:19:50,723 Line:1264 自定义执行的语句显示： tblGoods_Add:{call proc_GoodsUseInfo(?,?,?,?)}
 [DEBUG] 2017-12-21 09:19:50,723 Line:1270 00005
 [DEBUG] 2017-12-21 09:19:50,723 Line:1270 zh_CN
 [DEBUG] 2017-12-21 09:19:51,024 Line:425 ************上述语句执行时间：301
 [DEBUG] 2017-12-21 09:19:51,024 Line:313 exeCondition:tblGoods_Add :1>0 && '0'=='-2222'
 [DEBUG] 2017-12-21 09:19:51,025 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,026 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:19:51,027 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,027 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:19:51,028 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,029 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:19:51,029 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,029 Line:988 1值：0000500001
 [DEBUG] 2017-12-21 09:19:51,029 Line:988 2值：0000500001
 [DEBUG] 2017-12-21 09:19:51,029 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:19:51,032 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:19:51,032 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:19:51,032 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:19:51,033 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,033 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:19:51,033 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,033 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,035 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:19:51,036 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:19:51,037 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,037 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:19:51,037 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,037 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,039 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:19:51,039 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:19:51,040 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:19:51,041 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,042 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:19:51,042 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,042 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,045 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:19:51,045 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:19:51,046 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,046 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:19:51,046 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,046 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,048 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:19:51,048 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:19:51,048 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:19:51,049 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,049 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:19:51,049 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,049 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,057 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:19:51,058 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:19:51,058 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,058 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,062 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:19:51,062 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:19:51,063 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,063 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:19:51,064 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,064 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:19:51,065 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,065 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,066 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:19:51,066 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:19:51,067 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:19:51,067 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,067 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,068 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:19:51,069 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:19:51,069 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:19:51,070 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,070 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:19:51,071 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,071 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:19:51,072 Line:321 flag:true
 [DEBUG] 2017-12-21 09:19:51,072 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:19:51,073 Line:1157 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,075 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:19:51,075 Line:408 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:19:51,076 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:19:51,077 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,077 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:19:51,077 Line:321 flag:true
 [DEBUG] 2017-12-21 09:19:51,078 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:19:51,078 Line:1157 1值：0000500001
 [DEBUG] 2017-12-21 09:19:51,078 Line:1157 2值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,080 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:19:51,081 Line:408 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:19:51,081 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:19:51,081 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,081 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,084 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:19:51,085 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:19:51,085 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:19:51,085 Line:988 1值：b83a05a1_1712210919506880005
 [DEBUG] 2017-12-21 09:19:51,087 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:19:51,087 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:19:51,087 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:19:51,088 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:51,088 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:19:51,089 Line:321 flag:false
 [DEBUG] 2017-12-21 09:19:52,212 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=5&keyId=b83a05a1_1712210919506880005&parentCode=0000500001&f_brother=&checkTab=Y&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:19:52,213 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[5,];keyId=[b83a05a1_1712210919506880005,];parentCode=[0000500001,];f_brother=[,];checkTab=[Y,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:19:52,213 Line:5010 OAMyWorkFLowMgt.getOAMyWorkFlowInfo 取流程详情 sql=select a.createBy,applyType,a.checkPerson,nextNodeIds,currentNode,b.oaTimeLimitUnit,b.benchmarkTime,a.applyContent,a.departmentCode,a.tableName,a.keyId,a.id,a.lastNodeId,a.lastCheckPerson,a.applyContent,display as currentNodeName from OAMyWorkFlow a  left join OAMyWorkFlowDet b on a.id=b.f_ref left join OAWorkFlowNode c on c.flowId=a.applyType and c.keyId=a.currentNode  where a.keyId='b83a05a1_1712210919506880005' and  a.tableName='tblGoods'
 [DEBUG] 2017-12-21 09:19:52,226 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523' and tblGoodsAccProp.AccCode = '1405'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:19:52,226 Line:1441 DynDBManager.detail 查询详情时，查询关联表数据：表=tblGoods;字段=CostMethod;弹出窗=GoodsAccPropSelect;sql= select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523' and tblGoodsAccProp.AccCode = '1405'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:19:52,229 Line:1525  select * from  tblGoodsStockLimit where f_ref = 'b83a05a1_1712210919506880005' order by detOrderNo
 [DEBUG] 2017-12-21 09:19:52,231 Line:1525  select * from  tblGoodsUnit where f_ref = 'b83a05a1_1712210919506880005' order by detOrderNo
 [DEBUG] 2017-12-21 09:19:56,417 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:19:56,420 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[normal,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];draftQuery=[,];export=[,];query=[true,];defineInfo=[,];isTab=[,];ButtonType=[,billExport,];ButtonTypeName=[,];varKeyIds=[b83a05a1_1712210918428230003|,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[endClass,];keyId=[b83a05a1_1712210918428230003,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:19:56,445 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                                 )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:19:56,463 Line:689 通过SQL读原始数据：18
 [DEBUG] 2017-12-21 09:19:56,465 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:20:08,621 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:20:08,622 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[normal,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                                 )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                                 )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];draftQuery=[,];export=[,];query=[true,];defineInfo=[,];isTab=[,];ButtonType=[,billExport,];ButtonTypeName=[,];varKeyIds=[,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[normal,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:20:08,634 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:20:08,650 Line:689 通过SQL读原始数据：16
 [DEBUG] 2017-12-21 09:20:08,651 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:20:10,990 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&keyId=b83a05a1_1712210918428230003&parentCode=00005&operation=4&moduleType=&winCurIndex=1&parentTableName=&checkTab=Y&selectType=normal
 [DEBUG] 2017-12-21 09:20:10,990 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];keyId=[b83a05a1_1712210918428230003,];parentCode=[00005,];operation=[4,];moduleType=[,];winCurIndex=[1,];parentTableName=[,];checkTab=[Y,];selectType=[normal,];
 [DEBUG] 2017-12-21 09:20:10,998 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '00005_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:20:10,999 Line:582 ReportDataMgt.getReportData 参数1:0
 [DEBUG] 2017-12-21 09:20:11,009 Line:689 通过SQL读原始数据：10
 [DEBUG] 2017-12-21 09:20:11,009 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:20:12,782 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?tableName=tblGoods&parentCode=00005&operation=6&moduleType=&f_brother=&parentTableName=&winCurIndex=1&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:20:12,783 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];parentCode=[00005,];operation=[6,];moduleType=[,];f_brother=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:20:12,790 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:12,790 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:21,396 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E7%99%BD%E8%8F%9C%E9%A6%85&time=1513819221391
 [DEBUG] 2017-12-21 09:20:21,398 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[???è??é??,];time=[1513819221391,];
 [DEBUG] 2017-12-21 09:20:21,456 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:20:21,457 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0002,];GoodsFullName=[白菜馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[bcx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:20:21,458 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:20:21,462 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:20:21,463 Line:5853 1:
 [DEBUG] 2017-12-21 09:20:21,463 Line:5853 2:0000500002
 [DEBUG] 2017-12-21 09:20:21,463 Line:5853 3:b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,463 Line:5853 4:0
 [DEBUG] 2017-12-21 09:20:21,463 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:20:21,464 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:20:21,464 Line:5853 7:xl0002
 [DEBUG] 2017-12-21 09:20:21,464 Line:5853 8:白菜馅
 [DEBUG] 2017-12-21 09:20:21,464 Line:5853 9:
 [DEBUG] 2017-12-21 09:20:21,464 Line:5853 10:
 [DEBUG] 2017-12-21 09:20:21,464 Line:5853 11:
 [DEBUG] 2017-12-21 09:20:21,464 Line:5853 12:bcx
 [DEBUG] 2017-12-21 09:20:21,465 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:20:21,465 Line:5853 14:
 [DEBUG] 2017-12-21 09:20:21,466 Line:5853 15:
 [DEBUG] 2017-12-21 09:20:21,466 Line:5853 16:
 [DEBUG] 2017-12-21 09:20:21,467 Line:5853 17:
 [DEBUG] 2017-12-21 09:20:21,467 Line:5853 18:
 [DEBUG] 2017-12-21 09:20:21,467 Line:5853 19:
 [DEBUG] 2017-12-21 09:20:21,468 Line:5853 20:
 [DEBUG] 2017-12-21 09:20:21,468 Line:5853 21:
 [DEBUG] 2017-12-21 09:20:21,468 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:20:21,468 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:20:21,468 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:20:21,468 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:20:21,469 Line:5853 26:0
 [DEBUG] 2017-12-21 09:20:21,469 Line:5853 27:0
 [DEBUG] 2017-12-21 09:20:21,469 Line:5853 28:
 [DEBUG] 2017-12-21 09:20:21,469 Line:5853 29:
 [DEBUG] 2017-12-21 09:20:21,469 Line:5853 30:
 [DEBUG] 2017-12-21 09:20:21,470 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:20:21,470 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:20:21,470 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:20:21,470 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:20:21,470 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:20:21,471 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:20:21,471 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:20:21,472 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:20:21,472 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:20:21,472 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:20:21,472 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:20:21,472 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:20:21,472 Line:5853 43:
 [DEBUG] 2017-12-21 09:20:21,473 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:20:21,473 Line:5853 45:
 [DEBUG] 2017-12-21 09:20:21,473 Line:5853 46:0
 [DEBUG] 2017-12-21 09:20:21,473 Line:5853 47:
 [DEBUG] 2017-12-21 09:20:21,473 Line:5853 48:0
 [DEBUG] 2017-12-21 09:20:21,473 Line:5853 49:
 [DEBUG] 2017-12-21 09:20:21,473 Line:5853 50:1
 [DEBUG] 2017-12-21 09:20:21,474 Line:5853 51:2017-12-21 09:20:21
 [DEBUG] 2017-12-21 09:20:21,474 Line:5853 52:2017-12-21 09:20:21
 [DEBUG] 2017-12-21 09:20:21,474 Line:5853 53:1
 [DEBUG] 2017-12-21 09:20:21,474 Line:5853 54:2017-12-21 09:20:21
 [DEBUG] 2017-12-21 09:20:21,474 Line:5853 55:
 [DEBUG] 2017-12-21 09:20:21,474 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:20:21,475 Line:5853 57:1
 [DEBUG] 2017-12-21 09:20:21,475 Line:5853 58:
 [DEBUG] 2017-12-21 09:20:21,475 Line:5853 59:
 [DEBUG] 2017-12-21 09:20:21,475 Line:5853 60:0
 [DEBUG] 2017-12-21 09:20:21,475 Line:5853 61:2
 [DEBUG] 2017-12-21 09:20:21,484 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:20:21,485 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,485 Line:988 1值：0000500002
 [DEBUG] 2017-12-21 09:20:21,486 Line:988 2值：0000500002
 [DEBUG] 2017-12-21 09:20:21,486 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:20:21,487 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:20:21,487 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:20:21,487 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,487 Line:988 1值：add
 [DEBUG] 2017-12-21 09:20:21,487 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:20:21,488 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:20:21,488 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:20:21,488 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,489 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:20:21,490 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,490 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:20:21,491 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,491 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:20:21,492 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,492 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:20:21,493 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,493 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:20:21,493 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,493 Line:988 1值：0000500002
 [DEBUG] 2017-12-21 09:20:21,493 Line:988 2值：0000500002
 [DEBUG] 2017-12-21 09:20:21,494 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:20:21,494 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:20:21,494 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,495 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:20:21,496 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,496 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:20:21,496 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,496 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,497 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,497 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:20:21,498 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,499 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:20:21,499 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,500 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,500 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:20:21,500 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,501 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:20:21,501 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,502 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:20:21,502 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,502 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,503 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,503 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:20:21,504 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,504 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:20:21,504 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,504 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,505 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:20:21,505 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,505 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:20:21,506 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,506 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:20:21,507 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,507 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,507 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,508 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:20:21,508 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,508 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,508 Line:1043 ---上述语句时间---0
 [DEBUG] 2017-12-21 09:20:21,509 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:20:21,509 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,509 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:20:21,510 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,510 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:20:21,510 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,511 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,511 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:20:21,511 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,511 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:20:21,512 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,512 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,512 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:20:21,513 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:21,513 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:20:21,513 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,514 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:20:21,515 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,515 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:20:21,517 Line:321 flag:true
 [DEBUG] 2017-12-21 09:20:21,518 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:20:21,518 Line:1157 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,518 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:20:21,519 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:20:21,519 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:20:21,520 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,520 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:20:21,521 Line:321 flag:true
 [DEBUG] 2017-12-21 09:20:21,521 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:20:21,521 Line:1157 1值：0000500002
 [DEBUG] 2017-12-21 09:20:21,521 Line:1157 2值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,522 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:20:21,522 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:20:21,522 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:20:21,522 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,522 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,524 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:21,524 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:20:21,524 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:21,524 Line:988 1值：b83a05a1_1712210920214620007
 [DEBUG] 2017-12-21 09:20:21,525 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:20:21,525 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:21,525 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:20:21,526 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:21,526 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:20:21,526 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:22,983 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=5&keyId=b83a05a1_1712210920214620007&parentCode=0000500002&f_brother=&checkTab=Y&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:20:22,985 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[5,];keyId=[b83a05a1_1712210920214620007,];parentCode=[0000500002,];f_brother=[,];checkTab=[Y,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:20:22,986 Line:5010 OAMyWorkFLowMgt.getOAMyWorkFlowInfo 取流程详情 sql=select a.createBy,applyType,a.checkPerson,nextNodeIds,currentNode,b.oaTimeLimitUnit,b.benchmarkTime,a.applyContent,a.departmentCode,a.tableName,a.keyId,a.id,a.lastNodeId,a.lastCheckPerson,a.applyContent,display as currentNodeName from OAMyWorkFlow a  left join OAMyWorkFlowDet b on a.id=b.f_ref left join OAWorkFlowNode c on c.flowId=a.applyType and c.keyId=a.currentNode  where a.keyId='b83a05a1_1712210920214620007' and  a.tableName='tblGoods'
 [DEBUG] 2017-12-21 09:20:23,019 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523' and tblGoodsAccProp.AccCode = '1405'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:23,020 Line:1441 DynDBManager.detail 查询详情时，查询关联表数据：表=tblGoods;字段=CostMethod;弹出窗=GoodsAccPropSelect;sql= select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523' and tblGoodsAccProp.AccCode = '1405'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:23,025 Line:1525  select * from  tblGoodsStockLimit where f_ref = 'b83a05a1_1712210920214620007' order by detOrderNo
 [DEBUG] 2017-12-21 09:20:23,029 Line:1525  select * from  tblGoodsUnit where f_ref = 'b83a05a1_1712210920214620007' order by detOrderNo
 [DEBUG] 2017-12-21 09:20:27,388 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?tableName=tblGoods&parentCode=00005&operation=6&moduleType=&f_brother=&parentTableName=&winCurIndex=1&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:20:27,390 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];parentCode=[00005,];operation=[6,];moduleType=[,];f_brother=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:20:27,394 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:27,395 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:32,560 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E8%8A%B9%E8%8F%9C%E9%A6%85&time=1513819232555
 [DEBUG] 2017-12-21 09:20:32,561 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[è??è??é??,];time=[1513819232555,];
 [DEBUG] 2017-12-21 09:20:32,630 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:20:32,631 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0003,];GoodsFullName=[芹菜馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[qcx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:20:32,632 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:20:32,635 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:20:32,636 Line:5853 1:
 [DEBUG] 2017-12-21 09:20:32,636 Line:5853 2:0000500003
 [DEBUG] 2017-12-21 09:20:32,637 Line:5853 3:b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,637 Line:5853 4:0
 [DEBUG] 2017-12-21 09:20:32,637 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:20:32,637 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:20:32,637 Line:5853 7:xl0003
 [DEBUG] 2017-12-21 09:20:32,637 Line:5853 8:芹菜馅
 [DEBUG] 2017-12-21 09:20:32,638 Line:5853 9:
 [DEBUG] 2017-12-21 09:20:32,638 Line:5853 10:
 [DEBUG] 2017-12-21 09:20:32,638 Line:5853 11:
 [DEBUG] 2017-12-21 09:20:32,638 Line:5853 12:qcx
 [DEBUG] 2017-12-21 09:20:32,639 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:20:32,639 Line:5853 14:
 [DEBUG] 2017-12-21 09:20:32,640 Line:5853 15:
 [DEBUG] 2017-12-21 09:20:32,640 Line:5853 16:
 [DEBUG] 2017-12-21 09:20:32,640 Line:5853 17:
 [DEBUG] 2017-12-21 09:20:32,640 Line:5853 18:
 [DEBUG] 2017-12-21 09:20:32,640 Line:5853 19:
 [DEBUG] 2017-12-21 09:20:32,641 Line:5853 20:
 [DEBUG] 2017-12-21 09:20:32,641 Line:5853 21:
 [DEBUG] 2017-12-21 09:20:32,641 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:20:32,641 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:20:32,641 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:20:32,641 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:20:32,641 Line:5853 26:0
 [DEBUG] 2017-12-21 09:20:32,642 Line:5853 27:0
 [DEBUG] 2017-12-21 09:20:32,642 Line:5853 28:
 [DEBUG] 2017-12-21 09:20:32,642 Line:5853 29:
 [DEBUG] 2017-12-21 09:20:32,642 Line:5853 30:
 [DEBUG] 2017-12-21 09:20:32,642 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:20:32,642 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:20:32,643 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:20:32,643 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:20:32,643 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:20:32,643 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:20:32,643 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:20:32,643 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:20:32,643 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:20:32,644 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:20:32,644 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:20:32,644 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:20:32,644 Line:5853 43:
 [DEBUG] 2017-12-21 09:20:32,644 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:20:32,644 Line:5853 45:
 [DEBUG] 2017-12-21 09:20:32,645 Line:5853 46:0
 [DEBUG] 2017-12-21 09:20:32,645 Line:5853 47:
 [DEBUG] 2017-12-21 09:20:32,645 Line:5853 48:0
 [DEBUG] 2017-12-21 09:20:32,645 Line:5853 49:
 [DEBUG] 2017-12-21 09:20:32,646 Line:5853 50:1
 [DEBUG] 2017-12-21 09:20:32,647 Line:5853 51:2017-12-21 09:20:32
 [DEBUG] 2017-12-21 09:20:32,647 Line:5853 52:2017-12-21 09:20:32
 [DEBUG] 2017-12-21 09:20:32,648 Line:5853 53:1
 [DEBUG] 2017-12-21 09:20:32,648 Line:5853 54:2017-12-21 09:20:32
 [DEBUG] 2017-12-21 09:20:32,648 Line:5853 55:
 [DEBUG] 2017-12-21 09:20:32,649 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:20:32,649 Line:5853 57:1
 [DEBUG] 2017-12-21 09:20:32,649 Line:5853 58:
 [DEBUG] 2017-12-21 09:20:32,649 Line:5853 59:
 [DEBUG] 2017-12-21 09:20:32,650 Line:5853 60:0
 [DEBUG] 2017-12-21 09:20:32,650 Line:5853 61:2
 [DEBUG] 2017-12-21 09:20:32,652 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:20:32,653 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,653 Line:988 1值：0000500003
 [DEBUG] 2017-12-21 09:20:32,653 Line:988 2值：0000500003
 [DEBUG] 2017-12-21 09:20:32,653 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:20:32,654 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:32,654 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:20:32,654 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,654 Line:988 1值：add
 [DEBUG] 2017-12-21 09:20:32,654 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:20:32,655 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:20:32,656 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:20:32,656 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:32,656 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:20:32,657 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,657 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:20:32,658 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,658 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:20:32,658 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,659 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:20:32,659 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,660 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:20:32,660 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,660 Line:988 1值：0000500003
 [DEBUG] 2017-12-21 09:20:32,660 Line:988 2值：0000500003
 [DEBUG] 2017-12-21 09:20:32,660 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:20:32,661 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:20:32,661 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:32,661 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:20:32,662 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,662 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:20:32,663 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,664 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,665 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:20:32,665 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:20:32,666 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,666 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:20:32,667 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,667 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,674 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:20:32,674 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:20:32,675 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:20:32,675 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,676 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:20:32,676 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,676 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,677 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:32,677 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:20:32,678 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,678 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:20:32,678 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,679 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,685 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:20:32,686 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:20:32,686 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:20:32,687 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,687 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:20:32,687 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,687 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,688 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:32,688 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:20:32,688 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,688 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,689 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:32,689 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:20:32,690 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,690 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:20:32,691 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,691 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:20:32,691 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,691 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,698 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:20:32,699 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:20:32,699 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:20:32,699 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,699 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,706 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:20:32,706 Line:1043 ---上述语句时间---7
 [DEBUG] 2017-12-21 09:20:32,706 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:20:32,707 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,707 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:20:32,707 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,708 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:20:32,708 Line:321 flag:true
 [DEBUG] 2017-12-21 09:20:32,708 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:20:32,709 Line:1157 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,713 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:20:32,713 Line:408 ************上述语句执行时间：5
 [DEBUG] 2017-12-21 09:20:32,714 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:20:32,714 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,715 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:20:32,715 Line:321 flag:true
 [DEBUG] 2017-12-21 09:20:32,715 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:20:32,715 Line:1157 1值：0000500003
 [DEBUG] 2017-12-21 09:20:32,716 Line:1157 2值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,720 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:20:32,720 Line:408 ************上述语句执行时间：5
 [DEBUG] 2017-12-21 09:20:32,720 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:20:32,720 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,720 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,721 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:32,721 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:20:32,721 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:32,721 Line:988 1值：b83a05a1_1712210920326340009
 [DEBUG] 2017-12-21 09:20:32,722 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:20:32,722 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:20:32,722 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:20:32,723 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:32,723 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:20:32,724 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:34,177 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=5&keyId=b83a05a1_1712210920326340009&parentCode=0000500003&f_brother=&checkTab=Y&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:20:34,178 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[5,];keyId=[b83a05a1_1712210920326340009,];parentCode=[0000500003,];f_brother=[,];checkTab=[Y,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:20:34,179 Line:5010 OAMyWorkFLowMgt.getOAMyWorkFlowInfo 取流程详情 sql=select a.createBy,applyType,a.checkPerson,nextNodeIds,currentNode,b.oaTimeLimitUnit,b.benchmarkTime,a.applyContent,a.departmentCode,a.tableName,a.keyId,a.id,a.lastNodeId,a.lastCheckPerson,a.applyContent,display as currentNodeName from OAMyWorkFlow a  left join OAMyWorkFlowDet b on a.id=b.f_ref left join OAWorkFlowNode c on c.flowId=a.applyType and c.keyId=a.currentNode  where a.keyId='b83a05a1_1712210920326340009' and  a.tableName='tblGoods'
 [DEBUG] 2017-12-21 09:20:34,211 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523' and tblGoodsAccProp.AccCode = '1405'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:34,212 Line:1441 DynDBManager.detail 查询详情时，查询关联表数据：表=tblGoods;字段=CostMethod;弹出窗=GoodsAccPropSelect;sql= select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523' and tblGoodsAccProp.AccCode = '1405'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:34,217 Line:1525  select * from  tblGoodsStockLimit where f_ref = 'b83a05a1_1712210920326340009' order by detOrderNo
 [DEBUG] 2017-12-21 09:20:34,222 Line:1525  select * from  tblGoodsUnit where f_ref = 'b83a05a1_1712210920326340009' order by detOrderNo
 [DEBUG] 2017-12-21 09:20:40,922 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?tableName=tblGoods&parentCode=00005&operation=6&moduleType=&f_brother=&parentTableName=&winCurIndex=1&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:20:40,923 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];parentCode=[00005,];operation=[6,];moduleType=[,];f_brother=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:20:40,947 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:40,947 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:55,998 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E9%A6%99%E8%8F%87%E9%A6%85&time=1513819255996
 [DEBUG] 2017-12-21 09:20:55,998 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[é??è??é??,];time=[1513819255996,];
 [DEBUG] 2017-12-21 09:20:56,082 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:20:56,083 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0004,];GoodsFullName=[香菇馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[xgx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:20:56,083 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:20:56,102 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:20:56,103 Line:5853 1:
 [DEBUG] 2017-12-21 09:20:56,103 Line:5853 2:0000500004
 [DEBUG] 2017-12-21 09:20:56,103 Line:5853 3:b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,104 Line:5853 4:0
 [DEBUG] 2017-12-21 09:20:56,104 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:20:56,104 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:20:56,104 Line:5853 7:xl0004
 [DEBUG] 2017-12-21 09:20:56,104 Line:5853 8:香菇馅
 [DEBUG] 2017-12-21 09:20:56,104 Line:5853 9:
 [DEBUG] 2017-12-21 09:20:56,104 Line:5853 10:
 [DEBUG] 2017-12-21 09:20:56,105 Line:5853 11:
 [DEBUG] 2017-12-21 09:20:56,105 Line:5853 12:xgx
 [DEBUG] 2017-12-21 09:20:56,105 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:20:56,105 Line:5853 14:
 [DEBUG] 2017-12-21 09:20:56,105 Line:5853 15:
 [DEBUG] 2017-12-21 09:20:56,105 Line:5853 16:
 [DEBUG] 2017-12-21 09:20:56,105 Line:5853 17:
 [DEBUG] 2017-12-21 09:20:56,106 Line:5853 18:
 [DEBUG] 2017-12-21 09:20:56,106 Line:5853 19:
 [DEBUG] 2017-12-21 09:20:56,106 Line:5853 20:
 [DEBUG] 2017-12-21 09:20:56,106 Line:5853 21:
 [DEBUG] 2017-12-21 09:20:56,106 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:20:56,106 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:20:56,107 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:20:56,108 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:20:56,108 Line:5853 26:0
 [DEBUG] 2017-12-21 09:20:56,108 Line:5853 27:0
 [DEBUG] 2017-12-21 09:20:56,108 Line:5853 28:
 [DEBUG] 2017-12-21 09:20:56,108 Line:5853 29:
 [DEBUG] 2017-12-21 09:20:56,109 Line:5853 30:
 [DEBUG] 2017-12-21 09:20:56,109 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:20:56,109 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:20:56,109 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:20:56,109 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:20:56,110 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:20:56,110 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:20:56,110 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:20:56,110 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:20:56,110 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:20:56,110 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:20:56,110 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:20:56,111 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:20:56,111 Line:5853 43:
 [DEBUG] 2017-12-21 09:20:56,111 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:20:56,111 Line:5853 45:
 [DEBUG] 2017-12-21 09:20:56,111 Line:5853 46:0
 [DEBUG] 2017-12-21 09:20:56,111 Line:5853 47:
 [DEBUG] 2017-12-21 09:20:56,111 Line:5853 48:0
 [DEBUG] 2017-12-21 09:20:56,112 Line:5853 49:
 [DEBUG] 2017-12-21 09:20:56,112 Line:5853 50:1
 [DEBUG] 2017-12-21 09:20:56,112 Line:5853 51:2017-12-21 09:20:56
 [DEBUG] 2017-12-21 09:20:56,112 Line:5853 52:2017-12-21 09:20:56
 [DEBUG] 2017-12-21 09:20:56,112 Line:5853 53:1
 [DEBUG] 2017-12-21 09:20:56,112 Line:5853 54:2017-12-21 09:20:56
 [DEBUG] 2017-12-21 09:20:56,112 Line:5853 55:
 [DEBUG] 2017-12-21 09:20:56,113 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:20:56,113 Line:5853 57:1
 [DEBUG] 2017-12-21 09:20:56,113 Line:5853 58:
 [DEBUG] 2017-12-21 09:20:56,113 Line:5853 59:
 [DEBUG] 2017-12-21 09:20:56,113 Line:5853 60:0
 [DEBUG] 2017-12-21 09:20:56,113 Line:5853 61:2
 [DEBUG] 2017-12-21 09:20:56,124 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:20:56,125 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,125 Line:988 1值：0000500004
 [DEBUG] 2017-12-21 09:20:56,125 Line:988 2值：0000500004
 [DEBUG] 2017-12-21 09:20:56,127 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:20:56,127 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:20:56,127 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:20:56,127 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,127 Line:988 1值：add
 [DEBUG] 2017-12-21 09:20:56,128 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:20:56,128 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:20:56,131 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:20:56,131 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:20:56,131 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:20:56,134 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,135 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:20:56,136 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,136 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:20:56,136 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,136 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:20:56,137 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,137 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:20:56,137 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,138 Line:988 1值：0000500004
 [DEBUG] 2017-12-21 09:20:56,138 Line:988 2值：0000500004
 [DEBUG] 2017-12-21 09:20:56,138 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:20:56,141 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:20:56,141 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:20:56,142 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:20:56,142 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,143 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:20:56,144 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,144 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,146 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:20:56,147 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:20:56,147 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,147 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:20:56,148 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,148 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,149 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:20:56,149 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:56,149 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:20:56,150 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,150 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:20:56,150 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,150 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,152 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:56,153 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:20:56,154 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,154 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:20:56,154 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,154 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,156 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:20:56,156 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:56,158 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:20:56,159 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,159 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:20:56,159 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,159 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,170 Line:1043 ---上述语句时间---11
 [DEBUG] 2017-12-21 09:20:56,170 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:20:56,170 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,170 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,175 Line:1043 ---上述语句时间---5
 [DEBUG] 2017-12-21 09:20:56,175 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:20:56,176 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,176 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:20:56,177 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,177 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:20:56,177 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,177 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,179 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:20:56,179 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:56,179 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:20:56,179 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,180 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,181 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:20:56,181 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:56,181 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:20:56,182 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,182 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:20:56,183 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,183 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:20:56,183 Line:321 flag:true
 [DEBUG] 2017-12-21 09:20:56,184 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:20:56,184 Line:1157 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,186 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:20:56,186 Line:408 ************上述语句执行时间：2
 [DEBUG] 2017-12-21 09:20:56,186 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:20:56,187 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,187 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:20:56,188 Line:321 flag:true
 [DEBUG] 2017-12-21 09:20:56,188 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:20:56,189 Line:1157 1值：0000500004
 [DEBUG] 2017-12-21 09:20:56,189 Line:1157 2值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,191 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:20:56,191 Line:408 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:20:56,192 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:20:56,192 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,192 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,194 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:56,195 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:20:56,195 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:20:56,195 Line:988 1值：b83a05a1_1712210920561010011
 [DEBUG] 2017-12-21 09:20:56,197 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:20:56,197 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:20:56,197 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:20:56,198 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:56,198 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:20:56,199 Line:321 flag:false
 [DEBUG] 2017-12-21 09:20:57,657 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:20:57,658 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:20:57,668 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:20:57,669 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:10,676 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E7%89%9B%E8%82%89%E9%A6%85&time=1513819270674
 [DEBUG] 2017-12-21 09:21:10,677 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[???è??é??,];time=[1513819270674,];
 [DEBUG] 2017-12-21 09:21:10,760 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:21:10,760 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0005,];GoodsFullName=[牛肉馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[nrx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:21:10,761 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:21:10,765 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:21:10,766 Line:5853 1:
 [DEBUG] 2017-12-21 09:21:10,766 Line:5853 2:0000500005
 [DEBUG] 2017-12-21 09:21:10,766 Line:5853 3:b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,766 Line:5853 4:0
 [DEBUG] 2017-12-21 09:21:10,766 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:21:10,767 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:21:10,767 Line:5853 7:xl0005
 [DEBUG] 2017-12-21 09:21:10,767 Line:5853 8:牛肉馅
 [DEBUG] 2017-12-21 09:21:10,767 Line:5853 9:
 [DEBUG] 2017-12-21 09:21:10,767 Line:5853 10:
 [DEBUG] 2017-12-21 09:21:10,767 Line:5853 11:
 [DEBUG] 2017-12-21 09:21:10,767 Line:5853 12:nrx
 [DEBUG] 2017-12-21 09:21:10,768 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:10,768 Line:5853 14:
 [DEBUG] 2017-12-21 09:21:10,768 Line:5853 15:
 [DEBUG] 2017-12-21 09:21:10,768 Line:5853 16:
 [DEBUG] 2017-12-21 09:21:10,768 Line:5853 17:
 [DEBUG] 2017-12-21 09:21:10,768 Line:5853 18:
 [DEBUG] 2017-12-21 09:21:10,769 Line:5853 19:
 [DEBUG] 2017-12-21 09:21:10,769 Line:5853 20:
 [DEBUG] 2017-12-21 09:21:10,769 Line:5853 21:
 [DEBUG] 2017-12-21 09:21:10,769 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:21:10,769 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:21:10,769 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:21:10,770 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:21:10,770 Line:5853 26:0
 [DEBUG] 2017-12-21 09:21:10,770 Line:5853 27:0
 [DEBUG] 2017-12-21 09:21:10,771 Line:5853 28:
 [DEBUG] 2017-12-21 09:21:10,772 Line:5853 29:
 [DEBUG] 2017-12-21 09:21:10,772 Line:5853 30:
 [DEBUG] 2017-12-21 09:21:10,772 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:21:10,772 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:21:10,772 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:21:10,773 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:21:10,773 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:21:10,773 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:21:10,773 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:21:10,773 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:21:10,773 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:21:10,774 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:21:10,774 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:21:10,774 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:21:10,774 Line:5853 43:
 [DEBUG] 2017-12-21 09:21:10,774 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:21:10,774 Line:5853 45:
 [DEBUG] 2017-12-21 09:21:10,775 Line:5853 46:0
 [DEBUG] 2017-12-21 09:21:10,775 Line:5853 47:
 [DEBUG] 2017-12-21 09:21:10,775 Line:5853 48:0
 [DEBUG] 2017-12-21 09:21:10,775 Line:5853 49:
 [DEBUG] 2017-12-21 09:21:10,775 Line:5853 50:1
 [DEBUG] 2017-12-21 09:21:10,776 Line:5853 51:2017-12-21 09:21:10
 [DEBUG] 2017-12-21 09:21:10,776 Line:5853 52:2017-12-21 09:21:10
 [DEBUG] 2017-12-21 09:21:10,776 Line:5853 53:1
 [DEBUG] 2017-12-21 09:21:10,777 Line:5853 54:2017-12-21 09:21:10
 [DEBUG] 2017-12-21 09:21:10,777 Line:5853 55:
 [DEBUG] 2017-12-21 09:21:10,777 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:21:10,777 Line:5853 57:1
 [DEBUG] 2017-12-21 09:21:10,777 Line:5853 58:
 [DEBUG] 2017-12-21 09:21:10,777 Line:5853 59:
 [DEBUG] 2017-12-21 09:21:10,777 Line:5853 60:0
 [DEBUG] 2017-12-21 09:21:10,778 Line:5853 61:2
 [DEBUG] 2017-12-21 09:21:10,779 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:21:10,780 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,780 Line:988 1值：0000500005
 [DEBUG] 2017-12-21 09:21:10,780 Line:988 2值：0000500005
 [DEBUG] 2017-12-21 09:21:10,781 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:21:10,781 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:10,781 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:21:10,781 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,782 Line:988 1值：add
 [DEBUG] 2017-12-21 09:21:10,782 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:21:10,782 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:21:10,782 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:21:10,783 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:10,783 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:10,784 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,784 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:21:10,785 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,785 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:10,785 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,786 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:10,788 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,789 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:21:10,789 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,790 Line:988 1值：0000500005
 [DEBUG] 2017-12-21 09:21:10,790 Line:988 2值：0000500005
 [DEBUG] 2017-12-21 09:21:10,791 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:10,792 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:21:10,792 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:21:10,792 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:10,793 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,793 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:21:10,794 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,794 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,794 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:10,794 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:21:10,795 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,795 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:10,796 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,796 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,796 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:21:10,797 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:10,797 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:21:10,797 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,798 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:21:10,798 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,798 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,798 Line:1043 ---上述语句时间---0
 [DEBUG] 2017-12-21 09:21:10,799 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:21:10,799 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,800 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:10,800 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,800 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,801 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:10,801 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:10,801 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:21:10,802 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,802 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:10,802 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,802 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,803 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:10,804 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:10,804 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,805 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,805 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:10,806 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:10,806 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,807 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:10,807 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,807 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:10,807 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,808 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,808 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:21:10,808 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:10,809 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:10,809 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,809 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,809 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:10,810 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:10,810 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:21:10,810 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,811 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:21:10,811 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,811 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:21:10,812 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:10,813 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:21:10,813 Line:1157 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,813 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:21:10,813 Line:408 ************上述语句执行时间：0
 [DEBUG] 2017-12-21 09:21:10,814 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:21:10,814 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,815 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:21:10,815 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:10,815 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:21:10,815 Line:1157 1值：0000500005
 [DEBUG] 2017-12-21 09:21:10,816 Line:1157 2值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,816 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:21:10,816 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:21:10,816 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:21:10,816 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,817 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,817 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:10,817 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:21:10,818 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:10,818 Line:988 1值：b83a05a1_1712210921107630013
 [DEBUG] 2017-12-21 09:21:10,818 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:21:10,818 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:10,819 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:21:10,819 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:10,820 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:21:10,821 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:12,293 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:21:12,295 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:21:12,301 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:12,303 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:18,653 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E9%A9%B4%E8%82%89%E9%A6%85&time=1513819278648
 [DEBUG] 2017-12-21 09:21:18,654 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[é??è??é??,];time=[1513819278648,];
 [DEBUG] 2017-12-21 09:21:18,734 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:21:18,737 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0006,];GoodsFullName=[驴肉馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[lrx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:21:18,738 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:21:18,741 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:21:18,741 Line:5853 1:
 [DEBUG] 2017-12-21 09:21:18,742 Line:5853 2:0000500006
 [DEBUG] 2017-12-21 09:21:18,742 Line:5853 3:b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,742 Line:5853 4:0
 [DEBUG] 2017-12-21 09:21:18,742 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:21:18,743 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:21:18,743 Line:5853 7:xl0006
 [DEBUG] 2017-12-21 09:21:18,744 Line:5853 8:驴肉馅
 [DEBUG] 2017-12-21 09:21:18,744 Line:5853 9:
 [DEBUG] 2017-12-21 09:21:18,745 Line:5853 10:
 [DEBUG] 2017-12-21 09:21:18,745 Line:5853 11:
 [DEBUG] 2017-12-21 09:21:18,745 Line:5853 12:lrx
 [DEBUG] 2017-12-21 09:21:18,745 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:18,745 Line:5853 14:
 [DEBUG] 2017-12-21 09:21:18,745 Line:5853 15:
 [DEBUG] 2017-12-21 09:21:18,746 Line:5853 16:
 [DEBUG] 2017-12-21 09:21:18,746 Line:5853 17:
 [DEBUG] 2017-12-21 09:21:18,746 Line:5853 18:
 [DEBUG] 2017-12-21 09:21:18,746 Line:5853 19:
 [DEBUG] 2017-12-21 09:21:18,746 Line:5853 20:
 [DEBUG] 2017-12-21 09:21:18,746 Line:5853 21:
 [DEBUG] 2017-12-21 09:21:18,746 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:21:18,747 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:21:18,747 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:21:18,747 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:21:18,747 Line:5853 26:0
 [DEBUG] 2017-12-21 09:21:18,747 Line:5853 27:0
 [DEBUG] 2017-12-21 09:21:18,747 Line:5853 28:
 [DEBUG] 2017-12-21 09:21:18,747 Line:5853 29:
 [DEBUG] 2017-12-21 09:21:18,748 Line:5853 30:
 [DEBUG] 2017-12-21 09:21:18,748 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:21:18,748 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:21:18,748 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:21:18,748 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:21:18,748 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:21:18,748 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:21:18,749 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:21:18,749 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:21:18,749 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:21:18,749 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:21:18,749 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:21:18,749 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:21:18,749 Line:5853 43:
 [DEBUG] 2017-12-21 09:21:18,750 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:21:18,750 Line:5853 45:
 [DEBUG] 2017-12-21 09:21:18,750 Line:5853 46:0
 [DEBUG] 2017-12-21 09:21:18,750 Line:5853 47:
 [DEBUG] 2017-12-21 09:21:18,750 Line:5853 48:0
 [DEBUG] 2017-12-21 09:21:18,750 Line:5853 49:
 [DEBUG] 2017-12-21 09:21:18,750 Line:5853 50:1
 [DEBUG] 2017-12-21 09:21:18,751 Line:5853 51:2017-12-21 09:21:18
 [DEBUG] 2017-12-21 09:21:18,751 Line:5853 52:2017-12-21 09:21:18
 [DEBUG] 2017-12-21 09:21:18,751 Line:5853 53:1
 [DEBUG] 2017-12-21 09:21:18,751 Line:5853 54:2017-12-21 09:21:18
 [DEBUG] 2017-12-21 09:21:18,752 Line:5853 55:
 [DEBUG] 2017-12-21 09:21:18,753 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:21:18,753 Line:5853 57:1
 [DEBUG] 2017-12-21 09:21:18,753 Line:5853 58:
 [DEBUG] 2017-12-21 09:21:18,753 Line:5853 59:
 [DEBUG] 2017-12-21 09:21:18,753 Line:5853 60:0
 [DEBUG] 2017-12-21 09:21:18,753 Line:5853 61:2
 [DEBUG] 2017-12-21 09:21:18,755 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:21:18,755 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,755 Line:988 1值：0000500006
 [DEBUG] 2017-12-21 09:21:18,756 Line:988 2值：0000500006
 [DEBUG] 2017-12-21 09:21:18,756 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:21:18,756 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:18,756 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:21:18,757 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,757 Line:988 1值：add
 [DEBUG] 2017-12-21 09:21:18,757 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:21:18,757 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:21:18,758 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:21:18,758 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:18,758 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:18,759 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,759 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:21:18,759 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,760 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:18,760 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,760 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:18,761 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,761 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:21:18,761 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,761 Line:988 1值：0000500006
 [DEBUG] 2017-12-21 09:21:18,762 Line:988 2值：0000500006
 [DEBUG] 2017-12-21 09:21:18,762 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:18,762 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:21:18,763 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:18,763 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:18,763 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,764 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:21:18,764 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,764 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,764 Line:1043 ---上述语句时间---0
 [DEBUG] 2017-12-21 09:21:18,765 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:21:18,765 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,766 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:18,766 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,766 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,767 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:21:18,767 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:18,767 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:21:18,768 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,769 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:21:18,769 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,769 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,770 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:18,770 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:21:18,770 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,771 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:18,771 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,771 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,772 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:18,772 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:18,772 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:21:18,773 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,773 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:18,773 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,773 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,774 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:18,774 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:18,774 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,774 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,775 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:18,775 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:18,776 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,776 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:18,777 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,777 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:18,777 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,777 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,778 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:21:18,778 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:18,778 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:18,779 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,779 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,779 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:18,780 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:18,780 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:21:18,781 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,781 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:21:18,782 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,782 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:21:18,782 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:18,783 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:21:18,783 Line:1157 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,783 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:21:18,784 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:21:18,784 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:21:18,785 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,785 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:21:18,786 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:18,786 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:21:18,786 Line:1157 1值：0000500006
 [DEBUG] 2017-12-21 09:21:18,786 Line:1157 2值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,787 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:21:18,787 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:21:18,787 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:21:18,787 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,788 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,788 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:18,789 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:21:18,789 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:18,789 Line:988 1值：b83a05a1_1712210921187400015
 [DEBUG] 2017-12-21 09:21:18,790 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:21:18,791 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:18,791 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:21:18,792 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:18,792 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:21:18,793 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:20,249 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:21:20,250 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:21:20,257 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:20,258 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:29,380 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E7%8C%AA%E8%82%89%E9%A6%85&time=1513819289375
 [DEBUG] 2017-12-21 09:21:29,381 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[???è??é??,];time=[1513819289375,];
 [DEBUG] 2017-12-21 09:21:29,447 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:21:29,448 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0007,];GoodsFullName=[猪肉馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[zrx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:21:29,449 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:21:29,455 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:21:29,456 Line:5853 1:
 [DEBUG] 2017-12-21 09:21:29,456 Line:5853 2:0000500007
 [DEBUG] 2017-12-21 09:21:29,456 Line:5853 3:b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,456 Line:5853 4:0
 [DEBUG] 2017-12-21 09:21:29,456 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:21:29,456 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:21:29,457 Line:5853 7:xl0007
 [DEBUG] 2017-12-21 09:21:29,457 Line:5853 8:猪肉馅
 [DEBUG] 2017-12-21 09:21:29,457 Line:5853 9:
 [DEBUG] 2017-12-21 09:21:29,457 Line:5853 10:
 [DEBUG] 2017-12-21 09:21:29,457 Line:5853 11:
 [DEBUG] 2017-12-21 09:21:29,457 Line:5853 12:zrx
 [DEBUG] 2017-12-21 09:21:29,458 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:29,458 Line:5853 14:
 [DEBUG] 2017-12-21 09:21:29,459 Line:5853 15:
 [DEBUG] 2017-12-21 09:21:29,459 Line:5853 16:
 [DEBUG] 2017-12-21 09:21:29,459 Line:5853 17:
 [DEBUG] 2017-12-21 09:21:29,459 Line:5853 18:
 [DEBUG] 2017-12-21 09:21:29,459 Line:5853 19:
 [DEBUG] 2017-12-21 09:21:29,460 Line:5853 20:
 [DEBUG] 2017-12-21 09:21:29,460 Line:5853 21:
 [DEBUG] 2017-12-21 09:21:29,460 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:21:29,460 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:21:29,460 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:21:29,460 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:21:29,461 Line:5853 26:0
 [DEBUG] 2017-12-21 09:21:29,461 Line:5853 27:0
 [DEBUG] 2017-12-21 09:21:29,461 Line:5853 28:
 [DEBUG] 2017-12-21 09:21:29,461 Line:5853 29:
 [DEBUG] 2017-12-21 09:21:29,461 Line:5853 30:
 [DEBUG] 2017-12-21 09:21:29,461 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:21:29,461 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:21:29,462 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:21:29,462 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:21:29,462 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:21:29,462 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:21:29,462 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:21:29,462 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:21:29,462 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:21:29,463 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:21:29,463 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:21:29,463 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:21:29,463 Line:5853 43:
 [DEBUG] 2017-12-21 09:21:29,463 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:21:29,463 Line:5853 45:
 [DEBUG] 2017-12-21 09:21:29,464 Line:5853 46:0
 [DEBUG] 2017-12-21 09:21:29,464 Line:5853 47:
 [DEBUG] 2017-12-21 09:21:29,464 Line:5853 48:0
 [DEBUG] 2017-12-21 09:21:29,464 Line:5853 49:
 [DEBUG] 2017-12-21 09:21:29,464 Line:5853 50:1
 [DEBUG] 2017-12-21 09:21:29,464 Line:5853 51:2017-12-21 09:21:29
 [DEBUG] 2017-12-21 09:21:29,464 Line:5853 52:2017-12-21 09:21:29
 [DEBUG] 2017-12-21 09:21:29,465 Line:5853 53:1
 [DEBUG] 2017-12-21 09:21:29,465 Line:5853 54:2017-12-21 09:21:29
 [DEBUG] 2017-12-21 09:21:29,465 Line:5853 55:
 [DEBUG] 2017-12-21 09:21:29,465 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:21:29,466 Line:5853 57:1
 [DEBUG] 2017-12-21 09:21:29,466 Line:5853 58:
 [DEBUG] 2017-12-21 09:21:29,466 Line:5853 59:
 [DEBUG] 2017-12-21 09:21:29,467 Line:5853 60:0
 [DEBUG] 2017-12-21 09:21:29,467 Line:5853 61:2
 [DEBUG] 2017-12-21 09:21:29,469 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:21:29,469 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,469 Line:988 1值：0000500007
 [DEBUG] 2017-12-21 09:21:29,469 Line:988 2值：0000500007
 [DEBUG] 2017-12-21 09:21:29,470 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:21:29,470 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:29,470 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:21:29,470 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,470 Line:988 1值：add
 [DEBUG] 2017-12-21 09:21:29,471 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:21:29,471 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:21:29,471 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:21:29,472 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:29,472 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:29,473 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,473 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:21:29,474 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,474 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:29,475 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,475 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:29,476 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,476 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:21:29,477 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,477 Line:988 1值：0000500007
 [DEBUG] 2017-12-21 09:21:29,477 Line:988 2值：0000500007
 [DEBUG] 2017-12-21 09:21:29,477 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:29,478 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:21:29,478 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:29,478 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:29,479 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,479 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:21:29,479 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,480 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,480 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:29,480 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:21:29,481 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,482 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:29,482 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,483 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,484 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:21:29,484 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:29,485 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:21:29,485 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,486 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:21:29,486 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,486 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,487 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:29,487 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:21:29,488 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,488 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:29,488 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,489 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,489 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:29,490 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:29,490 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:21:29,491 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,491 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:29,491 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,491 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,492 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:29,492 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:29,493 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,493 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,493 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:29,494 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:29,494 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,495 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:29,495 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,495 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:29,496 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,496 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,497 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:21:29,497 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:29,497 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:29,497 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,497 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,498 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:29,499 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:29,499 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:21:29,500 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,501 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:21:29,501 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,502 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:21:29,502 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:29,503 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:21:29,503 Line:1157 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,503 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:21:29,504 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:21:29,504 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:21:29,505 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,506 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:21:29,507 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:29,508 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:21:29,508 Line:1157 1值：0000500007
 [DEBUG] 2017-12-21 09:21:29,509 Line:1157 2值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,509 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:21:29,509 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:21:29,509 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:21:29,510 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,510 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,525 Line:1043 ---上述语句时间---16
 [DEBUG] 2017-12-21 09:21:29,525 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:21:29,526 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:29,526 Line:988 1值：b83a05a1_1712210921294530017
 [DEBUG] 2017-12-21 09:21:29,526 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:21:29,526 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:29,527 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:21:29,530 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:29,530 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:21:29,531 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:30,994 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:21:30,996 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:21:31,004 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:31,005 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:36,659 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E9%9F%AD%E8%8F%9C%E9%A6%85&time=1513819296654
 [DEBUG] 2017-12-21 09:21:36,660 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[é??è??é??,];time=[1513819296654,];
 [DEBUG] 2017-12-21 09:21:36,737 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:21:36,738 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0008,];GoodsFullName=[韭菜馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[jcx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:21:36,739 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:21:36,744 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:21:36,744 Line:5853 1:
 [DEBUG] 2017-12-21 09:21:36,746 Line:5853 2:0000500008
 [DEBUG] 2017-12-21 09:21:36,746 Line:5853 3:b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,746 Line:5853 4:0
 [DEBUG] 2017-12-21 09:21:36,746 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:21:36,746 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:21:36,746 Line:5853 7:xl0008
 [DEBUG] 2017-12-21 09:21:36,746 Line:5853 8:韭菜馅
 [DEBUG] 2017-12-21 09:21:36,747 Line:5853 9:
 [DEBUG] 2017-12-21 09:21:36,747 Line:5853 10:
 [DEBUG] 2017-12-21 09:21:36,747 Line:5853 11:
 [DEBUG] 2017-12-21 09:21:36,748 Line:5853 12:jcx
 [DEBUG] 2017-12-21 09:21:36,749 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:36,750 Line:5853 14:
 [DEBUG] 2017-12-21 09:21:36,750 Line:5853 15:
 [DEBUG] 2017-12-21 09:21:36,750 Line:5853 16:
 [DEBUG] 2017-12-21 09:21:36,750 Line:5853 17:
 [DEBUG] 2017-12-21 09:21:36,750 Line:5853 18:
 [DEBUG] 2017-12-21 09:21:36,751 Line:5853 19:
 [DEBUG] 2017-12-21 09:21:36,751 Line:5853 20:
 [DEBUG] 2017-12-21 09:21:36,751 Line:5853 21:
 [DEBUG] 2017-12-21 09:21:36,751 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:21:36,752 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:21:36,752 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:21:36,752 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:21:36,752 Line:5853 26:0
 [DEBUG] 2017-12-21 09:21:36,752 Line:5853 27:0
 [DEBUG] 2017-12-21 09:21:36,752 Line:5853 28:
 [DEBUG] 2017-12-21 09:21:36,753 Line:5853 29:
 [DEBUG] 2017-12-21 09:21:36,753 Line:5853 30:
 [DEBUG] 2017-12-21 09:21:36,753 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:21:36,753 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:21:36,753 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:21:36,754 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:21:36,754 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:21:36,755 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:21:36,755 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:21:36,755 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:21:36,755 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:21:36,755 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:21:36,755 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:21:36,755 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:21:36,756 Line:5853 43:
 [DEBUG] 2017-12-21 09:21:36,756 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:21:36,756 Line:5853 45:
 [DEBUG] 2017-12-21 09:21:36,756 Line:5853 46:0
 [DEBUG] 2017-12-21 09:21:36,756 Line:5853 47:
 [DEBUG] 2017-12-21 09:21:36,756 Line:5853 48:0
 [DEBUG] 2017-12-21 09:21:36,756 Line:5853 49:
 [DEBUG] 2017-12-21 09:21:36,757 Line:5853 50:1
 [DEBUG] 2017-12-21 09:21:36,757 Line:5853 51:2017-12-21 09:21:36
 [DEBUG] 2017-12-21 09:21:36,757 Line:5853 52:2017-12-21 09:21:36
 [DEBUG] 2017-12-21 09:21:36,757 Line:5853 53:1
 [DEBUG] 2017-12-21 09:21:36,757 Line:5853 54:2017-12-21 09:21:36
 [DEBUG] 2017-12-21 09:21:36,757 Line:5853 55:
 [DEBUG] 2017-12-21 09:21:36,757 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:21:36,757 Line:5853 57:1
 [DEBUG] 2017-12-21 09:21:36,758 Line:5853 58:
 [DEBUG] 2017-12-21 09:21:36,758 Line:5853 59:
 [DEBUG] 2017-12-21 09:21:36,758 Line:5853 60:0
 [DEBUG] 2017-12-21 09:21:36,758 Line:5853 61:2
 [DEBUG] 2017-12-21 09:21:36,760 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:21:36,760 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,760 Line:988 1值：0000500008
 [DEBUG] 2017-12-21 09:21:36,760 Line:988 2值：0000500008
 [DEBUG] 2017-12-21 09:21:36,761 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:21:36,761 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:36,761 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:21:36,761 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,761 Line:988 1值：add
 [DEBUG] 2017-12-21 09:21:36,761 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:21:36,762 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:21:36,762 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:21:36,762 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:36,763 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:36,764 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,764 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:21:36,766 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,767 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:36,768 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,768 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:36,770 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,770 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:21:36,770 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,770 Line:988 1值：0000500008
 [DEBUG] 2017-12-21 09:21:36,770 Line:988 2值：0000500008
 [DEBUG] 2017-12-21 09:21:36,771 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:36,771 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:21:36,772 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:36,772 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:36,772 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,773 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:21:36,773 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,773 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,773 Line:1043 ---上述语句时间---0
 [DEBUG] 2017-12-21 09:21:36,774 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:21:36,774 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,775 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:36,775 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,775 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,782 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:21:36,782 Line:1043 ---上述语句时间---7
 [DEBUG] 2017-12-21 09:21:36,782 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:21:36,783 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,783 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:21:36,784 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,784 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,784 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:36,785 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:21:36,785 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,786 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:36,786 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,786 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,792 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:36,793 Line:1043 ---上述语句时间---7
 [DEBUG] 2017-12-21 09:21:36,793 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:21:36,794 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,794 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:36,794 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,794 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,795 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:36,795 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:36,795 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,795 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,796 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:36,796 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:36,797 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,797 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:36,798 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,798 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:36,799 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,799 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,805 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:21:36,805 Line:1043 ---上述语句时间---7
 [DEBUG] 2017-12-21 09:21:36,806 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:36,806 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,806 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,813 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:36,813 Line:1043 ---上述语句时间---7
 [DEBUG] 2017-12-21 09:21:36,813 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:21:36,814 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,815 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:21:36,815 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,816 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:21:36,816 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:36,816 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:21:36,817 Line:1157 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,820 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:21:36,820 Line:408 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:21:36,820 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:21:36,821 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,821 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:21:36,822 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:36,822 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:21:36,822 Line:1157 1值：0000500008
 [DEBUG] 2017-12-21 09:21:36,822 Line:1157 2值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,826 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:21:36,826 Line:408 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:21:36,826 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:21:36,826 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,826 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,827 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:36,827 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:21:36,827 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:36,827 Line:988 1值：b83a05a1_1712210921367440019
 [DEBUG] 2017-12-21 09:21:36,828 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:21:36,828 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:21:36,828 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:21:36,829 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:36,829 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:21:36,831 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:38,294 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:21:38,296 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:21:38,303 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:38,304 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:56,176 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E5%9C%9F%E8%B1%86%E9%A6%85&time=1513819316170
 [DEBUG] 2017-12-21 09:21:56,177 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[???è±?é??,];time=[1513819316170,];
 [DEBUG] 2017-12-21 09:21:56,254 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:21:56,254 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0009,];GoodsFullName=[土豆馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[tdx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:21:56,255 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:21:56,280 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:21:56,280 Line:5853 1:
 [DEBUG] 2017-12-21 09:21:56,280 Line:5853 2:0000500009
 [DEBUG] 2017-12-21 09:21:56,281 Line:5853 3:b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,281 Line:5853 4:0
 [DEBUG] 2017-12-21 09:21:56,281 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:21:56,281 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:21:56,281 Line:5853 7:xl0009
 [DEBUG] 2017-12-21 09:21:56,281 Line:5853 8:土豆馅
 [DEBUG] 2017-12-21 09:21:56,281 Line:5853 9:
 [DEBUG] 2017-12-21 09:21:56,282 Line:5853 10:
 [DEBUG] 2017-12-21 09:21:56,282 Line:5853 11:
 [DEBUG] 2017-12-21 09:21:56,282 Line:5853 12:tdx
 [DEBUG] 2017-12-21 09:21:56,282 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:56,282 Line:5853 14:
 [DEBUG] 2017-12-21 09:21:56,282 Line:5853 15:
 [DEBUG] 2017-12-21 09:21:56,282 Line:5853 16:
 [DEBUG] 2017-12-21 09:21:56,283 Line:5853 17:
 [DEBUG] 2017-12-21 09:21:56,283 Line:5853 18:
 [DEBUG] 2017-12-21 09:21:56,283 Line:5853 19:
 [DEBUG] 2017-12-21 09:21:56,283 Line:5853 20:
 [DEBUG] 2017-12-21 09:21:56,283 Line:5853 21:
 [DEBUG] 2017-12-21 09:21:56,283 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:21:56,283 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:21:56,284 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:21:56,284 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:21:56,284 Line:5853 26:0
 [DEBUG] 2017-12-21 09:21:56,284 Line:5853 27:0
 [DEBUG] 2017-12-21 09:21:56,284 Line:5853 28:
 [DEBUG] 2017-12-21 09:21:56,284 Line:5853 29:
 [DEBUG] 2017-12-21 09:21:56,284 Line:5853 30:
 [DEBUG] 2017-12-21 09:21:56,285 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:21:56,285 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:21:56,285 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:21:56,285 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:21:56,285 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:21:56,285 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:21:56,285 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:21:56,286 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:21:56,286 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:21:56,286 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:21:56,286 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:21:56,286 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:21:56,286 Line:5853 43:
 [DEBUG] 2017-12-21 09:21:56,286 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:21:56,287 Line:5853 45:
 [DEBUG] 2017-12-21 09:21:56,287 Line:5853 46:0
 [DEBUG] 2017-12-21 09:21:56,287 Line:5853 47:
 [DEBUG] 2017-12-21 09:21:56,287 Line:5853 48:0
 [DEBUG] 2017-12-21 09:21:56,287 Line:5853 49:
 [DEBUG] 2017-12-21 09:21:56,287 Line:5853 50:1
 [DEBUG] 2017-12-21 09:21:56,287 Line:5853 51:2017-12-21 09:21:56
 [DEBUG] 2017-12-21 09:21:56,288 Line:5853 52:2017-12-21 09:21:56
 [DEBUG] 2017-12-21 09:21:56,288 Line:5853 53:1
 [DEBUG] 2017-12-21 09:21:56,301 Line:5853 54:2017-12-21 09:21:56
 [DEBUG] 2017-12-21 09:21:56,301 Line:5853 55:
 [DEBUG] 2017-12-21 09:21:56,301 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:21:56,301 Line:5853 57:1
 [DEBUG] 2017-12-21 09:21:56,301 Line:5853 58:
 [DEBUG] 2017-12-21 09:21:56,303 Line:5853 59:
 [DEBUG] 2017-12-21 09:21:56,303 Line:5853 60:0
 [DEBUG] 2017-12-21 09:21:56,303 Line:5853 61:2
 [DEBUG] 2017-12-21 09:21:56,315 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:21:56,315 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,315 Line:988 1值：0000500009
 [DEBUG] 2017-12-21 09:21:56,316 Line:988 2值：0000500009
 [DEBUG] 2017-12-21 09:21:56,316 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:21:56,317 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:56,317 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:21:56,317 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,317 Line:988 1值：add
 [DEBUG] 2017-12-21 09:21:56,317 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:21:56,318 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:21:56,321 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:21:56,321 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:21:56,321 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:56,325 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,325 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:21:56,327 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,327 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:56,328 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,329 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:21:56,329 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,330 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:21:56,330 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,330 Line:988 1值：0000500009
 [DEBUG] 2017-12-21 09:21:56,330 Line:988 2值：0000500009
 [DEBUG] 2017-12-21 09:21:56,330 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:21:56,333 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:21:56,333 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:21:56,333 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:21:56,334 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,335 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:21:56,335 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,335 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,338 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:21:56,338 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:21:56,339 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,340 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:56,340 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,340 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,342 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:21:56,342 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:56,343 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:21:56,344 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,344 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:21:56,344 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,344 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,348 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:21:56,348 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:21:56,349 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,349 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:56,349 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,350 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,351 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:56,351 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:56,352 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:21:56,352 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,353 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:56,353 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,353 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,364 Line:1043 ---上述语句时间---11
 [DEBUG] 2017-12-21 09:21:56,365 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:21:56,365 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,365 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,369 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:21:56,369 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:56,370 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,370 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:21:56,371 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,371 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:21:56,371 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,371 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,373 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:21:56,373 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:56,373 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:21:56,373 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,373 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,375 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:21:56,375 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:21:56,376 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:21:56,376 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,377 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:21:56,378 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,378 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:21:56,380 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:56,380 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:21:56,380 Line:1157 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,382 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:21:56,382 Line:408 ************上述语句执行时间：2
 [DEBUG] 2017-12-21 09:21:56,383 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:21:56,383 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,384 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:21:56,384 Line:321 flag:true
 [DEBUG] 2017-12-21 09:21:56,384 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:21:56,385 Line:1157 1值：0000500009
 [DEBUG] 2017-12-21 09:21:56,385 Line:1157 2值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,387 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:21:56,387 Line:408 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:21:56,387 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:21:56,387 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,387 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,390 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:21:56,390 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:21:56,390 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:21:56,391 Line:988 1值：b83a05a1_1712210921562720021
 [DEBUG] 2017-12-21 09:21:56,394 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:21:56,394 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:21:56,394 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:21:56,395 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:56,395 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:21:56,396 Line:321 flag:false
 [DEBUG] 2017-12-21 09:21:57,885 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:21:57,886 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:21:57,897 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:21:57,897 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:22:12,654 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E5%86%AC%E7%93%9C%E9%A6%85&time=1513819332650
 [DEBUG] 2017-12-21 09:22:12,657 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[??????é??,];time=[1513819332650,];
 [DEBUG] 2017-12-21 09:22:12,741 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:22:12,741 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0010,];GoodsFullName=[冬瓜馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[dgx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:22:12,742 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:22:12,745 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:22:12,745 Line:5853 1:
 [DEBUG] 2017-12-21 09:22:12,746 Line:5853 2:000050000A
 [DEBUG] 2017-12-21 09:22:12,747 Line:5853 3:b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,747 Line:5853 4:0
 [DEBUG] 2017-12-21 09:22:12,747 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:22:12,747 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:22:12,748 Line:5853 7:xl0010
 [DEBUG] 2017-12-21 09:22:12,748 Line:5853 8:冬瓜馅
 [DEBUG] 2017-12-21 09:22:12,748 Line:5853 9:
 [DEBUG] 2017-12-21 09:22:12,748 Line:5853 10:
 [DEBUG] 2017-12-21 09:22:12,748 Line:5853 11:
 [DEBUG] 2017-12-21 09:22:12,748 Line:5853 12:dgx
 [DEBUG] 2017-12-21 09:22:12,749 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:22:12,749 Line:5853 14:
 [DEBUG] 2017-12-21 09:22:12,749 Line:5853 15:
 [DEBUG] 2017-12-21 09:22:12,749 Line:5853 16:
 [DEBUG] 2017-12-21 09:22:12,749 Line:5853 17:
 [DEBUG] 2017-12-21 09:22:12,749 Line:5853 18:
 [DEBUG] 2017-12-21 09:22:12,750 Line:5853 19:
 [DEBUG] 2017-12-21 09:22:12,750 Line:5853 20:
 [DEBUG] 2017-12-21 09:22:12,750 Line:5853 21:
 [DEBUG] 2017-12-21 09:22:12,750 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:22:12,750 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:22:12,750 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:22:12,750 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:22:12,751 Line:5853 26:0
 [DEBUG] 2017-12-21 09:22:12,751 Line:5853 27:0
 [DEBUG] 2017-12-21 09:22:12,751 Line:5853 28:
 [DEBUG] 2017-12-21 09:22:12,751 Line:5853 29:
 [DEBUG] 2017-12-21 09:22:12,751 Line:5853 30:
 [DEBUG] 2017-12-21 09:22:12,751 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:22:12,751 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:22:12,751 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:22:12,752 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:22:12,752 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:22:12,752 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:22:12,752 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:22:12,752 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:22:12,752 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:22:12,752 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:22:12,753 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:22:12,753 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:22:12,753 Line:5853 43:
 [DEBUG] 2017-12-21 09:22:12,753 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:22:12,753 Line:5853 45:
 [DEBUG] 2017-12-21 09:22:12,753 Line:5853 46:0
 [DEBUG] 2017-12-21 09:22:12,753 Line:5853 47:
 [DEBUG] 2017-12-21 09:22:12,754 Line:5853 48:0
 [DEBUG] 2017-12-21 09:22:12,754 Line:5853 49:
 [DEBUG] 2017-12-21 09:22:12,754 Line:5853 50:1
 [DEBUG] 2017-12-21 09:22:12,754 Line:5853 51:2017-12-21 09:22:12
 [DEBUG] 2017-12-21 09:22:12,755 Line:5853 52:2017-12-21 09:22:12
 [DEBUG] 2017-12-21 09:22:12,756 Line:5853 53:1
 [DEBUG] 2017-12-21 09:22:12,756 Line:5853 54:2017-12-21 09:22:12
 [DEBUG] 2017-12-21 09:22:12,757 Line:5853 55:
 [DEBUG] 2017-12-21 09:22:12,757 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:22:12,757 Line:5853 57:1
 [DEBUG] 2017-12-21 09:22:12,758 Line:5853 58:
 [DEBUG] 2017-12-21 09:22:12,758 Line:5853 59:
 [DEBUG] 2017-12-21 09:22:12,758 Line:5853 60:0
 [DEBUG] 2017-12-21 09:22:12,758 Line:5853 61:2
 [DEBUG] 2017-12-21 09:22:12,760 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:22:12,760 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,761 Line:988 1值：000050000A
 [DEBUG] 2017-12-21 09:22:12,761 Line:988 2值：000050000A
 [DEBUG] 2017-12-21 09:22:12,761 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:22:12,761 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,762 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:22:12,762 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,762 Line:988 1值：add
 [DEBUG] 2017-12-21 09:22:12,762 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:22:12,762 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:22:12,763 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:22:12,763 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,763 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:22:12,764 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,764 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:22:12,765 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,765 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:22:12,765 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,766 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:22:12,766 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,766 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:22:12,767 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,767 Line:988 1值：000050000A
 [DEBUG] 2017-12-21 09:22:12,767 Line:988 2值：000050000A
 [DEBUG] 2017-12-21 09:22:12,767 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:22:12,768 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:22:12,768 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:12,768 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:22:12,769 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,769 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:22:12,769 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,769 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,770 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,770 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:22:12,772 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,773 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:22:12,773 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,773 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,774 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:22:12,774 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,774 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:22:12,775 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,775 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:22:12,775 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,775 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,776 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,776 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:22:12,777 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,777 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:22:12,777 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,777 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,778 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:22:12,778 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,778 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:22:12,779 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,779 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:22:12,780 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,780 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,780 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,781 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:22:12,781 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,781 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,782 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,782 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:22:12,782 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,783 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:22:12,783 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,783 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:22:12,784 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,784 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,784 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:22:12,784 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,785 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:22:12,785 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,785 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,785 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:22:12,786 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,786 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:22:12,786 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,787 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:22:12,787 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,788 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:22:12,788 Line:321 flag:true
 [DEBUG] 2017-12-21 09:22:12,789 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:22:12,789 Line:1157 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,789 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:22:12,790 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:22:12,790 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:22:12,790 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,791 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:22:12,791 Line:321 flag:true
 [DEBUG] 2017-12-21 09:22:12,791 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:22:12,792 Line:1157 1值：000050000A
 [DEBUG] 2017-12-21 09:22:12,792 Line:1157 2值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,793 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:22:12,793 Line:408 ************上述语句执行时间：2
 [DEBUG] 2017-12-21 09:22:12,793 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:22:12,793 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,793 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,794 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,794 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:22:12,794 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:12,794 Line:988 1值：b83a05a1_1712210922127440023
 [DEBUG] 2017-12-21 09:22:12,795 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:22:12,795 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:12,795 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:22:12,795 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:12,796 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:22:12,796 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:14,270 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:22:14,272 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:22:14,279 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:22:14,280 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:22:23,047 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E5%8D%97%E7%93%9C%E9%A6%85&time=1513819343043
 [DEBUG] 2017-12-21 09:22:23,048 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[??????é??,];time=[1513819343043,];
 [DEBUG] 2017-12-21 09:22:23,119 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:22:23,120 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0011,];GoodsFullName=[南瓜馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[ngx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:22:23,121 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:22:23,127 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:22:23,128 Line:5853 1:
 [DEBUG] 2017-12-21 09:22:23,128 Line:5853 2:000050000B
 [DEBUG] 2017-12-21 09:22:23,128 Line:5853 3:b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,128 Line:5853 4:0
 [DEBUG] 2017-12-21 09:22:23,129 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:22:23,129 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:22:23,129 Line:5853 7:xl0011
 [DEBUG] 2017-12-21 09:22:23,129 Line:5853 8:南瓜馅
 [DEBUG] 2017-12-21 09:22:23,129 Line:5853 9:
 [DEBUG] 2017-12-21 09:22:23,129 Line:5853 10:
 [DEBUG] 2017-12-21 09:22:23,129 Line:5853 11:
 [DEBUG] 2017-12-21 09:22:23,130 Line:5853 12:ngx
 [DEBUG] 2017-12-21 09:22:23,130 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:22:23,130 Line:5853 14:
 [DEBUG] 2017-12-21 09:22:23,130 Line:5853 15:
 [DEBUG] 2017-12-21 09:22:23,130 Line:5853 16:
 [DEBUG] 2017-12-21 09:22:23,130 Line:5853 17:
 [DEBUG] 2017-12-21 09:22:23,130 Line:5853 18:
 [DEBUG] 2017-12-21 09:22:23,131 Line:5853 19:
 [DEBUG] 2017-12-21 09:22:23,131 Line:5853 20:
 [DEBUG] 2017-12-21 09:22:23,131 Line:5853 21:
 [DEBUG] 2017-12-21 09:22:23,131 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:22:23,131 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:22:23,131 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:22:23,131 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:22:23,132 Line:5853 26:0
 [DEBUG] 2017-12-21 09:22:23,132 Line:5853 27:0
 [DEBUG] 2017-12-21 09:22:23,132 Line:5853 28:
 [DEBUG] 2017-12-21 09:22:23,132 Line:5853 29:
 [DEBUG] 2017-12-21 09:22:23,132 Line:5853 30:
 [DEBUG] 2017-12-21 09:22:23,132 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:22:23,132 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:22:23,133 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:22:23,133 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:22:23,133 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:22:23,133 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:22:23,133 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:22:23,133 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:22:23,133 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:22:23,134 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:22:23,134 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:22:23,134 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:22:23,134 Line:5853 43:
 [DEBUG] 2017-12-21 09:22:23,135 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:22:23,135 Line:5853 45:
 [DEBUG] 2017-12-21 09:22:23,135 Line:5853 46:0
 [DEBUG] 2017-12-21 09:22:23,137 Line:5853 47:
 [DEBUG] 2017-12-21 09:22:23,137 Line:5853 48:0
 [DEBUG] 2017-12-21 09:22:23,137 Line:5853 49:
 [DEBUG] 2017-12-21 09:22:23,137 Line:5853 50:1
 [DEBUG] 2017-12-21 09:22:23,138 Line:5853 51:2017-12-21 09:22:23
 [DEBUG] 2017-12-21 09:22:23,138 Line:5853 52:2017-12-21 09:22:23
 [DEBUG] 2017-12-21 09:22:23,138 Line:5853 53:1
 [DEBUG] 2017-12-21 09:22:23,139 Line:5853 54:2017-12-21 09:22:23
 [DEBUG] 2017-12-21 09:22:23,139 Line:5853 55:
 [DEBUG] 2017-12-21 09:22:23,139 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:22:23,139 Line:5853 57:1
 [DEBUG] 2017-12-21 09:22:23,139 Line:5853 58:
 [DEBUG] 2017-12-21 09:22:23,139 Line:5853 59:
 [DEBUG] 2017-12-21 09:22:23,140 Line:5853 60:0
 [DEBUG] 2017-12-21 09:22:23,140 Line:5853 61:2
 [DEBUG] 2017-12-21 09:22:23,141 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:22:23,141 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,142 Line:988 1值：000050000B
 [DEBUG] 2017-12-21 09:22:23,142 Line:988 2值：000050000B
 [DEBUG] 2017-12-21 09:22:23,142 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:22:23,142 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:23,142 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:22:23,143 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,143 Line:988 1值：add
 [DEBUG] 2017-12-21 09:22:23,143 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:22:23,143 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:22:23,144 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:22:23,144 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:23,144 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:22:23,145 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,145 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:22:23,145 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,146 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:22:23,146 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,146 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:22:23,147 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,147 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:22:23,147 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,148 Line:988 1值：000050000B
 [DEBUG] 2017-12-21 09:22:23,148 Line:988 2值：000050000B
 [DEBUG] 2017-12-21 09:22:23,148 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:22:23,149 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:22:23,149 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:23,149 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:22:23,150 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,150 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:22:23,150 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,150 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,151 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:23,151 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:22:23,152 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,153 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:22:23,153 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,154 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,154 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:22:23,155 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:23,155 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:22:23,155 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,156 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:22:23,156 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,156 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,157 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:23,157 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:22:23,158 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,158 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:22:23,159 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,159 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,160 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:22:23,160 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:23,160 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:22:23,161 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,161 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:22:23,161 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,161 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,162 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:23,162 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:22:23,162 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,163 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,163 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:23,163 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:22:23,164 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,165 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:22:23,165 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,165 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:22:23,166 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,166 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,166 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:22:23,167 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:23,167 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:22:23,167 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,167 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,168 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:22:23,168 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:23,169 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:22:23,170 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,170 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:22:23,171 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,171 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:22:23,172 Line:321 flag:true
 [DEBUG] 2017-12-21 09:22:23,172 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:22:23,173 Line:1157 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,173 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:22:23,174 Line:408 ************上述语句执行时间：2
 [DEBUG] 2017-12-21 09:22:23,174 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:22:23,174 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,175 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:22:23,175 Line:321 flag:true
 [DEBUG] 2017-12-21 09:22:23,176 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:22:23,176 Line:1157 1值：000050000B
 [DEBUG] 2017-12-21 09:22:23,176 Line:1157 2值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,177 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:22:23,177 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:22:23,177 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:22:23,177 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,178 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,179 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:23,180 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:22:23,180 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:23,180 Line:988 1值：b83a05a1_1712210922231260025
 [DEBUG] 2017-12-21 09:22:23,181 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:22:23,181 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:23,181 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:22:23,182 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:23,182 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:22:23,183 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:24,654 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:22:24,655 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:22:24,663 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:22:24,664 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:22:30,918 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E8%8A%A5%E8%8F%9C%E9%A6%85&time=1513819350914
 [DEBUG] 2017-12-21 09:22:30,920 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[è??è??é??,];time=[1513819350914,];
 [DEBUG] 2017-12-21 09:22:30,995 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:22:30,995 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0012,];GoodsFullName=[芥菜馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[jcx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:22:30,996 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:22:30,999 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:22:31,001 Line:5853 1:
 [DEBUG] 2017-12-21 09:22:31,001 Line:5853 2:000050000C
 [DEBUG] 2017-12-21 09:22:31,001 Line:5853 3:b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,002 Line:5853 4:0
 [DEBUG] 2017-12-21 09:22:31,002 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:22:31,002 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:22:31,002 Line:5853 7:xl0012
 [DEBUG] 2017-12-21 09:22:31,002 Line:5853 8:芥菜馅
 [DEBUG] 2017-12-21 09:22:31,002 Line:5853 9:
 [DEBUG] 2017-12-21 09:22:31,003 Line:5853 10:
 [DEBUG] 2017-12-21 09:22:31,003 Line:5853 11:
 [DEBUG] 2017-12-21 09:22:31,003 Line:5853 12:jcx
 [DEBUG] 2017-12-21 09:22:31,004 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:22:31,004 Line:5853 14:
 [DEBUG] 2017-12-21 09:22:31,004 Line:5853 15:
 [DEBUG] 2017-12-21 09:22:31,004 Line:5853 16:
 [DEBUG] 2017-12-21 09:22:31,004 Line:5853 17:
 [DEBUG] 2017-12-21 09:22:31,005 Line:5853 18:
 [DEBUG] 2017-12-21 09:22:31,005 Line:5853 19:
 [DEBUG] 2017-12-21 09:22:31,005 Line:5853 20:
 [DEBUG] 2017-12-21 09:22:31,005 Line:5853 21:
 [DEBUG] 2017-12-21 09:22:31,005 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:22:31,005 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:22:31,005 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:22:31,006 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:22:31,006 Line:5853 26:0
 [DEBUG] 2017-12-21 09:22:31,006 Line:5853 27:0
 [DEBUG] 2017-12-21 09:22:31,006 Line:5853 28:
 [DEBUG] 2017-12-21 09:22:31,006 Line:5853 29:
 [DEBUG] 2017-12-21 09:22:31,006 Line:5853 30:
 [DEBUG] 2017-12-21 09:22:31,007 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:22:31,007 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:22:31,007 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:22:31,007 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:22:31,007 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:22:31,008 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:22:31,008 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:22:31,009 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:22:31,009 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:22:31,009 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:22:31,009 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:22:31,009 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:22:31,009 Line:5853 43:
 [DEBUG] 2017-12-21 09:22:31,010 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:22:31,010 Line:5853 45:
 [DEBUG] 2017-12-21 09:22:31,010 Line:5853 46:0
 [DEBUG] 2017-12-21 09:22:31,010 Line:5853 47:
 [DEBUG] 2017-12-21 09:22:31,010 Line:5853 48:0
 [DEBUG] 2017-12-21 09:22:31,010 Line:5853 49:
 [DEBUG] 2017-12-21 09:22:31,010 Line:5853 50:1
 [DEBUG] 2017-12-21 09:22:31,011 Line:5853 51:2017-12-21 09:22:30
 [DEBUG] 2017-12-21 09:22:31,011 Line:5853 52:2017-12-21 09:22:30
 [DEBUG] 2017-12-21 09:22:31,011 Line:5853 53:1
 [DEBUG] 2017-12-21 09:22:31,011 Line:5853 54:2017-12-21 09:22:30
 [DEBUG] 2017-12-21 09:22:31,011 Line:5853 55:
 [DEBUG] 2017-12-21 09:22:31,011 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:22:31,011 Line:5853 57:1
 [DEBUG] 2017-12-21 09:22:31,012 Line:5853 58:
 [DEBUG] 2017-12-21 09:22:31,012 Line:5853 59:
 [DEBUG] 2017-12-21 09:22:31,012 Line:5853 60:0
 [DEBUG] 2017-12-21 09:22:31,012 Line:5853 61:2
 [DEBUG] 2017-12-21 09:22:31,019 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:22:31,020 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,020 Line:988 1值：000050000C
 [DEBUG] 2017-12-21 09:22:31,020 Line:988 2值：000050000C
 [DEBUG] 2017-12-21 09:22:31,020 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:22:31,021 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:31,021 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:22:31,021 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,021 Line:988 1值：add
 [DEBUG] 2017-12-21 09:22:31,021 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:22:31,021 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:22:31,022 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:22:31,022 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,023 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:22:31,023 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,024 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:22:31,024 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,024 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:22:31,025 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,025 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:22:31,026 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,026 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:22:31,026 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,026 Line:988 1值：000050000C
 [DEBUG] 2017-12-21 09:22:31,026 Line:988 2值：000050000C
 [DEBUG] 2017-12-21 09:22:31,027 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:22:31,027 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:22:31,027 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,028 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:22:31,028 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,029 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:22:31,029 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,029 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,029 Line:1043 ---上述语句时间---0
 [DEBUG] 2017-12-21 09:22:31,029 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:22:31,030 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,030 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:22:31,030 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,031 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,031 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:22:31,031 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,031 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:22:31,032 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,032 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:22:31,032 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,033 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,033 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,034 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:22:31,034 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,035 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:22:31,035 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,035 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,036 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:22:31,036 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,036 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:22:31,037 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,037 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:22:31,037 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,037 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,038 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,038 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:22:31,038 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,039 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,039 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,039 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:22:31,040 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,040 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:22:31,041 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,041 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:22:31,041 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,041 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,042 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:22:31,042 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,042 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:22:31,042 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,042 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,043 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:22:31,043 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,043 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:22:31,044 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,044 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:22:31,045 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,045 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:22:31,045 Line:321 flag:true
 [DEBUG] 2017-12-21 09:22:31,046 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:22:31,046 Line:1157 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,046 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:22:31,046 Line:408 ************上述语句执行时间：0
 [DEBUG] 2017-12-21 09:22:31,046 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:22:31,046 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,047 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:22:31,047 Line:321 flag:true
 [DEBUG] 2017-12-21 09:22:31,047 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:22:31,048 Line:1157 1值：000050000C
 [DEBUG] 2017-12-21 09:22:31,048 Line:1157 2值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,048 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:22:31,048 Line:408 ************上述语句执行时间：1
 [DEBUG] 2017-12-21 09:22:31,049 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:22:31,049 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,049 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,050 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,050 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:22:31,050 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:31,050 Line:988 1值：b83a05a1_1712210922309980027
 [DEBUG] 2017-12-21 09:22:31,051 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:22:31,051 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:31,051 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:22:31,052 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:31,053 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:22:31,055 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:32,517 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:22:32,518 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:22:32,526 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:22:32,527 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:22:44,764 Line:152 UtilServlet.service 请求地址：/UtilServlet?operation=ajaxPYM&type=updatePYM&chinese=%E4%B8%89%E9%B2%9C%E9%A6%85&time=1513819364760
 [DEBUG] 2017-12-21 09:22:44,766 Line:163 UtilServlet.service 操作人:admin;请求数据：operation=[ajaxPYM,];type=[updatePYM,];chinese=[???é??é??,];time=[1513819364760,];
 [DEBUG] 2017-12-21 09:22:44,840 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:22:44,841 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];parentCode=[00005,];button=[saveAdd,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[1,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];checkPersons=[,];classCode=[,];isCatalog=[0,];workFlowNode=[,];workFlowNodeName=[,];GoodsNumber=[xl0013,];GoodsFullName=[三鲜馅,];GoodsSpec=[,];BaseUnit=[,];BarCode=[,];GoodsFullNamePYM=[sxx,];CostMethod=[b1ee7ce9_0904291155294532523,];tblGoodsAccProp_GoodsAccName=[库存商品,];CompanyCode=[,];StockCode=[,];StorehouseGrid=[,];Spec1=[,];Spec2=[,];Spec3=[,];Brand=[,];ComeFrom=[,];FacePrice=[0,];AccCode=[1405,];upperQty=[0,];lowerQty=[0,];StockTerm=[,];Validity=[,];AvailablyType=[,];HueGroup=[,];YearNoGroup=[,];PreBuyPrice=[0,];Pricefixing=[0,];ProSalesPrice=[0,];ProSalesPrice2=[0,];ProSalesPrice3=[0,];ProSalesPrice4=[0,];ProjectPrice=[0,];ProSalesPrice5=[0,];ProSalesPrice6=[0,];ProSalesPrice7=[0,];ProSalesPrice8=[0,];ProSalesPrice9=[0,];SCompanyID=[,];SecUnit=[,];printCount=[0,];OldclassCode=[,];statusId=[0,];GoodsName=[,];lastUpdateBy=[,];lastUpdateTime=[,];finishTime=[,];createBy=[,];createTime=[,];CheckPersont=[,];AccountingPrice=[0,];seqIsUsed=[1,];seqDigit=[,];garniture=[2,];tblGoodsStockLimitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblGoodsUnitPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];remark=[,];
 [DEBUG] 2017-12-21 09:22:44,842 Line:3843 添加单据desingId=null工作流designId=fc525f5f_0210271549157810034
 [DEBUG] 2017-12-21 09:22:44,846 Line:5847  INSERT INTO  tblGoods(checkPersons,classCode,id,isCatalog,workFlowNode,workFlowNodeName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BarCode,GoodsFullNamePYM,CostMethod,CompanyCode,StockCode,StorehouseGrid,Spec1,Spec2,Spec3,Brand,ComeFrom,FacePrice,AccCode,upperQty,lowerQty,StockTerm,Validity,AvailablyType,HueGroup,YearNoGroup,PreBuyPrice,Pricefixing,ProSalesPrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9,remark,SCompanyID,SecUnit,printCount,OldclassCode,statusId,GoodsName,lastUpdateBy,lastUpdateTime,finishTime,createBy,createTime,CheckPersont,AccountingPrice,seqIsUsed,Attachment,Picture,seqDigit,garniture) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:22:44,847 Line:5853 1:
 [DEBUG] 2017-12-21 09:22:44,847 Line:5853 2:000050000D
 [DEBUG] 2017-12-21 09:22:44,848 Line:5853 3:b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,848 Line:5853 4:0
 [DEBUG] 2017-12-21 09:22:44,849 Line:5853 5:-1
 [DEBUG] 2017-12-21 09:22:44,849 Line:5853 6:finish
 [DEBUG] 2017-12-21 09:22:44,849 Line:5853 7:xl0013
 [DEBUG] 2017-12-21 09:22:44,849 Line:5853 8:三鲜馅
 [DEBUG] 2017-12-21 09:22:44,850 Line:5853 9:
 [DEBUG] 2017-12-21 09:22:44,850 Line:5853 10:
 [DEBUG] 2017-12-21 09:22:44,850 Line:5853 11:
 [DEBUG] 2017-12-21 09:22:44,850 Line:5853 12:sxx
 [DEBUG] 2017-12-21 09:22:44,850 Line:5853 13:b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:22:44,850 Line:5853 14:
 [DEBUG] 2017-12-21 09:22:44,850 Line:5853 15:
 [DEBUG] 2017-12-21 09:22:44,851 Line:5853 16:
 [DEBUG] 2017-12-21 09:22:44,851 Line:5853 17:
 [DEBUG] 2017-12-21 09:22:44,851 Line:5853 18:
 [DEBUG] 2017-12-21 09:22:44,851 Line:5853 19:
 [DEBUG] 2017-12-21 09:22:44,851 Line:5853 20:
 [DEBUG] 2017-12-21 09:22:44,851 Line:5853 21:
 [DEBUG] 2017-12-21 09:22:44,851 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:22:44,852 Line:5853 23:1405
 [DEBUG] 2017-12-21 09:22:44,852 Line:5853 24:0.0
 [DEBUG] 2017-12-21 09:22:44,852 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:22:44,852 Line:5853 26:0
 [DEBUG] 2017-12-21 09:22:44,852 Line:5853 27:0
 [DEBUG] 2017-12-21 09:22:44,852 Line:5853 28:
 [DEBUG] 2017-12-21 09:22:44,852 Line:5853 29:
 [DEBUG] 2017-12-21 09:22:44,853 Line:5853 30:
 [DEBUG] 2017-12-21 09:22:44,853 Line:5853 31:0.0
 [DEBUG] 2017-12-21 09:22:44,853 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:22:44,853 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:22:44,853 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:22:44,853 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:22:44,854 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:22:44,854 Line:5853 37:0.0
 [DEBUG] 2017-12-21 09:22:44,854 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:22:44,855 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:22:44,855 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:22:44,855 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:22:44,855 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:22:44,855 Line:5853 43:
 [DEBUG] 2017-12-21 09:22:44,855 Line:5853 44:00001
 [DEBUG] 2017-12-21 09:22:44,855 Line:5853 45:
 [DEBUG] 2017-12-21 09:22:44,856 Line:5853 46:0
 [DEBUG] 2017-12-21 09:22:44,856 Line:5853 47:
 [DEBUG] 2017-12-21 09:22:44,856 Line:5853 48:0
 [DEBUG] 2017-12-21 09:22:44,856 Line:5853 49:
 [DEBUG] 2017-12-21 09:22:44,856 Line:5853 50:1
 [DEBUG] 2017-12-21 09:22:44,856 Line:5853 51:2017-12-21 09:22:44
 [DEBUG] 2017-12-21 09:22:44,856 Line:5853 52:2017-12-21 09:22:44
 [DEBUG] 2017-12-21 09:22:44,856 Line:5853 53:1
 [DEBUG] 2017-12-21 09:22:44,857 Line:5853 54:2017-12-21 09:22:44
 [DEBUG] 2017-12-21 09:22:44,857 Line:5853 55:
 [DEBUG] 2017-12-21 09:22:44,857 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:22:44,857 Line:5853 57:1
 [DEBUG] 2017-12-21 09:22:44,857 Line:5853 58:
 [DEBUG] 2017-12-21 09:22:44,857 Line:5853 59:
 [DEBUG] 2017-12-21 09:22:44,858 Line:5853 60:0
 [DEBUG] 2017-12-21 09:22:44,858 Line:5853 61:2
 [DEBUG] 2017-12-21 09:22:44,859 Line:921 自定义执行的语句显示： tblGoods_Add :select substring(?,1,len(?)-5) as PaterCode
 [DEBUG] 2017-12-21 09:22:44,859 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,859 Line:988 1值：000050000D
 [DEBUG] 2017-12-21 09:22:44,859 Line:988 2值：000050000D
 [DEBUG] 2017-12-21 09:22:44,860 Line:1025 query condition columnName:PaterCode----value:00005
 [DEBUG] 2017-12-21 09:22:44,860 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:44,860 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) PaterC from tblGoods where ?='add' and classCode =? and (select count(0) from tblGoods where classCode like ?+'_____')=1
 [DEBUG] 2017-12-21 09:22:44,860 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,860 Line:988 1值：add
 [DEBUG] 2017-12-21 09:22:44,860 Line:988 2值：00005
 [DEBUG] 2017-12-21 09:22:44,861 Line:988 3值：00005
 [DEBUG] 2017-12-21 09:22:44,861 Line:1025 query condition columnName:PaterC----value:0
 [DEBUG] 2017-12-21 09:22:44,861 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:44,861 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:22:44,867 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,867 Line:313 exeCondition:tblGoods_Add :0>0 && ''=='-2222'
 [DEBUG] 2017-12-21 09:22:44,868 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,868 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:22:44,868 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,869 Line:313 exeCondition:tblGoods_Add :0<0
 [DEBUG] 2017-12-21 09:22:44,869 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,869 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as CostMethodC from tblGoods where classCode=substring(?,1,len(?)-5) and CostMethod!=?
 [DEBUG] 2017-12-21 09:22:44,869 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,870 Line:988 1值：000050000D
 [DEBUG] 2017-12-21 09:22:44,870 Line:988 2值：000050000D
 [DEBUG] 2017-12-21 09:22:44,870 Line:988 3值：b1ee7ce9_0904291155294532523
 [DEBUG] 2017-12-21 09:22:44,871 Line:1025 query condition columnName:CostMethodC----value:0
 [DEBUG] 2017-12-21 09:22:44,871 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:44,871 Line:313 exeCondition:tblGoods_Add :0>0
 [DEBUG] 2017-12-21 09:22:44,872 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,872 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT SecUnit FROM tblGoodsUnit WHERE f_ref = ? AND (UnitD<=0 OR SecUnitD<=0)
 [DEBUG] 2017-12-21 09:22:44,872 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,872 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,873 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:44,873 Line:313 exeCondition:tblGoods_Add :'null'!='null'&&'null'.length!=0
 [DEBUG] 2017-12-21 09:22:44,874 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,874 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitC from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:22:44,874 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,875 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,881 Line:1025 query condition columnName:SecUnitC----value:0
 [DEBUG] 2017-12-21 09:22:44,882 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:22:44,882 Line:313 exeCondition:tblGoods_Add :0>0&&''.length == 0
 [DEBUG] 2017-12-21 09:22:44,883 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,883 Line:921 自定义执行的语句显示： tblGoods_Add :select tblGoods.BaseUnit AS BaseUnit,tblGoodsUnit.SecUnit AS SecUnit from  tblGoods left join  tblGoodsUnit ON tblGoods.id=tblGoodsUnit.f_ref where f_ref=?
 [DEBUG] 2017-12-21 09:22:44,883 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,883 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,884 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:44,884 Line:313 exeCondition:tblGoods_Add :'null'=='null'&&'null'!='null'
 [DEBUG] 2017-12-21 09:22:44,885 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,886 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:22:44,886 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,886 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,894 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:22:44,894 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:22:44,895 Line:313 exeCondition:tblGoods_Add :0>1
 [DEBUG] 2017-12-21 09:22:44,896 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,897 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.Hue,'颜色' AS typeHue FROM (SELECT a.HueGroup,b.Hue,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.HueGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.Hue = d.languageId WHERE a.id =?) a WHERE (a.HueGroup ='' AND ISNULL(a.Hue,'')!='') OR (a.HueGroup !='' AND a.Hue !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:22:44,897 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,897 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,898 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:44,899 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT a.yearNO,'尺码' AS typeYearNo FROM (SELECT a.YearNoGroup,b.yearNO,c.groupName,d.languageId FROM tblGoods a LEFT JOIN tblGoodsStockLimit b ON a.id =b.f_ref LEFT JOIN tblGoodsOfProp c ON a.YearNoGroup =c.groupName LEFT JOIN tblGoodsOfPropDet d ON c.id = d.f_ref AND b.yearNO = d.languageId WHERE a.id =?) a WHERE (a.YearNoGroup ='' AND ISNULL(a.yearNO,'')!='') OR (a.YearNoGroup !='' AND a.yearNO !='' AND a.groupName !='' AND a.languageId IS NULL)
 [DEBUG] 2017-12-21 09:22:44,899 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,900 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,901 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:22:44,902 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:22:44,902 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,902 Line:313 exeCondition:tblGoods_Add :'null'!='null'
 [DEBUG] 2017-12-21 09:22:44,903 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,903 Line:921 自定义执行的语句显示： tblGoods_Add :select count(0) as SecUnitNum from tblGoodsUnit where f_ref=?
 [DEBUG] 2017-12-21 09:22:44,903 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,904 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,910 Line:1025 query condition columnName:SecUnitNum----value:0
 [DEBUG] 2017-12-21 09:22:44,911 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:22:44,911 Line:921 自定义执行的语句显示： tblGoods_Add :select count(DefaultAssit) as DefAssitC from tblGoodsUnit where f_ref=? and DefaultAssit='1'
 [DEBUG] 2017-12-21 09:22:44,911 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,911 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,920 Line:1025 query condition columnName:DefAssitC----value:0
 [DEBUG] 2017-12-21 09:22:44,920 Line:1043 ---上述语句时间---9
 [DEBUG] 2017-12-21 09:22:44,920 Line:313 exeCondition:tblGoods_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:22:44,921 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,921 Line:313 exeCondition:tblGoods_Add :0 != 0 && 0 == 0
 [DEBUG] 2017-12-21 09:22:44,922 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,922 Line:313 exeCondition:tblGoods_Add :'add'=='add'
 [DEBUG] 2017-12-21 09:22:44,924 Line:321 flag:true
 [DEBUG] 2017-12-21 09:22:44,925 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoods set OldclassCode=classCode where id=?
 [DEBUG] 2017-12-21 09:22:44,925 Line:1157 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,928 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=1
 [DEBUG] 2017-12-21 09:22:44,929 Line:408 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:22:44,929 Line:313 exeCondition:tblGoods_Add :'add'=='update'
 [DEBUG] 2017-12-21 09:22:44,930 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,930 Line:313 exeCondition:tblGoods_Add :true
 [DEBUG] 2017-12-21 09:22:44,931 Line:321 flag:true
 [DEBUG] 2017-12-21 09:22:44,932 Line:1081 自定义执行的语句显示： tblGoods_Add:update tblGoodsUnit set GoodsCode=? where f_ref=?
 [DEBUG] 2017-12-21 09:22:44,932 Line:1157 1值：000050000D
 [DEBUG] 2017-12-21 09:22:44,932 Line:1157 2值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,935 Line:1163 DefineSQLBean.execSql  define=tblGoods_Add,  影响行数=0
 [DEBUG] 2017-12-21 09:22:44,936 Line:408 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:22:44,936 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS RepeatStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? GROUP BY StockCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably  having count(0) > 1
 [DEBUG] 2017-12-21 09:22:44,936 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,936 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,937 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:44,937 Line:921 自定义执行的语句显示： tblGoods_Add :SELECT COUNT(StockCode) AS InvalidStockCount FROM tblGoodsStockLimit tgsl WHERE tgsl.f_ref=? AND tgsl.LowerLimit > tgsl.UpperLimit AND tgsl.UpperLimit <> 0 AND tgsl.LowerLimit <> 0
 [DEBUG] 2017-12-21 09:22:44,937 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:22:44,937 Line:988 1值：b83a05a1_1712210922448440029
 [DEBUG] 2017-12-21 09:22:44,938 Line:1025 query condition columnName:InvalidStockCount----value:0
 [DEBUG] 2017-12-21 09:22:44,938 Line:1043 ---上述语句时间---1
 [DEBUG] 2017-12-21 09:22:44,938 Line:313 exeCondition:tblGoods_Add :'null'!='0' && 'null'!='null'
 [DEBUG] 2017-12-21 09:22:44,939 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:44,939 Line:313 exeCondition:tblGoods_Add :'0'!='0' && '0'!='null'
 [DEBUG] 2017-12-21 09:22:44,940 Line:321 flag:false
 [DEBUG] 2017-12-21 09:22:46,395 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&operation=6&parentCode=00005&f_brother=&parentTableName=&moduleType=&winCurIndex=1&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:22:46,397 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];operation=[6,];parentCode=[00005,];f_brother=[,];parentTableName=[,];moduleType=[,];winCurIndex=[1,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:22:46,404 Line:2014 DynDBManager.getRefSql:弹出窗GoodsAccPropSelect: select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:22:46,405 Line:6381  select tblGoodsAccProp.GoodsAccName from tblGoodsAccProp
      where 1=1 and tblGoodsAccProp.id = 'b1ee7ce9_0904291155294532523'   and tblGoodsAccProp.statusId!='-1'
 [DEBUG] 2017-12-21 09:23:20,647 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:23:20,649 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[00005,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[normal,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '00005_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '00005_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];draftQuery=[,];export=[,];query=[true,];defineInfo=[,];isTab=[,];ButtonType=[,billExport,];ButtonTypeName=[,];varKeyIds=[,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[0,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[normal,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:23:20,681 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '00005_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:23:20,681 Line:582 ReportDataMgt.getReportData 参数1:0
 [DEBUG] 2017-12-21 09:23:20,712 Line:689 通过SQL读原始数据：31
 [DEBUG] 2017-12-21 09:23:20,716 Line:1391 整理数据：3
 [DEBUG] 2017-12-21 09:23:42,238 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:23:42,240 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:23:42,241 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:23:42,276 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:23:42,277 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:23:42,277 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:23:42,277 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:23:42,277 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:23:42,277 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:23:42,277 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:23:42,278 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:23:42,278 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:23:42,278 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:23:42,278 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:23:42,278 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:23:42,278 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:23:42,278 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:23:42,278 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:23:42,279 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:23:42,279 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:23:42,279 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:23:42,279 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:23:42,420 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:23:42,421 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:23:42,422 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:42,422 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:42,422 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:23:42,422 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:42,423 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:23:42,423 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:23:42,423 Line:689 通过SQL读原始数据：146
 [DEBUG] 2017-12-21 09:23:42,424 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:23:42,428 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:23:49,694 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:23:49,694 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:23:49,695 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:23:49,705 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:23:49,706 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:23:49,706 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:23:49,706 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:23:49,707 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:23:49,707 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:23:49,707 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:23:49,707 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:23:49,708 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:23:49,708 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:23:49,708 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:23:49,708 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:23:49,709 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:23:49,709 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:23:49,710 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:23:49,710 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:23:49,711 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:23:49,711 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:23:49,711 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:23:49,715 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:23:49,717 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:23:49,718 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:49,719 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:49,719 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:23:49,719 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:49,719 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:23:49,720 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:23:49,721 Line:689 通过SQL读原始数据：16
 [DEBUG] 2017-12-21 09:23:49,722 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:23:49,727 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:23:51,156 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:23:51,158 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[2,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];
 [DEBUG] 2017-12-21 09:23:51,159 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:23:51,190 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:23:51,191 Line:567 ReportDataMgt.getReportData 参数1:2
 [DEBUG] 2017-12-21 09:23:51,193 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:23:51,193 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:23:51,194 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:23:51,194 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:23:51,194 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:23:51,195 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:23:51,196 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:23:51,197 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:23:51,197 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:23:51,198 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:23:51,199 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:23:51,199 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:23:51,200 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:23:51,202 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:23:51,202 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:23:51,203 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:23:51,203 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:23:51,209 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:23:51,210 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:23:51,211 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:51,211 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:51,212 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:23:51,213 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:23:51,213 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:23:51,214 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:23:51,216 Line:689 通过SQL读原始数据：25
 [DEBUG] 2017-12-21 09:23:51,218 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:23:51,234 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:23:59,835 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:23:59,837 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[00005,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[normal,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '00005_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '00005_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];draftQuery=[,];export=[,];query=[true,];defineInfo=[,];isTab=[,];ButtonType=[,billExport,];ButtonTypeName=[,];varKeyIds=[,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[0,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[normal,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:23:59,869 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '00005_____'                             and (tblGoods.statusId =?)   )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:23:59,869 Line:582 ReportDataMgt.getReportData 参数1:0
 [DEBUG] 2017-12-21 09:23:59,898 Line:689 通过SQL读原始数据：29
 [DEBUG] 2017-12-21 09:23:59,900 Line:1391 整理数据：2
 [DEBUG] 2017-12-21 09:24:06,139 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblGoods&parentCode=&operation=4&moduleType=&winCurIndex=1&checkTab=Y
 [DEBUG] 2017-12-21 09:24:06,140 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];parentCode=[,];operation=[4,];moduleType=[,];winCurIndex=[1,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:24:06,166 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:24:06,180 Line:689 通过SQL读原始数据：13
 [DEBUG] 2017-12-21 09:24:06,181 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:24:07,637 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do
 [DEBUG] 2017-12-21 09:24:07,638 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblGoods,];optionType=[,];parentCode=[,];f_brother=[,];defineName=[,];winCurIndex=[1,];parentTableName=[,];reportName=[商品管理列表,];moduleName=[商品,];isAllListQuery=[,];parentCodeList=[,];src=[,];queryChannel=[normal,];newCreateBy=[,];wakeUp=[,];sendMessage=[,];classCode=[,];SQLSave=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];right=[@SQL:select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.classCode like '_____'                                )  a  where row_id between 1 and 101 order by row_id@ParamList:@end:,];draftQuery=[,];export=[,];query=[true,];defineInfo=[,];isTab=[,];ButtonType=[,billExport,];ButtonTypeName=[,];varKeyIds=[,];brotherEnter=[,];hasFrame=[,];detTable_list=[,];checkTab=[Y,];popReturnVal=[,];defineOrderBy=[,];dataDefineName=[Goods_dataMove,];selectName=[SelectGoodsClassCode,];statusId=[,];GoodsNumberQ=[,];GoodsFullNameQ=[,];GoodsSpecQ=[,];selectType=[endClass,];pageSize=[100,];pageNo=[1,];moduleType=[,];
 [DEBUG] 2017-12-21 09:24:07,653 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,classCode,childCount,GoodsNumberQ,GoodsFullNameQ,GoodsSpecQ,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,ProSalesPrice,statusId,PreBuyPrice,Pricefixing,CostMethod,upperQty,lowerQty,Validity,ComFullName,StockTerm,HueGroup,YearNoGroup,FacePrice,ProSalesPrice2,ProSalesPrice3,ProSalesPrice4,ProjectPrice,ProSalesPrice5,ProSalesPrice6,ProSalesPrice7,ProSalesPrice8,ProSalesPrice9 from ( select tblGoods.classCode as classCode,tblGoods.isCatalog as childCount, tblGoods.id as keyId,'1' as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id='1') as deptCodeR,'1' as employeeId,(select isnull(DepartmentCode,'') from tblEmployee as e where e.id='1') as deptCodeRE,      tblGoods.GoodsNumber as GoodsNumberQ,     tblGoods.GoodsFullName as GoodsFullNameQ,     tblGoods.GoodsSpec as GoodsSpecQ,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblGoods.ProSalesPrice as ProSalesPrice,     tblGoods.statusId as statusId,     tblGoods.PreBuyPrice as PreBuyPrice,     tblGoods.Pricefixing as Pricefixing,     tblGoodsAccProp.GoodsAccName as CostMethod,     tblGoods.upperQty as upperQty,     tblGoods.lowerQty as lowerQty,     tblGoods.Validity as Validity,     tblCompany.ComFullName as ComFullName,     tblGoods.StockTerm as StockTerm,     tblGoods.HueGroup as HueGroup,     tblGoods.YearNoGroup as YearNoGroup,     tblGoods.FacePrice as FacePrice,     tblGoods.ProSalesPrice2 as ProSalesPrice2,     tblGoods.ProSalesPrice3 as ProSalesPrice3,     tblGoods.ProSalesPrice4 as ProSalesPrice4,     tblGoods.ProjectPrice as ProjectPrice,     tblGoods.ProSalesPrice5 as ProSalesPrice5,     tblGoods.ProSalesPrice6 as ProSalesPrice6,     tblGoods.ProSalesPrice7 as ProSalesPrice7,     tblGoods.ProSalesPrice8 as ProSalesPrice8,     tblGoods.ProSalesPrice9 as ProSalesPrice9   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber ,    tblGoods.GoodsNumber) as row_id  from tblGoods   left join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  left join tblCompany on tblCompany.classCode=tblGoods.CompanyCode left join tblStock on tblGoods.StockCode=tblStock.classCode where 1=1 and tblGoods.isCatalog=0                                 )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:24:07,673 Line:689 通过SQL读原始数据：19
 [DEBUG] 2017-12-21 09:24:07,677 Line:1391 整理数据：4
 [DEBUG] 2017-12-21 09:24:11,824 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do?reportNumber=tblVirtualStock&src=menu&winCurIndex=2
 [DEBUG] 2017-12-21 09:24:11,824 Line:146 BaseAction.execute 操作人:admin;请求数据：reportNumber=[tblVirtualStock,];src=[menu,];winCurIndex=[2,];
 [DEBUG] 2017-12-21 09:24:11,824 Line:215 ---------->SET Page 2 DEFAULT URL = /ReportDataAction.do?reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:24:11,887 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=fc26a1c0_0911091930102960206&editable=&subSql=
 [DEBUG] 2017-12-21 09:24:11,887 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[fc26a1c0_0911091930102960206,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:24:11,887 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do?reportNumber=tblVirtualStock&src=menu&winCurIndex=2&checkTab=Y
 [DEBUG] 2017-12-21 09:24:11,888 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:24:11,888 Line:146 BaseAction.execute 操作人:admin;请求数据：reportNumber=[tblVirtualStock,];src=[menu,];winCurIndex=[2,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:24:11,888 Line:215 ---------->SET Page 2 DEFAULT URL = /ReportDataAction.do?reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:24:11,960 Line:5227 GlobalsTool.js 生成js 时间25:/js/gen/report.vjs_zh_CN.js
 [DEBUG] 2017-12-21 09:24:13,250 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:24:13,251 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[tblVirtualStock,];reportName=[虚拟库存查询,虚拟库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[2,];src=[,];parentCode=[,];queryChannel=[normal,];SQLSave=[@SQL:@ParamList:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:0@Param:tblGoods@Param:@Param:@end:,];query=[,];NoButton=[,];backParent=[,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];upperQtyQ=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];NumberType=[0,];DataType=[tblGoods,];mobileGoodsFullName=[,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:24:13,266 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:24:13,267 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:24:13,267 Line:568 ReportDataMgt.getReportData 参数2:100
 [DEBUG] 2017-12-21 09:24:13,267 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:24:13,267 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:24:13,268 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:24:13,268 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:24:13,268 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:24:13,268 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:24:13,268 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:24:13,268 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:24:13,268 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:24:13,269 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:24:13,269 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:24:13,269 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:24:13,269 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:24:13,269 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:24:13,269 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:24:13,270 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:24:13,346 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:24:13,347 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:24:13,347 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:13,347 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:13,347 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:24:13,347 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:13,348 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:24:13,348 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:24:13,348 Line:689 通过SQL读原始数据：81
 [DEBUG] 2017-12-21 09:24:13,348 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:24:32,071 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:24:32,071 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[tblVirtualStock,];reportName=[虚拟库存查询,虚拟库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[2,];src=[,];parentCode=[,];queryChannel=[normal,];SQLSave=[@SQL:{call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}@ParamList:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:0@Param:tblGoods@Param:@Param:@end:,];query=[,];NoButton=[,];backParent=[,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];upperQtyQ=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];NumberType=[0,];DataType=[tblGoods,];mobileGoodsFullName=[,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:24:32,084 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:24:32,084 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:24:32,084 Line:568 ReportDataMgt.getReportData 参数2:100
 [DEBUG] 2017-12-21 09:24:32,084 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:24:32,084 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:24:32,085 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:24:32,085 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:24:32,085 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:24:32,085 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:24:32,085 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:24:32,085 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:24:32,085 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:24:32,086 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:24:32,086 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:24:32,086 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:24:32,086 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:24:32,086 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:24:32,086 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:24:32,087 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:24:32,090 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:24:32,090 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:24:32,090 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:32,091 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:32,091 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:24:32,091 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:32,091 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:24:32,091 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:24:32,092 Line:689 通过SQL读原始数据：8
 [DEBUG] 2017-12-21 09:24:32,092 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:24:36,707 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do?reportNumber=ViewStoreDetail&src=menu&winCurIndex=3
 [DEBUG] 2017-12-21 09:24:36,707 Line:146 BaseAction.execute 操作人:admin;请求数据：reportNumber=[ViewStoreDetail,];src=[menu,];winCurIndex=[3,];
 [DEBUG] 2017-12-21 09:24:36,708 Line:215 ---------->SET Page 3 DEFAULT URL = /ReportDataAction.do?reportNumber=ViewStoreDetail
 [DEBUG] 2017-12-21 09:24:37,737 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:24:37,738 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[ViewStoreDetail,];reportName=[库存查询,库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[3,];src=[,];parentCode=[,];queryChannel=[normal,];SQLSave=[@SQL:@ParamList:0@end:,];query=[,];NoButton=[,];backParent=[,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];lastQty=[0,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:24:37,755 Line:549 ReportDataMgt.getReportData SQL=select StockCode,GoodsCode,StockFullName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BatchNo,Inch,Hue,yearNO,ProDate,Availably,TotalQty,lastPrice,TotalAmt,lastQty,SecName,UnitIntQty,Seq,QueryBillDate,hideGoodsCode,hideStockCode from ( select      tblStock.classCode as StockCode,     tblGoods.classCode as GoodsCode,     tblStock.StockFullName as StockFullName,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblStocks.BatchNo as BatchNo,     tblStocks.Inch as Inch,     tblStocks.Hue as Hue,     tblStocks.yearNO as yearNO,     tblStocks.ProDate as ProDate,     tblStocks.Availably as Availably,     tblStocks.lastQty as TotalQty,     tblStocks.lastPrice as lastPrice,     tblStocks.lastAmount as TotalAmt,     tblStocks.lastQty as lastQty,     tblGoodsUnit.SecUnit as SecName,     (case when cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int)>0 then cast(cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int) AS  varchar(100))+tblGoodsUnit.SecUnit else '' end)+case when tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD=0 then '' else (case when tblStocks.lastQty%(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD)>0 then dbo.throwZero(cast(tblStocks.lastQty%(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD) AS varchar(100)))+tblGoods.BaseUnit else '' end) end as UnitIntQty,     (select top 1 languageId from tblDBEnumerationItem where enumValue='seq') as Seq,     '2017-12-01' as QueryBillDate,     tblGoods.classCode+'#;#0#;##;#' as hideGoodsCode,     tblStock.classCode+'#;#0#;##;#' as hideStockCode   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber) as row_id  from (select * from tblGoods where isCatalog=0) as tblGoods left join (select * from tblStock where isCatalog=0) as tblStock on 1=1 left join tblStocks on tblGoods.classCode=tblStocks.GoodsCode and tblStock.classCode=tblStocks.StockCode left join tblGoodsUnit on tblGoods.id=tblGoodsUnit.f_ref  where 1=1                                                                and (tblStocks.lastQty <>?)   )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:24:37,756 Line:582 ReportDataMgt.getReportData 参数1:0
 [DEBUG] 2017-12-21 09:24:37,795 Line:689 通过SQL读原始数据：39
 [DEBUG] 2017-12-21 09:24:37,796 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:24:40,647 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:24:40,649 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[ViewStoreDetail,];reportName=[库存查询,库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[3,];src=[,];parentCode=[,];queryChannel=[normal,];SQLSave=[@SQL:select StockCode,GoodsCode,StockFullName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BatchNo,Inch,Hue,yearNO,ProDate,Availably,TotalQty,lastPrice,TotalAmt,lastQty,SecName,UnitIntQty,Seq,QueryBillDate,hideGoodsCode,hideStockCode from ( select      tblStock.classCode as StockCode,     tblGoods.classCode as GoodsCode,     tblStock.StockFullName as StockFullName,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblStocks.BatchNo as BatchNo,     tblStocks.Inch as Inch,     tblStocks.Hue as Hue,     tblStocks.yearNO as yearNO,     tblStocks.ProDate as ProDate,     tblStocks.Availably as Availably,     tblStocks.lastQty as TotalQty,     tblStocks.lastPrice as lastPrice,     tblStocks.lastAmount as TotalAmt,     tblStocks.lastQty as lastQty,     tblGoodsUnit.SecUnit as SecName,     (case when cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int)>0 then cast(cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int) AS  varchar(100))@AddSign:tblGoodsUnit.SecUnit else '' end)@AddSign:case when tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD=0 then '' else (case when tblStocks.lastQty@CentSign:(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD)>0 then dbo.throwZero(cast(tblStocks.lastQty@CentSign:(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD) AS varchar(100)))@AddSign:tblGoods.BaseUnit else '' end) end as UnitIntQty,     (select top 1 languageId from tblDBEnumerationItem where enumValue='seq') as Seq,     '2017-12-01' as QueryBillDate,     tblGoods.classCode@AddSign:'#;#0#;##;#' as hideGoodsCode,     tblStock.classCode@AddSign:'#;#0#;##;#' as hideStockCode   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber) as row_id  from (select * from tblGoods where isCatalog=0) as tblGoods left join (select * from tblStock where isCatalog=0) as tblStock on 1=1 left join tblStocks on tblGoods.classCode=tblStocks.GoodsCode and tblStock.classCode=tblStocks.StockCode left join tblGoodsUnit on tblGoods.id=tblGoodsUnit.f_ref  where 1=1                                                                and (tblStocks.lastQty <>?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];query=[,];NoButton=[,];backParent=[,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];lastQty=[0,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:24:40,664 Line:549 ReportDataMgt.getReportData SQL=select StockCode,GoodsCode,StockFullName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BatchNo,Inch,Hue,yearNO,ProDate,Availably,TotalQty,lastPrice,TotalAmt,lastQty,SecName,UnitIntQty,Seq,QueryBillDate,hideGoodsCode,hideStockCode from ( select      tblStock.classCode as StockCode,     tblGoods.classCode as GoodsCode,     tblStock.StockFullName as StockFullName,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblStocks.BatchNo as BatchNo,     tblStocks.Inch as Inch,     tblStocks.Hue as Hue,     tblStocks.yearNO as yearNO,     tblStocks.ProDate as ProDate,     tblStocks.Availably as Availably,     tblStocks.lastQty as TotalQty,     tblStocks.lastPrice as lastPrice,     tblStocks.lastAmount as TotalAmt,     tblStocks.lastQty as lastQty,     tblGoodsUnit.SecUnit as SecName,     (case when cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int)>0 then cast(cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int) AS  varchar(100))+tblGoodsUnit.SecUnit else '' end)+case when tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD=0 then '' else (case when tblStocks.lastQty%(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD)>0 then dbo.throwZero(cast(tblStocks.lastQty%(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD) AS varchar(100)))+tblGoods.BaseUnit else '' end) end as UnitIntQty,     (select top 1 languageId from tblDBEnumerationItem where enumValue='seq') as Seq,     '2017-12-01' as QueryBillDate,     tblGoods.classCode+'#;#0#;##;#' as hideGoodsCode,     tblStock.classCode+'#;#0#;##;#' as hideStockCode   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber) as row_id  from (select * from tblGoods where isCatalog=0) as tblGoods left join (select * from tblStock where isCatalog=0) as tblStock on 1=1 left join tblStocks on tblGoods.classCode=tblStocks.GoodsCode and tblStock.classCode=tblStocks.StockCode left join tblGoodsUnit on tblGoods.id=tblGoodsUnit.f_ref  where 1=1                                                                and (tblStocks.lastQty <>?)   )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:24:40,664 Line:582 ReportDataMgt.getReportData 参数1:0
 [DEBUG] 2017-12-21 09:24:40,666 Line:689 通过SQL读原始数据：2
 [DEBUG] 2017-12-21 09:24:40,667 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:24:45,889 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:24:45,891 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[ViewStoreDetail,];reportName=[库存查询,库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[3,];src=[,];parentCode=[,];queryChannel=[normal,];SQLSave=[@SQL:select StockCode,GoodsCode,StockFullName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BatchNo,Inch,Hue,yearNO,ProDate,Availably,TotalQty,lastPrice,TotalAmt,lastQty,SecName,UnitIntQty,Seq,QueryBillDate,hideGoodsCode,hideStockCode from ( select      tblStock.classCode as StockCode,     tblGoods.classCode as GoodsCode,     tblStock.StockFullName as StockFullName,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblStocks.BatchNo as BatchNo,     tblStocks.Inch as Inch,     tblStocks.Hue as Hue,     tblStocks.yearNO as yearNO,     tblStocks.ProDate as ProDate,     tblStocks.Availably as Availably,     tblStocks.lastQty as TotalQty,     tblStocks.lastPrice as lastPrice,     tblStocks.lastAmount as TotalAmt,     tblStocks.lastQty as lastQty,     tblGoodsUnit.SecUnit as SecName,     (case when cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int)>0 then cast(cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int) AS  varchar(100))@AddSign:tblGoodsUnit.SecUnit else '' end)@AddSign:case when tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD=0 then '' else (case when tblStocks.lastQty@CentSign:(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD)>0 then dbo.throwZero(cast(tblStocks.lastQty@CentSign:(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD) AS varchar(100)))@AddSign:tblGoods.BaseUnit else '' end) end as UnitIntQty,     (select top 1 languageId from tblDBEnumerationItem where enumValue='seq') as Seq,     '2017-12-01' as QueryBillDate,     tblGoods.classCode@AddSign:'#;#0#;##;#' as hideGoodsCode,     tblStock.classCode@AddSign:'#;#0#;##;#' as hideStockCode   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber) as row_id  from (select * from tblGoods where isCatalog=0) as tblGoods left join (select * from tblStock where isCatalog=0) as tblStock on 1=1 left join tblStocks on tblGoods.classCode=tblStocks.GoodsCode and tblStock.classCode=tblStocks.StockCode left join tblGoodsUnit on tblGoods.id=tblGoodsUnit.f_ref  where 1=1                                                                and (tblStocks.lastQty <>?)   )  a  where row_id between 1 and 101 order by row_id@ParamList:0@end:,];query=[,];NoButton=[,];backParent=[,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];lastQty=[0,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:24:45,906 Line:549 ReportDataMgt.getReportData SQL=select StockCode,GoodsCode,StockFullName,GoodsNumber,GoodsFullName,GoodsSpec,BaseUnit,BatchNo,Inch,Hue,yearNO,ProDate,Availably,TotalQty,lastPrice,TotalAmt,lastQty,SecName,UnitIntQty,Seq,QueryBillDate,hideGoodsCode,hideStockCode from ( select      tblStock.classCode as StockCode,     tblGoods.classCode as GoodsCode,     tblStock.StockFullName as StockFullName,     tblGoods.GoodsNumber as GoodsNumber,     tblGoods.GoodsFullName as GoodsFullName,     tblGoods.GoodsSpec as GoodsSpec,     tblGoods.BaseUnit as BaseUnit,     tblStocks.BatchNo as BatchNo,     tblStocks.Inch as Inch,     tblStocks.Hue as Hue,     tblStocks.yearNO as yearNO,     tblStocks.ProDate as ProDate,     tblStocks.Availably as Availably,     tblStocks.lastQty as TotalQty,     tblStocks.lastPrice as lastPrice,     tblStocks.lastAmount as TotalAmt,     tblStocks.lastQty as lastQty,     tblGoodsUnit.SecUnit as SecName,     (case when cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int)>0 then cast(cast(tblStocks.lastQty*tblGoodsUnit.SecUnitD/tblGoodsUnit.UnitD AS int) AS  varchar(100))+tblGoodsUnit.SecUnit else '' end)+case when tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD=0 then '' else (case when tblStocks.lastQty%(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD)>0 then dbo.throwZero(cast(tblStocks.lastQty%(tblGoodsUnit.UnitD/tblGoodsUnit.SecUnitD) AS varchar(100)))+tblGoods.BaseUnit else '' end) end as UnitIntQty,     (select top 1 languageId from tblDBEnumerationItem where enumValue='seq') as Seq,     '2017-12-01' as QueryBillDate,     tblGoods.classCode+'#;#0#;##;#' as hideGoodsCode,     tblStock.classCode+'#;#0#;##;#' as hideStockCode   ,ROW_NUMBER() over(order by     tblGoods.GoodsNumber) as row_id  from (select * from tblGoods where isCatalog=0) as tblGoods left join (select * from tblStock where isCatalog=0) as tblStock on 1=1 left join tblStocks on tblGoods.classCode=tblStocks.GoodsCode and tblStock.classCode=tblStocks.StockCode left join tblGoodsUnit on tblGoods.id=tblGoodsUnit.f_ref  where 1=1                                                                and (tblStocks.lastQty <>?)   )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:24:45,907 Line:582 ReportDataMgt.getReportData 参数1:0
 [DEBUG] 2017-12-21 09:24:45,908 Line:689 通过SQL读原始数据：1
 [DEBUG] 2017-12-21 09:24:45,909 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:24:52,594 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:24:52,595 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[tblVirtualStock,];reportName=[虚拟库存查询,虚拟库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[2,];src=[,];parentCode=[,];queryChannel=[normal,];SQLSave=[@SQL:{call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}@ParamList:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:0@Param:tblGoods@Param:@Param:@end:,];query=[,];NoButton=[,];backParent=[,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];upperQtyQ=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];NumberType=[0,];DataType=[tblGoods,];mobileGoodsFullName=[,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:24:52,612 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:24:52,612 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:24:52,612 Line:568 ReportDataMgt.getReportData 参数2:100
 [DEBUG] 2017-12-21 09:24:52,612 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:24:52,613 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:24:52,613 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:24:52,613 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:24:52,613 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:24:52,613 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:24:52,613 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:24:52,614 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:24:52,614 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:24:52,614 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:24:52,614 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:24:52,614 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:24:52,614 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:24:52,614 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:24:52,615 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:24:52,615 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:24:52,618 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:24:52,618 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:24:52,619 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:52,619 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:52,619 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:24:52,619 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:24:52,619 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:24:52,620 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:24:52,620 Line:689 通过SQL读原始数据：8
 [DEBUG] 2017-12-21 09:24:52,620 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:25:12,302 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblBuyInStock&src=menu&winCurIndex=4
 [DEBUG] 2017-12-21 09:25:12,302 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblBuyInStock,];src=[menu,];winCurIndex=[4,];
 [DEBUG] 2017-12-21 09:25:12,302 Line:215 ---------->SET Page 4 DEFAULT URL = /UserFunctionQueryAction.do?tableName=tblBuyInStock
 [DEBUG] 2017-12-21 09:25:12,338 Line:549 ReportDataMgt.getReportData SQL=select keyId,createBy,deptCodeR,employeeId,deptCodeRE,BillDate,BillNo,ComFullNamen,ComFullName,ComNumber,InVoiceType,TotalTaxAmount,freightAmount,CurTotalTaxAmount,AlreadyPayAmt,BackAmount,CertificateNo,EmpFullName,DeptFullName,BuyOrderNo,EmpFullName2,id,Kid,Remark,lastUpdateBy,lastUpdateTime,NeedPayAmt2,AlreadyPayAmt2,AfterChangeAmt2,ChangeAmt2,DiscountAmount2,TotalTaxAmount2,workFlowNodeName from ( select tblBuyInStock.id as keyId,tblBuyInStock.createBy as createBy,(select isnull(DepartmentCode,'') from tblEmployee where tblEmployee.id=tblBuyInStock.createBy) as deptCodeR,tblBuyInStock.employeeId as employeeId,tblBuyInStock.departmentCode as deptCodeRE, tblBuyInStock.workFlowNodeName as workFlowNodeName,       tblBuyInStock.BillDate as BillDate,     tblBuyInStock.BillNo as BillNo,     tblCompany.ComFullName as ComFullNamen,     tblCompany.ComFullName as ComFullName,     tblCompany.ComNumber as ComNumber,     tblBuyInStock.InVoiceType as InVoiceType,     tblBuyInStock.TotalTaxAmount as TotalTaxAmount,     tblBuyInStock.freightAmount as freightAmount,     tblBuyInStock.CurTotalAmount as CurTotalTaxAmount,     tblBuyInStock.AlreadyPayAmt as AlreadyPayAmt,     tblBuyInStock.BackAmount as BackAmount,     case when len(tblBuyInStock.CertificateNo)>0 then 1 else 0 end as CertificateNo,     tblEmployee1.EmpFullName as EmpFullName,     tblDepartment.DeptFullName as DeptFullName,     tblBuyOrder.BillNo as BuyOrderNo,     tblEmployee2.EmpFullName as EmpFullName2,     tblBuyInStock.id as id,     tblBuyOrder.id as Kid,     tblBuyInStock.Remark as Remark,     emp2.EmpFullName as lastUpdateBy,     tblBuyInStock.lastUpdateTime as lastUpdateTime,     tblBuyInStock.NeedPayAmt as NeedPayAmt2,     tblBuyInStock.AlreadyPayAmt as AlreadyPayAmt2,     tblBuyInStock.AfterChangeAmt as AfterChangeAmt2,     tblBuyInStock.ChangeAmt as ChangeAmt2,     tblBuyInStock.DiscountAmount as DiscountAmount2,     tblBuyInStock.TotalAmount as TotalTaxAmount2   ,ROW_NUMBER() over(order by     tblBuyInStock.BillDate desc,    tblBuyInStock.BillNo desc) as row_id  from tblBuyInStock   left join tblCompany on tblCompany.classCode=tblBuyInStock.CompanyCode  left join tblBuyInStockDet on (tblBuyInStock.id=tblBuyInStockDet.f_ref and tblBuyInStockDet.id=(select top 1 a.id from tblBuyInStockDet a where a.f_ref=tblBuyInStock.id))  left join tblDepartment on tblDepartment.classCode=tblBuyInStock.DepartmentCode  left join tblEmployee tblEmployee1 on tblEmployee1.id=tblBuyInStock.EmployeeID   left join tblEmployee tblEmployee2 on tblEmployee2.id=tblBuyInStock.createBy  left join tblBuyOrder on tblBuyOrder.id=tblBuyInStockDet.BuyOrderID  left join tblemployee emp2 on emp2.id=tblBuyInStock.lastUpdateBy where 1=1 and isNull(tblBuyInStock.workFlowNodeName,'')!='print'        and (tblBuyInStock.BillDate >= ?)                                                                    )  a  where row_id between 1 and 101 order by row_id
 [DEBUG] 2017-12-21 09:25:12,339 Line:582 ReportDataMgt.getReportData 参数1:2017-12-01
 [DEBUG] 2017-12-21 09:25:12,402 Line:689 通过SQL读原始数据：63
 [DEBUG] 2017-12-21 09:25:12,403 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:25:12,477 Line:5227 GlobalsTool.js 生成js 时间35:/js/gen/defineList.vjstblBuyInStock_zh_CN.js
 [DEBUG] 2017-12-21 09:25:14,744 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?tableName=tblBuyInStock&parentCode=&operation=6&moduleType=&f_brother=&parentTableName=&winCurIndex=4&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:25:14,745 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblBuyInStock,];parentCode=[,];operation=[6,];moduleType=[,];f_brother=[,];parentTableName=[,];winCurIndex=[4,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:25:14,932 Line:5227 GlobalsTool.js 生成js 时间176:/js/gen/define.vjstblBuyInStock_zh_CN.js
 [DEBUG] 2017-12-21 09:25:17,072 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=CompanyCode&operation=22&BillDate=2017-12-21&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup
 [DEBUG] 2017-12-21 09:25:17,073 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[CompanyCode,];operation=[22,];BillDate=[2017-12-21,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];
 [DEBUG] 2017-12-21 09:25:17,101 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblCompany&moduleType=&SysType=Supplier&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:25:17,101 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=CompanyCode&operation=22&BillDate=2017-12-21&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:25:17,102 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblCompany,];moduleType=[,];SysType=[Supplier,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:25:17,102 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[CompanyCode,];operation=[22,];BillDate=[2017-12-21,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:25:17,102 Line:229 TreeMgt.getTree sql= select classCode,ComFullName,ComNumber,id from tblCompany where statusId =0   and isCatalog=1  and moduleType in ('1','3') order by ComNumber
 [DEBUG] 2017-12-21 09:25:17,113 Line:3434 DynDBManager.popSelect selectName=ProviderInVoiceWithPayDate; sql=select * from (select tblCompany.classCode f1 ,(case when isnull(tblCompany.Discount,0)=0 then 100 else isnull(tblCompany.Discount,0) end) f2 ,case when len(tblCompany.DepartmentCode)>0 then tblCompany.DepartmentCode else '00101' end f3 ,case when len(tblCompany.DepartmentCode)>0 then tblDepartment.DeptFullName else '默认部门' end f4 ,case when len(tblCompany.EmployeeID)>0 then tblCompany.EmployeeID else '1' end f5 ,case when len(tblCompany.EmployeeID)>0 then tblEmployee.EmpFullName else 'admin' end f6 ,CONVERT(varchar(10),dateadd(Day,case tblCompany.SettleCys when 0 then null else tblCompany.SettleCys end,'2017-12-21'),121) f7 ,case tblCompany.InVoiceType when 1 then '0' when 2 then '0' else '0' end f8 ,tblCompany.ComFullName f9 ,tblCompany.ComNumber f10 ,tblCompany.ComFullNamePYM f11 
,tblCompany.isCatalog as childCount,ROW_NUMBER() over( order by tblCompany.ComNumber,tblCompany.ComFullName) as row_id from tblCompany
  left join tblEmployee on tblCompany.EmployeeID=tblEmployee.id
  left join tblDepartment on tblCompany.DepartmentCode=tblDepartment.classCode
      where 1=1  and (tblCompany.ClientFlag=1 or tblCompany.ClientFlag=3)   and (tblCompany.statusId!='-1')) a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:25:20,709 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=StockCode&operation=22&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup
 [DEBUG] 2017-12-21 09:25:20,710 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[StockCode,];operation=[22,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];
 [DEBUG] 2017-12-21 09:25:20,735 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblStock&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:25:20,736 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=StockCode&operation=22&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:25:20,736 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblStock,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:25:20,737 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[StockCode,];operation=[22,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:25:20,738 Line:229 TreeMgt.getTree sql= select classCode,StockFullName,StockNumber,id from tblStock where statusId =0   and isCatalog=1 order by StockNumber
 [DEBUG] 2017-12-21 09:25:20,742 Line:3434 DynDBManager.popSelect selectName=Stock; sql=select * from (select tblStock.classCode f1 ,tblStock.StockNumber f2 ,tblStock.StockFullName f3 ,tblStock.StockFullNamePYM f4 
,tblStock.isCatalog as childCount,ROW_NUMBER() over( order by tblStock.StockNumber,tblStock.StockFullName) as row_id from tblStock where 1=1 and tblStock.statusid!='-1' and tblStock.workFlowNodeName='finish' and tblStock.classCode like '_____') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:25:24,695 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:25:24,695 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:25:24,731 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:25:24,731 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:25:24,732 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:25:24,732 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:25:24,733 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:25:24,742 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:25:37,816 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:25:37,818 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblBuyInStock,];parentCode=[,];button=[,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[4,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];ChangeAmt=[0,];checkPersons=[,];workFlowNode=[,];workFlowNodeName=[,];CurNeedPayAmt=[0,];InvoiceStatus=[0,];NeedPayAmt=[0,];BillNo=[BI1712210002,];BillDate=[2017-12-21,];CompanyCode=[00003,];tblCompany_ComFullName=[麦田食品,];DepartmentCode=[00101,];EmployeeID=[1,];tblEmployee_EmpFullName=[admin,];tblDepartment_DeptFullName=[默认部门,];StockCode=[00002,];tblStock_StockFullName=[总仓2,];InVoiceType=[3,];PayAmount=[0,];ProceDureExp=[0,];AccAmt=[0,];FactOutcome=[0,];freightAcc=[,];freightAmount=[0,];AlreadyPayAmt=[0,];DiscountAmount=[0,];Currency=[,];CurAlrPayAmt=[0,];CurDiscountAmount=[0,];CurProceDureExp=[0,];ProjectCode=[,];Period=[,];PeriodMonth=[,];PeriodYear=[,];InvoiceAmount=[0,];NoInvoiceAmount=[0,];CurBackAmount=[0,];BuyAskPriceID=[,];BuyOrderID=[,];BuyOrderNo=[,];CurAlreadyPayAmt=[0,];BackAmount=[0,];CheckPersont=[,];TrackNo=[,];Discount=[100,];DisAmount=[0,];Tax=[0,];PayDate=[,];CurrencyRate=[1,];TotalAmount=[100,];TotalTaxAmount=[100,];TotalCoTaxAmt=[0,];CurTotalAmount=[100,];CertificateNo=[,];AfterChangeAmt=[,];CurAfterChangeAmt=[,];CurChangeAmt=[,];printCount=[0,];SCompanyID=[,];statusId=[0,];finishTime=[,];lastUpdateBy=[,];lastUpdateTime=[,];createBy=[,];createTime=[,];tblBuyInStockDetPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblBuyPayAccountPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblBuyInStockDet_tblGoods_GoodsNumber=[xl0007,];tblBuyInStockDet_tblGoods_GoodsFullName=[猪肉馅,];tblBuyInStockDet_tblGoods_GoodsSpec=[,];tblBuyInStockDet_tblGoods_BaseUnit=[,];tblBuyInStockDet_Qty=[100,];tblBuyInStockDet_Price=[1,];tblBuyInStockDet_Amount=[100,];tblBuyInStockDet_Remark=[,];tblBuyInStockDet_StockCode=[,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];tblBuyInStockDet_SalesOutID=[,];tblBuyInStockDet_GoodsCode=[0000500007,];tblBuyInStockDet_BatchNo=[,];tblBuyInStockDet_Inch=[,];tblBuyInStockDet_Hue=[,];tblBuyInStockDet_yearNO=[,];tblBuyInStockDet_ProDate=[,];tblBuyInStockDet_Availably=[,];tblBuyInStockDet_Seq=[,];tblBuyInStockDet_Discount=[100,];tblBuyInStockDet_DisPrice=[1,];tblBuyInStockDet_DisBackAmt=[100,];tblBuyInStockDet_DisAmount=[0,];tblBuyInStockDet_TaxPrice=[1,];tblBuyInStockDet_TaxAmount=[100,];tblBuyInStockDet_CoTaxAmt=[0,];tblBuyInStockDet_CurPrice=[1,];tblBuyInStockDet_CurAmount=[100,];tblBuyInStockDet_ApportionAmt=[,];tblBuyInStockDet_SourceID=[,];tblBuyInStockDet_InvoiceAmount=[0,];tblBuyInStockDet_PresentSampleType=[,];tblBuyInStockDet_NotPayQty=[,];tblBuyInStockDet_PayQty=[,];tblBuyInStockDet_SecQty=[0,];tblBuyInStockDet_BaseQty=[0,];tblBuyInStockDet_CheckBarCode=[,];tblBuyInStockDet_BackPayQty=[,];tblBuyInStockDet_PreferAmount=[,];tblBuyInStockDet_detsId=[,];tblBuyPayAccount_Paytype=[1,];tblBuyPayAccount_tblAccTypeInfo_AccName=[,];tblBuyPayAccount_Amount=[0,];tblBuyPayAccount_Remark=[,];tblBuyPayAccount_Account=[,];tblBuyPayAccount_ExeBalFcAmt=[,];tblBuyPayAccount_detsId=[,];Remark=[,];
 [DEBUG] 2017-12-21 09:25:37,819 Line:3843 添加单据desingId=null工作流designId=eae3edac_0906121936579370110
 [DEBUG] 2017-12-21 09:25:37,825 Line:5847  INSERT INTO  tblBuyInStock(ChangeAmt,checkPersons,id,workFlowNode,workFlowNodeName,CurNeedPayAmt,InvoiceStatus,NeedPayAmt,BillNo,BillDate,CompanyCode,DepartmentCode,EmployeeID,StockCode,InVoiceType,PayAmount,ProceDureExp,AccAmt,FactOutcome,freightAcc,freightAmount,AlreadyPayAmt,DiscountAmount,Currency,CurAlrPayAmt,CurDiscountAmount,CurProceDureExp,ProjectCode,Period,PeriodMonth,PeriodYear,Remark,InvoiceAmount,NoInvoiceAmount,CurBackAmount,BuyAskPriceID,BuyOrderID,BuyOrderNo,CurAlreadyPayAmt,BackAmount,CheckPersont,TrackNo,Discount,DisAmount,Tax,PayDate,CurrencyRate,TotalAmount,TotalTaxAmount,TotalCoTaxAmt,CurTotalAmount,Attachment,CertificateNo,AfterChangeAmt,CurAfterChangeAmt,CurChangeAmt,printCount,SCompanyID,statusId,finishTime,lastUpdateBy,lastUpdateTime,createBy,createTime) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:25:37,826 Line:5853 1:0.0
 [DEBUG] 2017-12-21 09:25:37,826 Line:5853 2:
 [DEBUG] 2017-12-21 09:25:37,826 Line:5853 3:b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,827 Line:5853 4:-1
 [DEBUG] 2017-12-21 09:25:37,827 Line:5853 5:finish
 [DEBUG] 2017-12-21 09:25:37,827 Line:5853 6:0.0
 [DEBUG] 2017-12-21 09:25:37,828 Line:5853 7:0
 [DEBUG] 2017-12-21 09:25:37,828 Line:5853 8:0.0
 [DEBUG] 2017-12-21 09:25:37,829 Line:5853 9:BI1712210002
 [DEBUG] 2017-12-21 09:25:37,829 Line:5853 10:2017-12-21
 [DEBUG] 2017-12-21 09:25:37,829 Line:5853 11:00003
 [DEBUG] 2017-12-21 09:25:37,830 Line:5853 12:00101
 [DEBUG] 2017-12-21 09:25:37,830 Line:5853 13:1
 [DEBUG] 2017-12-21 09:25:37,830 Line:5853 14:00002
 [DEBUG] 2017-12-21 09:25:37,830 Line:5853 15:3
 [DEBUG] 2017-12-21 09:25:37,830 Line:5853 16:0.0
 [DEBUG] 2017-12-21 09:25:37,831 Line:5853 17:0.0
 [DEBUG] 2017-12-21 09:25:37,831 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:25:37,831 Line:5853 19:0.0
 [DEBUG] 2017-12-21 09:25:37,831 Line:5853 20:
 [DEBUG] 2017-12-21 09:25:37,831 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:25:37,831 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:25:37,832 Line:5853 23:0.0
 [DEBUG] 2017-12-21 09:25:37,832 Line:5853 24:
 [DEBUG] 2017-12-21 09:25:37,832 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:25:37,832 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:25:37,832 Line:5853 27:0.0
 [DEBUG] 2017-12-21 09:25:37,832 Line:5853 28:
 [DEBUG] 2017-12-21 09:25:37,833 Line:5853 29:12
 [DEBUG] 2017-12-21 09:25:37,833 Line:5853 30:12
 [DEBUG] 2017-12-21 09:25:37,833 Line:5853 31:2017
 [DEBUG] 2017-12-21 09:25:37,833 Line:5853 32:
 [DEBUG] 2017-12-21 09:25:37,833 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:25:37,833 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:25:37,834 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:25:37,834 Line:5853 36:
 [DEBUG] 2017-12-21 09:25:37,834 Line:5853 37:
 [DEBUG] 2017-12-21 09:25:37,834 Line:5853 38:
 [DEBUG] 2017-12-21 09:25:37,834 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:25:37,834 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:25:37,835 Line:5853 41:
 [DEBUG] 2017-12-21 09:25:37,835 Line:5853 42:
 [DEBUG] 2017-12-21 09:25:37,835 Line:5853 43:100.0
 [DEBUG] 2017-12-21 09:25:37,835 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:25:37,835 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:25:37,835 Line:5853 46:
 [DEBUG] 2017-12-21 09:25:37,836 Line:5853 47:1.0
 [DEBUG] 2017-12-21 09:25:37,836 Line:5853 48:100.0
 [DEBUG] 2017-12-21 09:25:37,836 Line:5853 49:100.0
 [DEBUG] 2017-12-21 09:25:37,836 Line:5853 50:0.0
 [DEBUG] 2017-12-21 09:25:37,836 Line:5853 51:100.0
 [DEBUG] 2017-12-21 09:25:37,836 Line:5853 52:
 [DEBUG] 2017-12-21 09:25:37,837 Line:5853 53:
 [DEBUG] 2017-12-21 09:25:37,837 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:25:37,838 Line:5853 55:0.0
 [DEBUG] 2017-12-21 09:25:37,840 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:25:37,841 Line:5853 57:0
 [DEBUG] 2017-12-21 09:25:37,841 Line:5853 58:00001
 [DEBUG] 2017-12-21 09:25:37,842 Line:5853 59:0
 [DEBUG] 2017-12-21 09:25:37,842 Line:5853 60:2017-12-21 09:25:37
 [DEBUG] 2017-12-21 09:25:37,843 Line:5853 61:1
 [DEBUG] 2017-12-21 09:25:37,844 Line:5853 62:2017-12-21 09:25:37
 [DEBUG] 2017-12-21 09:25:37,844 Line:5853 63:1
 [DEBUG] 2017-12-21 09:25:37,844 Line:5853 64:2017-12-21 09:25:37
 [DEBUG] 2017-12-21 09:25:37,852 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:25:37,852 Line:5853 1:b83a05a1_1712210925378520032
 [DEBUG] 2017-12-21 09:25:37,852 Line:5853 2:b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,853 Line:5853 3:
 [DEBUG] 2017-12-21 09:25:37,853 Line:5853 4:
 [DEBUG] 2017-12-21 09:25:37,853 Line:5853 5:
 [DEBUG] 2017-12-21 09:25:37,853 Line:5853 6:
 [DEBUG] 2017-12-21 09:25:37,853 Line:5853 7:0000500007
 [DEBUG] 2017-12-21 09:25:37,853 Line:5853 8:
 [DEBUG] 2017-12-21 09:25:37,853 Line:5853 9:
 [DEBUG] 2017-12-21 09:25:37,854 Line:5853 10:
 [DEBUG] 2017-12-21 09:25:37,854 Line:5853 11:
 [DEBUG] 2017-12-21 09:25:37,854 Line:5853 12:
 [DEBUG] 2017-12-21 09:25:37,854 Line:5853 13:
 [DEBUG] 2017-12-21 09:25:37,855 Line:5853 14:
 [DEBUG] 2017-12-21 09:25:37,856 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:25:37,856 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:25:37,856 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:25:37,856 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:25:37,856 Line:5853 19:0
 [DEBUG] 2017-12-21 09:25:37,857 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:25:37,857 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:25:37,857 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:25:37,857 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:25:37,857 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:25:37,857 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:25:37,858 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:25:37,858 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:25:37,858 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:25:37,858 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:25:37,858 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:25:37,858 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:25:37,858 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:25:37,859 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:25:37,859 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:25:37,859 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:25:37,859 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:25:37,859 Line:5853 37:
 [DEBUG] 2017-12-21 09:25:37,859 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:25:37,859 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:25:37,860 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:25:37,860 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:25:37,860 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:25:37,860 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:25:37,860 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:25:37,860 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:25:37,860 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:25:37,860 Line:5853 47:0
 [DEBUG] 2017-12-21 09:25:37,861 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:25:37,861 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:25:37,861 Line:5853 50:0
 [DEBUG] 2017-12-21 09:25:37,861 Line:5853 51:
 [DEBUG] 2017-12-21 09:25:37,861 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:25:37,861 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:25:37,861 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:25:37,862 Line:5853 55:0
 [DEBUG] 2017-12-21 09:25:37,862 Line:5853 56:0
 [DEBUG] 2017-12-21 09:25:37,862 Line:5853 57:
 [DEBUG] 2017-12-21 09:25:37,862 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:25:37,862 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:25:37,862 Line:5853 60:
 [DEBUG] 2017-12-21 09:25:37,862 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:25:37,863 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:25:37,870 Line:313 exeCondition:tblBuyInStock_Add :100 < 0
 [DEBUG] 2017-12-21 09:25:37,872 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,872 Line:313 exeCondition:tblBuyInStock_Add :('3'=='3'&&0!=0)||0<0
 [DEBUG] 2017-12-21 09:25:37,875 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,875 Line:313 exeCondition:tblBuyInStock_Add :0 < 0
 [DEBUG] 2017-12-21 09:25:37,876 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,876 Line:313 exeCondition:tblBuyInStock_Add :0>0&&''.length==0
 [DEBUG] 2017-12-21 09:25:37,877 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,877 Line:313 exeCondition:tblBuyInStock_Add :''.length>0
 [DEBUG] 2017-12-21 09:25:37,878 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,878 Line:313 exeCondition:tblBuyInStock_Add :''.length>0
 [DEBUG] 2017-12-21 09:25:37,879 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,879 Line:313 exeCondition:tblBuyInStock_Add :true
 [DEBUG] 2017-12-21 09:25:37,879 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:37,880 Line:921 自定义执行的语句显示： tblBuyInStock_Add_QuoteOrder_Validate :select a.BillNo,billDate as BuyInDate from tblBuyOrder a,tblBuyInStockDet b where b.f_ref=? and b.BuyOrderID=a.id and a.BillDate>?
 [DEBUG] 2017-12-21 09:25:37,880 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,881 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,881 Line:988 2值：2017-12-21
 [DEBUG] 2017-12-21 09:25:37,883 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:25:37,884 Line:313 exeCondition:tblBuyInStock_Add_QuoteOrder_Validate :'null'!='null'
 [DEBUG] 2017-12-21 09:25:37,885 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,885 Line:921 自定义执行的语句显示： tblBuyInStock_Add_QuoteOrder_Validate :select a.BillNo,c.ComFullName from tblBuyOrder a,tblBuyInStockDet b,tblCompany c where b.f_ref=? and b.BuyOrderID=a.id and a.CompanyCode=c.classCode and a.CompanyCode!=?
 [DEBUG] 2017-12-21 09:25:37,885 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,885 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,885 Line:988 2值：00003
 [DEBUG] 2017-12-21 09:25:37,890 Line:1043 ---上述语句时间---5
 [DEBUG] 2017-12-21 09:25:37,891 Line:313 exeCondition:tblBuyInStock_Add_QuoteOrder_Validate :'null'!='null'
 [DEBUG] 2017-12-21 09:25:37,892 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,892 Line:921 自定义执行的语句显示： tblBuyInStock_Add_QuoteOrder_Validate :select a.BillNo,c.ComFullName from tblBuyAskPrice a,tblBuyInStockDet b,tblCompany c where b.f_ref=? and b.BuyAskPriceID=a.id and a.CompanyCode=c.classCode and a.CompanyCode!=?
 [DEBUG] 2017-12-21 09:25:37,893 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,894 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,894 Line:988 2值：00003
 [DEBUG] 2017-12-21 09:25:37,900 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:25:37,901 Line:313 exeCondition:tblBuyInStock_Add_QuoteOrder_Validate :'null'!='null'
 [DEBUG] 2017-12-21 09:25:37,901 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,902 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select count(0) NoQuote from tblBuyInStockDet a left join tblBuyOrderDet b on isnull(a.BuyOrderID,'')=b.f_ref and a.GoodsCode=b.GoodsCode and (a.BatchNo=b.BatchNo or b.BatchNo='') and (a.Inch=b.Inch or b.Inch='') and (a.Hue=b.Hue or b.Hue='') and (a.yearNo=b.yearNo or b.yearNo='') and (a.ProDate=b.ProDate or b.ProDate='') and (a.Availably=b.Availably or b.Availably='') where ? ='true' and a.f_ref=? and b.id is null
 [DEBUG] 2017-12-21 09:25:37,902 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,902 Line:988 1值：false
 [DEBUG] 2017-12-21 09:25:37,902 Line:988 2值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,911 Line:1025 query condition columnName:NoQuote----value:0
 [DEBUG] 2017-12-21 09:25:37,911 Line:1043 ---上述语句时间---9
 [DEBUG] 2017-12-21 09:25:37,911 Line:313 exeCondition:tblBuyInStock_Add :0>0
 [DEBUG] 2017-12-21 09:25:37,912 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,912 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select tblBuyOrder.BillNo as BuyOrderID from tblBuyInStock left join tblBuyInStockDet on tblBuyInStock.id=tblBuyInStockDet.f_ref left join tblBuyOrderDet on tblBuyOrderDet.id=tblBuyInStockDet.SourceID inner join tblBuyOrder on tblBuyOrder.id=tblBuyOrderDet.f_ref where tblBuyInStockDet.f_ref=? and tblBuyInStock.InVoiceType!=tblBuyOrder.InVoiceType
 [DEBUG] 2017-12-21 09:25:37,912 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,912 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,917 Line:1043 ---上述语句时间---5
 [DEBUG] 2017-12-21 09:25:37,918 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:25:37,918 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,919 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select tblGoods.GoodsFullName as GoodsQ from tblBuyInStockDet,tblGoods where len(ProDate)>0 and len(Availably)>0 and ProDate>Availably and tblGoods.classCode=tblBuyInStockDet.GoodsCode and f_ref=?
 [DEBUG] 2017-12-21 09:25:37,919 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,919 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,922 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:25:37,923 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:25:37,923 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,924 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select tblGoods.GoodsFullName as GoodsQ from tblBuyInStockDet,tblGoods where isnull(tblBuyInStockDet.Qty,0)<=0 and tblGoods.classCode=tblBuyInStockDet.GoodsCode and f_ref=?
 [DEBUG] 2017-12-21 09:25:37,924 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,924 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,926 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:25:37,927 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:25:37,927 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,928 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select b.GoodsFullName as GoodsP,b.garniture from tblBuyInStockDet a,tblGoods b where (isnull(a.Price,0)<0 or (b.garniture='2' and isnull(a.Price,0)=0)) and b.classCode=a.GoodsCode and a.f_ref=? and a.PresentSampleType not in ('1','2')
 [DEBUG] 2017-12-21 09:25:37,928 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,928 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,932 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:25:37,932 Line:313 exeCondition:tblBuyInStock_Add :'null'=='2' && 'null' != 'null'
 [DEBUG] 2017-12-21 09:25:37,933 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,933 Line:313 exeCondition:tblBuyInStock_Add :'null'=='1' && 'null' != 'null'
 [DEBUG] 2017-12-21 09:25:37,934 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,934 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select tblGoods.GoodsFullName as GoodsSample from tblBuyInStockDet,tblGoods where isnull(tblBuyInStockDet.Price,0)!=0 and tblGoods.classCode=tblBuyInStockDet.GoodsCode and f_ref=? and tblBuyInStockDet.PresentSampleType in ('1','2')
 [DEBUG] 2017-12-21 09:25:37,934 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,935 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,938 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:25:37,938 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:25:37,939 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,939 Line:313 exeCondition:tblBuyInStock_Add :false==true
 [DEBUG] 2017-12-21 09:25:37,940 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,940 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select 'disCountError' as disCountError from tblBuyInStockDet a where a.f_ref=? and (Discount<=0 or Discount>100)
 [DEBUG] 2017-12-21 09:25:37,940 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,941 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,943 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:25:37,943 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:25:37,944 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,944 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select dbo.getDigits('tblBuyInStockDet','TaxAmount',sum(tblBuyInStockDet.TaxAmount)) as SumDetAmt,dbo.getDigits('tblBuyInStockDet','TaxAmount',(cast(? as numeric(18,8))+cast(? as numeric(18,8)))) as sumMainAmt from tblBuyInStockDet where  tblBuyInStockDet.f_ref=?
 [DEBUG] 2017-12-21 09:25:37,944 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,944 Line:988 1值：100
 [DEBUG] 2017-12-21 09:25:37,944 Line:988 2值：0
 [DEBUG] 2017-12-21 09:25:37,944 Line:988 3值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,979 Line:1025 query condition columnName:SumDetAmt----value:100.0
 [DEBUG] 2017-12-21 09:25:37,980 Line:1025 query condition columnName:sumMainAmt----value:100.0
 [DEBUG] 2017-12-21 09:25:37,980 Line:1043 ---上述语句时间---36
 [DEBUG] 2017-12-21 09:25:37,980 Line:313 exeCondition:tblBuyInStock_Add :100.0!=100.0
 [DEBUG] 2017-12-21 09:25:37,982 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,982 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select GoodsFullName as GoodsSeq from tblBuyInStockDet a left join tblgoods c on c.classCode=a.GoodsCode where c.seqIsUsed=0 and len(isnull(a.seq,''))=0 and (select isUsed from tblGoodsAttribute where propName='Seq')=1 and a.f_ref=?
 [DEBUG] 2017-12-21 09:25:37,982 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,983 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,994 Line:1043 ---上述语句时间---12
 [DEBUG] 2017-12-21 09:25:37,994 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:25:37,995 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:37,996 Line:921 自定义执行的语句显示： tblBuyInStock_Add_ManyAccount_Validate :select 'exisAccErr' as exisAccErr from tblBuyPayAccount where tblBuyPayAccount.f_ref=? and (len(isnull(tblBuyPayAccount.Account,''))>0 and isnull(tblBuyPayAccount.Amount,0)=0)
 [DEBUG] 2017-12-21 09:25:37,996 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:37,996 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:37,999 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:25:37,999 Line:313 exeCondition:tblBuyInStock_Add_ManyAccount_Validate :'null'!='null'
 [DEBUG] 2017-12-21 09:25:38,000 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,000 Line:921 自定义执行的语句显示： tblBuyInStock_Add_ManyAccount_Validate :select 'sameAcc' as sameAcc from tblBuyPayAccount where f_ref=? group by Account having count(Account)>1
 [DEBUG] 2017-12-21 09:25:38,000 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:38,000 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,003 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:25:38,003 Line:313 exeCondition:tblBuyInStock_Add_ManyAccount_Validate :'null'=='sameAcc'
 [DEBUG] 2017-12-21 09:25:38,004 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,004 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select AccNumber,AccName,IsForCur,Currency as CURD from tblAccTypeInfo where AccNumber=? and SCompanyID=?
 [DEBUG] 2017-12-21 09:25:38,005 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:38,005 Line:988 1值：
 [DEBUG] 2017-12-21 09:25:38,005 Line:988 2值：00001
 [DEBUG] 2017-12-21 09:25:38,014 Line:1043 ---上述语句时间---10
 [DEBUG] 2017-12-21 09:25:38,014 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select Account as AnyAccount from tblBuyPayAccount left join tblAccTypeinfo on tblAccTypeinfo.Accnumber=tblBuyPayAccount.Account where f_ref=? and ((len(?) > 0 and tblAccTypeInfo.Currency!=?) or (len(?)=0 and len(tblAccTypeInfo.Currency)!=0))
 [DEBUG] 2017-12-21 09:25:38,014 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:38,014 Line:988 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,014 Line:988 2值：
 [DEBUG] 2017-12-21 09:25:38,015 Line:988 3值：
 [DEBUG] 2017-12-21 09:25:38,015 Line:988 4值：
 [DEBUG] 2017-12-21 09:25:38,018 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:25:38,018 Line:313 exeCondition:tblBuyInStock_Add :''.length>0 && 1 <= 0
 [DEBUG] 2017-12-21 09:25:38,019 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,019 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:25:38,020 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,020 Line:313 exeCondition:tblBuyInStock_Add : (''.length == 0 && 1>0 &&1!=1)
 [DEBUG] 2017-12-21 09:25:38,021 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,022 Line:313 exeCondition:tblBuyInStock_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:25:38,024 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,024 Line:313 exeCondition:tblBuyInStock_Add :true
 [DEBUG] 2017-12-21 09:25:38,025 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,026 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStock set AfterChangeAmt=TotalTaxAmount,CurAfterChangeAmt=CurTotalAmount,NoInvoiceAmount=TotalTaxAmount,InvoiceAmount=0,InvoiceStatus=0,NeedPayAmt=TotalTaxAmount-PayAmount+(case when freightAcc like '2202%' then freightAmount else 0 end),CurNeedPayAmt=round(CurTotalAmount-CurAlrPayAmt+(case when freightAcc like '2202%' then freightAmount/CurrencyRate else 0 end),?),AlreadyPayAmt=PayAmount,CurAlreadyPayAmt=CurAlrPayAmt,BackAmount=0,CurBackAmount=0,CertificateNo='' where id=?
 [DEBUG] 2017-12-21 09:25:38,026 Line:1154 1整数 值：2
 [DEBUG] 2017-12-21 09:25:38,026 Line:1157 2值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,029 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=1
 [DEBUG] 2017-12-21 09:25:38,030 Line:229 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:25:38,030 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set PreferBackAmount=case when tblBuyInStock.TotalTaxAmount+tblBuyInStock.DiscountAmount=0 then 0 else round(tblBuyInStock.TotalTaxAmount*tblBuyInStockDet.TaxAmount/(tblBuyInStock.TotalTaxAmount+tblBuyInStock.DiscountAmount),?) end  FROM tblBuyInStock where tblBuyInStockDet.f_ref=? and tblBuyInstock.id=?
 [DEBUG] 2017-12-21 09:25:38,030 Line:1154 1整数 值：2
 [DEBUG] 2017-12-21 09:25:38,030 Line:1157 2值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,030 Line:1157 3值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,035 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=1
 [DEBUG] 2017-12-21 09:25:38,035 Line:229 ************上述语句执行时间：5
 [DEBUG] 2017-12-21 09:25:38,036 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set tblBuyInStockDet.PreferAmount=tblBuyInStockDet.TaxAmount-tblBuyInStockDet.PreferBackAmount FROM tblBuyInStock where tblBuyInStockDet.f_ref=? and tblBuyInstock.id=?
 [DEBUG] 2017-12-21 09:25:38,036 Line:1157 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,036 Line:1157 2值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,042 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=1
 [DEBUG] 2017-12-21 09:25:38,042 Line:229 ************上述语句执行时间：6
 [DEBUG] 2017-12-21 09:25:38,042 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set NoInvoiceAmount=PreferBackAmount,InvoiceAmount=0,InvoiceStatus=0,FactInQty=Qty,BackQty=0,InvoiceQty=0,NotInvoiceQty=Qty where f_ref=?
 [DEBUG] 2017-12-21 09:25:38,042 Line:1157 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,045 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=1
 [DEBUG] 2017-12-21 09:25:38,045 Line:229 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:25:38,045 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set freightAmount=case when (tblBuyInstock.TotalTaxAmount+tblBuyInstock.DiscountAmount)=0 then 0 else TaxAmount/(tblBuyInstock.TotalTaxAmount+tblBuyInstock.DiscountAmount)*tblBuyInstock.freightAmount end from tblBuyInstock where tblBuyInstock.id=? and f_ref=tblBuyInstock.id
 [DEBUG] 2017-12-21 09:25:38,046 Line:1157 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,049 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=1
 [DEBUG] 2017-12-21 09:25:38,049 Line:229 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:25:38,049 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'false'=='false'
 [DEBUG] 2017-12-21 09:25:38,050 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,050 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set StockCode=(select StockCode from tblBuyInStock where id=?) where f_ref=?
 [DEBUG] 2017-12-21 09:25:38,050 Line:1157 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,051 Line:1157 2值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,054 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=1
 [DEBUG] 2017-12-21 09:25:38,054 Line:408 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:25:38,054 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :''.length>0
 [DEBUG] 2017-12-21 09:25:38,055 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,055 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :true
 [DEBUG] 2017-12-21 09:25:38,056 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,056 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:{call proc_BuyUpdateOrderQty(?,?,?,?)}
 [DEBUG] 2017-12-21 09:25:38,057 Line:1270 b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,057 Line:1270 add
 [DEBUG] 2017-12-21 09:25:38,128 Line:425 ************上述语句执行时间：72
 [DEBUG] 2017-12-21 09:25:38,128 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'true'=='true'
 [DEBUG] 2017-12-21 09:25:38,129 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,129 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set Availably=a.Availably from(select  b.id as id,case when tblGoods.AvailablyType='Day' then convert(varchar(10),dateadd(Day,tblGoods.Validity,ProDate),21) when tblGoods.AvailablyType='Month' then convert(varchar(10),dateadd(Month,tblGoods.Validity,ProDate),21) when tblGoods.AvailablyType='Year' then convert(varchar(10),dateadd(Year,tblGoods.Validity,ProDate),21) else '' end as Availably from tblBuyInStock  a join tblBuyInStockDet b on b.f_ref=a.id join tblGoods on tblGoods.classCode=b.GoodsCode where a.id=? and len(Availably)=0 and len(ProDate)!=0 and tblGoods.Validity!=0)a where tblBuyInStockDet.id=a.id
 [DEBUG] 2017-12-21 09:25:38,130 Line:1157 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,141 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=0
 [DEBUG] 2017-12-21 09:25:38,141 Line:408 ************上述语句执行时间：12
 [DEBUG] 2017-12-21 09:25:38,141 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set ProDate=a.ProDate from(select  b.id as id,case when tblGoods.AvailablyType='Day' then convert(varchar(10),dateadd(Day,(-1)*tblGoods.Validity,Availably),21) when tblGoods.AvailablyType='Month' then convert(varchar(10),dateadd(Month,(-1)*tblGoods.Validity,Availably),21) when tblGoods.AvailablyType='Year' then convert(varchar(10),dateadd(Year,(-1)*tblGoods.Validity,Availably),21) else '' end as ProDate from tblBuyInStock  a join tblBuyInStockDet b on b.f_ref=a.id join tblGoods on tblGoods.classCode=b.GoodsCode where a.id=? and len(ProDate)=0 and len(Availably)!=0 and tblGoods.Validity!=0)a where tblBuyInStockDet.id=a.id
 [DEBUG] 2017-12-21 09:25:38,142 Line:1157 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,149 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=0
 [DEBUG] 2017-12-21 09:25:38,149 Line:408 ************上述语句执行时间：8
 [DEBUG] 2017-12-21 09:25:38,149 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'0' != '0'
 [DEBUG] 2017-12-21 09:25:38,150 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,150 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'0' != '0'
 [DEBUG] 2017-12-21 09:25:38,151 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,151 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'0' == '0' && false==false
 [DEBUG] 2017-12-21 09:25:38,152 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,175 Line:313 exeCondition:tblBuyInStock_Add_One :'PriceNo'!='PriceNo'||'false'=='true'
 [DEBUG] 2017-12-21 09:25:38,176 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,176 Line:313 exeCondition:tblBuyInStock_Add_One :'0' != '0'
 [DEBUG] 2017-12-21 09:25:38,177 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,177 Line:313 exeCondition:tblBuyInStock_Add_One :'0' != '0'
 [DEBUG] 2017-12-21 09:25:38,178 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,178 Line:313 exeCondition:tblBuyInStock_Add_One :'false'=='true'
 [DEBUG] 2017-12-21 09:25:38,179 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,180 Line:313 exeCondition:tblBuyInStock_Add_One :""!=""
 [DEBUG] 2017-12-21 09:25:38,181 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,181 Line:313 exeCondition:tblBuyInStock_Add_One :true
 [DEBUG] 2017-12-21 09:25:38,182 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,182 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_One:update tblBuyInStockDet set NotPayQty=Qty,PayQty=0 where f_ref=?
 [DEBUG] 2017-12-21 09:25:38,183 Line:1157 1值：b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,185 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_One,  影响行数=1
 [DEBUG] 2017-12-21 09:25:38,185 Line:408 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:25:38,186 Line:313 exeCondition:tblBuyInStock_Add_One :true
 [DEBUG] 2017-12-21 09:25:38,186 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,187 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_One:{call proc_BuyInPayAmort(?,?,?,?)}
 [DEBUG] 2017-12-21 09:25:38,188 Line:1270 b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,188 Line:1270 add
 [DEBUG] 2017-12-21 09:25:38,261 Line:425 ************上述语句执行时间：74
 [DEBUG] 2017-12-21 09:25:38,262 Line:313 exeCondition:tblBuyInStock_Add_One :3!=2
 [DEBUG] 2017-12-21 09:25:38,263 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,263 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_One:{call proc_insertStockDetGM(@Period=?,@PeriodYear=?,@PeriodMonth=?,@GoodsCode=?,@StockCode=?,@BillID=?,@BillType=?,@BillDate=?,@BillNo=?,@InstoreQty=?,@InstorePrice=?,@InstoreAmount=?,@createBy=?,@lastUpdateBy=?,@createTime=?,@lastUpdateTime=?,@SCompanyID=?,@MRemark=?,@DRemark=?,@SourceID=?,@CompanyCode=?,@EmployeeID=?,@DepartmentCode=?,@SalesPrice=?,@SalesAmount=?,@SalesQty=?,@Amount=?,@Price=?,@DiscountAmount=?,@TrackNo=?,@PresentSampleType=?,@from=?,@where=?,@retCode=?,@retVal=?)}
 [DEBUG] 2017-12-21 09:25:38,263 Line:1270 12
 [DEBUG] 2017-12-21 09:25:38,264 Line:1270 2017
 [DEBUG] 2017-12-21 09:25:38,264 Line:1270 12
 [DEBUG] 2017-12-21 09:25:38,264 Line:1270 tblBuyInStockDet.GoodsCode
 [DEBUG] 2017-12-21 09:25:38,264 Line:1270 tblBuyInStockDet.StockCode
 [DEBUG] 2017-12-21 09:25:38,264 Line:1270 b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,264 Line:1270 tblBuyInStock
 [DEBUG] 2017-12-21 09:25:38,264 Line:1270 2017-12-21
 [DEBUG] 2017-12-21 09:25:38,265 Line:1270 BI1712210002
 [DEBUG] 2017-12-21 09:25:38,265 Line:1270 tblBuyInStockDet.Qty
 [DEBUG] 2017-12-21 09:25:38,265 Line:1270 (tblBuyInStockDet.TaxAmount+tblBuyInStockDet.freightAmount)/tblBuyInStockDet.Qty
 [DEBUG] 2017-12-21 09:25:38,265 Line:1270 tblBuyInStockDet.TaxAmount+tblBuyInStockDet.freightAmount
 [DEBUG] 2017-12-21 09:25:38,265 Line:1270 1
 [DEBUG] 2017-12-21 09:25:38,265 Line:1270 1
 [DEBUG] 2017-12-21 09:25:38,266 Line:1270 2017-12-21 09:25:37
 [DEBUG] 2017-12-21 09:25:38,266 Line:1270 2017-12-21 09:25:37
 [DEBUG] 2017-12-21 09:25:38,266 Line:1270 00001
 [DEBUG] 2017-12-21 09:25:38,266 Line:1270 
 [DEBUG] 2017-12-21 09:25:38,266 Line:1270 tblBuyInStockDet.Remark
 [DEBUG] 2017-12-21 09:25:38,266 Line:1270 tblBuyInStockDet.id
 [DEBUG] 2017-12-21 09:25:38,267 Line:1270 00003
 [DEBUG] 2017-12-21 09:25:38,267 Line:1270 1
 [DEBUG] 2017-12-21 09:25:38,267 Line:1270 00101
 [DEBUG] 2017-12-21 09:25:38,267 Line:1270 tblBuyInStockDet.TaxPrice
 [DEBUG] 2017-12-21 09:25:38,267 Line:1270 tblBuyInStockDet.TaxAmount
 [DEBUG] 2017-12-21 09:25:38,267 Line:1270 tblBuyInStockDet.Qty
 [DEBUG] 2017-12-21 09:25:38,268 Line:1270 tblBuyInStockDet.DisAmount
 [DEBUG] 2017-12-21 09:25:38,268 Line:1270 tblBuyInStockDet.DisPrice
 [DEBUG] 2017-12-21 09:25:38,268 Line:1270 0
 [DEBUG] 2017-12-21 09:25:38,268 Line:1270 tblBuyInStockDet.TrackNo
 [DEBUG] 2017-12-21 09:25:38,268 Line:1270 tblBuyInStockDet.PresentSampleType
 [DEBUG] 2017-12-21 09:25:38,268 Line:1270 tblBuyInStockDet
 [DEBUG] 2017-12-21 09:25:38,268 Line:1270 f_ref='b83a05a1_1712210925378220031'
 [DEBUG] 2017-12-21 09:25:38,508 Line:1292 存储过程内部信息： select ROW_NUMBER() over(order by tblBuyInStockDet.id),'b83a05a1_1712210925378220031','2017-12-21','BI1712210002','tblBuyInStock',12,2017,12,'00003','1','00101','',tblBuyInStockDet.id,tblBuyInStockDet.TrackNo,tblBuyInStockDet.Remark,tblBuyInStockDet.GoodsCode,tblBuyInStockDet.StockCode,LTRIM(RTRIM(BatchNo)),LTRIM(RTRIM(Inch)),LTRIM(RTRIM(Hue)),LTRIM(RTRIM(yearNO)),LTRIM(RTRIM(ProDate)),LTRIM(RTRIM(Availably)),Seq,0,tblBuyInStockDet.Qty,(tblBuyInStockDet.TaxAmount+tblBuyInStockDet.freightAmount)/tblBuyInStockDet.Qty,tblBuyInStockDet.TaxAmount+tblBuyInStockDet.freightAmount,0,0,0,0,0,0,tblBuyInStockDet.Qty,tblBuyInStockDet.TaxPrice,tblBuyInStockDet.TaxAmount,tblBuyInStockDet.DisPrice,tblBuyInStockDet.DisAmount,0,0,tblBuyInStockDet.PresentSampleType,'',0,'1','1','2017-12-21 09:25:37','2017-12-21 09:25:37','00001' from tblBuyInStockDet where f_ref='b83a05a1_1712210925378220031' order by tblBuyInStockDet.id
 [DEBUG] 2017-12-21 09:25:38,508 Line:1292 存储过程内部信息： 1
 [DEBUG] 2017-12-21 09:25:38,508 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:25:38,509 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:25:38,509 Line:425 ************上述语句执行时间：246
 [DEBUG] 2017-12-21 09:25:38,509 Line:313 exeCondition:tblBuyInStock_Add_One :3==2
 [DEBUG] 2017-12-21 09:25:38,513 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,513 Line:313 exeCondition:tblBuyInStock_Add_One :true
 [DEBUG] 2017-12-21 09:25:38,514 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,515 Line:921 自定义执行的语句显示： validateSameSeq :select 'isUsed' as isUseSeq from tblGoodsAttribute where propName='Seq' and isUsed=1
 [DEBUG] 2017-12-21 09:25:38,515 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:38,517 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:25:38,518 Line:313 exeCondition:validateSameSeq :'null'!='null'
 [DEBUG] 2017-12-21 09:25:38,519 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,519 Line:313 exeCondition:validateSameSeq :''!=''
 [DEBUG] 2017-12-21 09:25:38,521 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,522 Line:313 exeCondition:tblBuyInStock_Add_One :'add' == 'update'
 [DEBUG] 2017-12-21 09:25:38,523 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,524 Line:921 自定义执行的语句显示： tblBuyInStock_Add_One :select (cast(? as numeric(18,8))-cast(? as numeric(18,8))) as RNeedPayAmt,(cast(? as numeric(18,8))-cast(? as numeric(18,8))) as CRNeedPayAmt,cast(? as numeric(18,8))*cast(? as numeric(18,8)) as freightAmountCur
 [DEBUG] 2017-12-21 09:25:38,524 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:38,524 Line:988 1值：100
 [DEBUG] 2017-12-21 09:25:38,525 Line:988 2值：0
 [DEBUG] 2017-12-21 09:25:38,525 Line:988 3值：100
 [DEBUG] 2017-12-21 09:25:38,525 Line:988 4值：0
 [DEBUG] 2017-12-21 09:25:38,525 Line:988 5值：0
 [DEBUG] 2017-12-21 09:25:38,526 Line:988 6值：1
 [DEBUG] 2017-12-21 09:25:38,527 Line:1023 query condition columnName:RNeedPayAmt----value:100.00000000
 [DEBUG] 2017-12-21 09:25:38,527 Line:1023 query condition columnName:CRNeedPayAmt----value:100.00000000
 [DEBUG] 2017-12-21 09:25:38,527 Line:1023 query condition columnName:freightAmountCur----value:0E-16
 [DEBUG] 2017-12-21 09:25:38,528 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:25:38,528 Line:313 exeCondition:tblBuyInStock_Add_One :'true'=='true'
 [DEBUG] 2017-12-21 09:25:38,529 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,596 Line:1361 自定义执行的语句显示： tblBuyInStock_Add_One:凭证模块--tblBuyInStock
 [DEBUG] 2017-12-21 09:25:38,601 Line:6876  DynDBManager. genCertificate 取表相关数据sql=select PeriodYear  as PeriodYear,Period  as Period, PeriodMonth as PeriodMonth,a.workFlowNodeName,CertificateNo,a.billNo,a.BillDate,a.createBy,a.createTime,a.lastUpdateBy,a.lastUpdateTime,a.SCompanyID,b.id EmployeeID,b.empFullName,a.DepartmentCode as DepartmentCode ,c.deptFullName as deptFullName, d.ComFullName as ComFullName from tblBuyInStock a left join tblEmployee b on  a.EmployeeId=b.id left join tblDepartment c on a.departmentCode=c.classCode left join tblCompany d on a.CompanyCode=d.classCode  where a.id=?
 [DEBUG] 2017-12-21 09:25:38,617 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'22210101' AccCode,case when (tblBuyInStock.InVoiceType=2 and tblBuyInStock.TotalCoTaxAmt>0) then tblBuyInStock.TotalCoTaxAmt else 0 end DebitAmount,case when (tblBuyInStock.InVoiceType=2 and tblBuyInStock.TotalCoTaxAmt>0) then tblBuyInStock.TotalCoTaxAmt/tblBuyInStock.CurrencyRate else 0 end DebitCurrencyAmount,0 LendAmount,0 LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:25:38,627 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'2202' AccCode,0 DebitAmount,0 DebitCurrencyAmount,case when tblBuyInStock.TotalTaxAmount+tblBuyInStock.freightAmount-tblBuyInStock.PayAmount>0 then tblBuyInStock.TotalTaxAmount+tblBuyInStock.freightAmount-tblBuyInStock.PayAmount else 0 end LendAmount,case when tblBuyInStock.TotalTaxAmount-tblBuyInStock.PayAmount>0 then tblBuyInStock.CurTotalAmount-tblBuyInStock.CurAlrPayAmt else 0 end LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:25:38,635 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'660303' AccCode,case when tblBuyInStock.ProceDureExp>0 then tblBuyInStock.ProceDureExp else 0 end DebitAmount,case when tblBuyInStock.ProceDureExp>0 then tblBuyInStock.CurProceDureExp else 0 end DebitCurrencyAmount,0 LendAmount,0 LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:25:38,647 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,tblBuyPayAccount.Account AccCode,0 DebitAmount,0 DebitCurrencyAmount,tblBuyPayAccount.Amount LendAmount,tblBuyPayAccount.ExeBalFcAmt LendCurrencyAmount from   tblBuyInStock join tblBuyPayAccount  on tblBuyInStock.id=tblBuyPayAccount.f_ref  join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:25:38,656 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'630106' AccCode,0 DebitAmount,0 DebitCurrencyAmount,case when tblBuyInStock.DiscountAmount!=0 then tblBuyInStock.DiscountAmount else 0 end LendAmount,case when tblBuyInStock.DiscountAmount!=0 then tblBuyInStock.CurDiscountAmount else 0 end LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:25:38,662 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStockDet.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,tblGoodsAccProp.AccCode AccCode,(case when tblBuyInStock.InVoiceType=2 then tblBuyInStockDet.DisBackAmt else tblBuyInStockDet.TaxAmount end)+tblBuyInStockDet.freightAmount DebitAmount,case when tblBuyInStock.InVoiceType=2 then tblBuyInStockDet.DisBackAmt/tblBuyInStock.CurrencyRate else tblBuyInStockDet.TaxAmount/tblBuyInStock.CurrencyRate end DebitCurrencyAmount,0 LendAmount,0 LendCurrencyAmount from   tblBuyInStock join tblBuyInStockDet  on tblBuyInStock.id=tblBuyInStockDet.f_ref  join tblGoods on tblBuyInStockDet.GoodsCode=tblGoods.classCode  join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:25:38,677 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'2202' AccCode,case when tblBuyInStock.TotalTaxAmount+tblBuyInStock.freightAmount-tblBuyInStock.PayAmount<0 then abs(tblBuyInStock.TotalTaxAmount+tblBuyInStock.freightAmount-tblBuyInStock.PayAmount) else 0 end DebitAmount,case when tblBuyInStock.TotalTaxAmount-tblBuyInStock.PayAmount<0 then abs(tblBuyInStock.CurTotalAmount-tblBuyInStock.CurAlrPayAmt) else 0 end DebitCurrencyAmount,0 LendAmount,0 LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:25:38,692 Line:7182  DynDBManager. genCertificate 采购入库:tblBuyInStock取凭证明细 返回总行数=6合并后：2
 [DEBUG] 2017-12-21 09:25:38,838 Line:434 ************上述语句执行时间：308
 [DEBUG] 2017-12-21 09:25:38,838 Line:313 exeCondition:tblBuyInStock_Add_One :100>0
 [DEBUG] 2017-12-21 09:25:38,840 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,840 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_One:{call proc_insertComIni(?,?,?,?,?,?,?)}
 [DEBUG] 2017-12-21 09:25:38,840 Line:1270 1b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,841 Line:1270 00003
 [DEBUG] 2017-12-21 09:25:38,841 Line:1270 1
 [DEBUG] 2017-12-21 09:25:38,841 Line:1270 2017-12-21
 [DEBUG] 2017-12-21 09:25:38,841 Line:1270 Period=12@SPFieldLink:PeriodYear=2017@SPFieldLink:PeriodMonth=12@SPFieldLink:PayTotalDebit=0@SPFieldLink:PayTotalLend=100@SPFieldLink:RelationDocID=b83a05a1_1712210925378220031@SPFieldLink:Currency=@SPFieldLink:CurrencyRate=1@SPFieldLink:FcPayTotalDebit=0@SPFieldLink:FcPayTotalCredit=100@SPFieldLink:createBy=1@SPFieldLink:createTime=2017-12-21 09:25:37@SPFieldLink:lastUpdateBy=1@SPFieldLink:lastUpdateTime=2017-12-21 09:25:37@SPFieldLink:SCompanyID=00001@SPFieldLink:BillType=tblBuyInStock@SPFieldLink:BillNo=BI1712210002@SPFieldLink:EmployeeID=1@SPFieldLink:DepartmentCode=00101@SPFieldLink:DiscountAmount=0@SPFieldLink:Remark=
 [DEBUG] 2017-12-21 09:25:38,912 Line:1292 存储过程内部信息： insert into tblCompanyIni (id,ItemNo,CompanyCode,BillDate,Period,PeriodYear,PeriodMonth,PayTotalDebit,PayTotalLend,RelationDocID,Currency,CurrencyRate,FcPayTotalDebit,FcPayTotalCredit,createBy,createTime,lastUpdateBy,lastUpdateTime,SCompanyID,BillType,BillNo,EmployeeID,DepartmentCode,DiscountAmount,Remark) values('1b83a05a1_1712210925378220031',2,'00003','2017-12-21','12','2017','12','0','100','b83a05a1_1712210925378220031','','1','0','100','1','2017-12-21 09:25:37','1','2017-12-21 09:25:37','00001','tblBuyInStock','BI1712210002','1','00101','0','')
 [DEBUG] 2017-12-21 09:25:38,913 Line:425 ************上述语句执行时间：73
 [DEBUG] 2017-12-21 09:25:38,913 Line:313 exeCondition:tblBuyInStock_Add_One :100.00000000<0 && 100>0 && 'true'=='false'
 [DEBUG] 2017-12-21 09:25:38,914 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,914 Line:313 exeCondition:tblBuyInStock_Add_One :100.00000000<0 && 'true'=='false'
 [DEBUG] 2017-12-21 09:25:38,915 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,916 Line:313 exeCondition:tblBuyInStock_Add_One :100.00000000<0 && 'true'=='true'
 [DEBUG] 2017-12-21 09:25:38,917 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,917 Line:313 exeCondition:tblBuyInStock_Add_One :0>0&&100.00000000>=0
 [DEBUG] 2017-12-21 09:25:38,918 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,918 Line:313 exeCondition:tblBuyInStock_Add_One :''.indexOf('2202')>=0
 [DEBUG] 2017-12-21 09:25:38,919 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,920 Line:313 exeCondition:tblBuyInStock_Add_One :''.indexOf('1123')>=0
 [DEBUG] 2017-12-21 09:25:38,921 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,922 Line:921 自定义执行的语句显示： tblBuyInStock_Add_One :select (cast(? as numeric(18,8))-cast(? as numeric(18,8))) as RNeedPayAmt,(case when (cast(? as numeric(18,8))-cast(? as numeric(18,8)))>=0.0 then 'Pay' else 'PrePay' end) as rePayType,(cast(? as numeric(18,8))+cast(? as numeric(18,8))) as factAmt 
 [DEBUG] 2017-12-21 09:25:38,923 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:25:38,923 Line:988 1值：100
 [DEBUG] 2017-12-21 09:25:38,923 Line:988 2值：0
 [DEBUG] 2017-12-21 09:25:38,924 Line:988 3值：100
 [DEBUG] 2017-12-21 09:25:38,924 Line:988 4值：0
 [DEBUG] 2017-12-21 09:25:38,924 Line:988 5值：0
 [DEBUG] 2017-12-21 09:25:38,924 Line:988 6值：0
 [DEBUG] 2017-12-21 09:25:38,925 Line:1023 query condition columnName:RNeedPayAmt----value:100.00000000
 [DEBUG] 2017-12-21 09:25:38,925 Line:1025 query condition columnName:rePayType----value:Pay
 [DEBUG] 2017-12-21 09:25:38,926 Line:1023 query condition columnName:factAmt----value:0E-8
 [DEBUG] 2017-12-21 09:25:38,926 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:25:38,926 Line:313 exeCondition:tblBuyInStock_Add_One :0>0
 [DEBUG] 2017-12-21 09:25:38,927 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,927 Line:313 exeCondition:tblBuyInStock_Add_One :0>0
 [DEBUG] 2017-12-21 09:25:38,928 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,929 Line:313 exeCondition:tblBuyInStock_Add_One :'false'=='true'
 [DEBUG] 2017-12-21 09:25:38,929 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,930 Line:313 exeCondition:tblBuyInStock_Add_One :'false'=='true'
 [DEBUG] 2017-12-21 09:25:38,930 Line:321 flag:false
 [DEBUG] 2017-12-21 09:25:38,931 Line:313 exeCondition:tblBuyInStock_Add_One :true
 [DEBUG] 2017-12-21 09:25:38,932 Line:321 flag:true
 [DEBUG] 2017-12-21 09:25:38,932 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_One:{call proc_BuyInUpdateSales(?,?,?,?)}
 [DEBUG] 2017-12-21 09:25:38,932 Line:1270 b83a05a1_1712210925378220031
 [DEBUG] 2017-12-21 09:25:38,932 Line:1270 add
 [DEBUG] 2017-12-21 09:25:38,950 Line:425 ************上述语句执行时间：18
 [DEBUG] 2017-12-21 09:25:40,441 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblBuyInStock&operation=5&keyId=b83a05a1_1712210925378220031&parentCode=null&f_brother=&checkTab=Y&parentTableName=&moduleType=&winCurIndex=4&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:25:40,442 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblBuyInStock,];operation=[5,];keyId=[b83a05a1_1712210925378220031,];parentCode=[null,];f_brother=[,];checkTab=[Y,];parentTableName=[,];moduleType=[,];winCurIndex=[4,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:25:40,443 Line:5010 OAMyWorkFLowMgt.getOAMyWorkFlowInfo 取流程详情 sql=select a.createBy,applyType,a.checkPerson,nextNodeIds,currentNode,b.oaTimeLimitUnit,b.benchmarkTime,a.applyContent,a.departmentCode,a.tableName,a.keyId,a.id,a.lastNodeId,a.lastCheckPerson,a.applyContent,display as currentNodeName from OAMyWorkFlow a  left join OAMyWorkFlowDet b on a.id=b.f_ref left join OAWorkFlowNode c on c.flowId=a.applyType and c.keyId=a.currentNode  where a.keyId='b83a05a1_1712210925378220031' and  a.tableName='tblBuyInStock'
 [DEBUG] 2017-12-21 09:25:40,526 Line:1525  select * from  tblBuyInStockDet where f_ref = 'b83a05a1_1712210925378220031' order by detOrderNo
 [DEBUG] 2017-12-21 09:25:40,532 Line:1525  select * from  tblBuyPayAccount where f_ref = 'b83a05a1_1712210925378220031' order by detOrderNo
 [DEBUG] 2017-12-21 09:25:45,297 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:25:45,298 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[tblVirtualStock,];reportName=[虚拟库存查询,虚拟库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[2,];src=[,];parentCode=[,];queryChannel=[normal,];SQLSave=[@SQL:{call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}@ParamList:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:0@Param:tblGoods@Param:@Param:@end:,];query=[,];NoButton=[,];backParent=[,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];upperQtyQ=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];NumberType=[0,];DataType=[tblGoods,];mobileGoodsFullName=[,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:25:45,320 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:25:45,321 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:25:45,321 Line:568 ReportDataMgt.getReportData 参数2:100
 [DEBUG] 2017-12-21 09:25:45,321 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:25:45,322 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:25:45,322 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:25:45,322 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:25:45,322 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:25:45,322 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:25:45,323 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:25:45,323 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:25:45,323 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:25:45,323 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:25:45,323 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:25:45,323 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:25:45,324 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:25:45,324 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:25:45,324 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:25:45,324 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:25:45,362 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:25:45,362 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:25:45,363 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:25:45,363 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:25:45,363 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:25:45,363 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:25:45,363 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:25:45,363 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:25:45,364 Line:689 通过SQL读原始数据：43
 [DEBUG] 2017-12-21 09:25:45,364 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:25:48,652 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:25:48,653 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[tblVirtualStock,];reportName=[虚拟库存查询,虚拟库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[2,];src=[,];parentCode=[00005,];queryChannel=[normal,];SQLSave=[@SQL:{call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}@ParamList:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:0@Param:tblGoods@Param:@Param:@end:,];query=[,];NoButton=[,];backParent=[true,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];upperQtyQ=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];NumberType=[0,];DataType=[tblGoods,];mobileGoodsFullName=[,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:25:48,665 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:25:48,665 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:25:48,665 Line:568 ReportDataMgt.getReportData 参数2:100
 [DEBUG] 2017-12-21 09:25:48,665 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:25:48,665 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:25:48,666 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:25:48,666 Line:582 ReportDataMgt.getReportData 参数6:00005
 [DEBUG] 2017-12-21 09:25:48,666 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:25:48,666 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:25:48,666 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:25:48,666 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:25:48,666 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:25:48,667 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:25:48,667 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:25:48,667 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:25:48,667 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:25:48,667 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:25:48,667 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:25:48,667 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:25:48,690 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:25:48,690 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:25:48,691 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:25:48,691 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:25:48,691 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:25:48,691 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:25:48,691 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:25:48,691 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '00005_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:25:48,692 Line:689 通过SQL读原始数据：27
 [DEBUG] 2017-12-21 09:25:48,692 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:26:03,983 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?tableName=tblBuyInStock&parentCode=&operation=6&moduleType=&f_brother=&parentTableName=&winCurIndex=4&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:26:03,983 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblBuyInStock,];parentCode=[,];operation=[6,];moduleType=[,];f_brother=[,];parentTableName=[,];winCurIndex=[4,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:26:05,272 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=CompanyCode&operation=22&BillDate=2017-12-21&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup
 [DEBUG] 2017-12-21 09:26:05,273 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[CompanyCode,];operation=[22,];BillDate=[2017-12-21,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];
 [DEBUG] 2017-12-21 09:26:05,300 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblCompany&moduleType=&SysType=Supplier&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:05,301 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblCompany,];moduleType=[,];SysType=[Supplier,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:05,301 Line:229 TreeMgt.getTree sql= select classCode,ComFullName,ComNumber,id from tblCompany where statusId =0   and isCatalog=1  and moduleType in ('1','3') order by ComNumber
 [DEBUG] 2017-12-21 09:26:05,301 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=CompanyCode&operation=22&BillDate=2017-12-21&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:05,302 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[CompanyCode,];operation=[22,];BillDate=[2017-12-21,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:05,305 Line:3434 DynDBManager.popSelect selectName=ProviderInVoiceWithPayDate; sql=select * from (select tblCompany.classCode f1 ,(case when isnull(tblCompany.Discount,0)=0 then 100 else isnull(tblCompany.Discount,0) end) f2 ,case when len(tblCompany.DepartmentCode)>0 then tblCompany.DepartmentCode else '00101' end f3 ,case when len(tblCompany.DepartmentCode)>0 then tblDepartment.DeptFullName else '默认部门' end f4 ,case when len(tblCompany.EmployeeID)>0 then tblCompany.EmployeeID else '1' end f5 ,case when len(tblCompany.EmployeeID)>0 then tblEmployee.EmpFullName else 'admin' end f6 ,CONVERT(varchar(10),dateadd(Day,case tblCompany.SettleCys when 0 then null else tblCompany.SettleCys end,'2017-12-21'),121) f7 ,case tblCompany.InVoiceType when 1 then '0' when 2 then '0' else '0' end f8 ,tblCompany.ComFullName f9 ,tblCompany.ComNumber f10 ,tblCompany.ComFullNamePYM f11 
,tblCompany.isCatalog as childCount,ROW_NUMBER() over( order by tblCompany.ComNumber,tblCompany.ComFullName) as row_id from tblCompany
  left join tblEmployee on tblCompany.EmployeeID=tblEmployee.id
  left join tblDepartment on tblCompany.DepartmentCode=tblDepartment.classCode
      where 1=1  and (tblCompany.ClientFlag=1 or tblCompany.ClientFlag=3)   and (tblCompany.statusId!='-1')) a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:07,220 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:07,220 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:07,303 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:07,304 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:07,304 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:07,304 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:07,305 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:07,310 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:14,637 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:14,637 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:14,720 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:14,721 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:14,721 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:14,721 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:14,722 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:14,725 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:18,524 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:18,525 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:18,557 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:18,557 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:18,558 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:18,558 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:18,559 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:18,566 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:21,676 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:21,677 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:21,725 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:21,726 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:21,727 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:21,727 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:21,729 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:21,741 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:27,780 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:27,780 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:27,819 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:27,820 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:27,820 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:27,821 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:27,821 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:27,847 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:34,022 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:34,022 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:34,055 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:34,055 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:34,055 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:34,056 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:34,057 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:34,064 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:37,604 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:37,604 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:37,633 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:37,633 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:37,634 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:37,634 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:37,636 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:37,643 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:42,061 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:42,061 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:42,104 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:42,105 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:42,105 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:42,105 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:42,107 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:42,115 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:47,301 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:47,302 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:47,335 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:47,335 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:47,336 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:47,336 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:47,337 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:47,346 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:51,269 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:51,269 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:51,299 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:51,300 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:51,300 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:51,300 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:51,302 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:51,308 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:55,191 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:55,191 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:55,229 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:55,229 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:55,230 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:55,230 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:55,231 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:55,240 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:26:59,197 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:26:59,197 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:26:59,242 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:26:59,243 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:26:59,243 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:26:59,243 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:26:59,244 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:26:59,253 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:27:06,932 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:27:06,933 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:27:06,964 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:27:06,965 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:27:06,966 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:27:06,966 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:27:06,967 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:27:06,974 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:27:16,524 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:27:16,524 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:27:16,557 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:27:16,558 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:27:16,558 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:27:16,559 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:27:16,559 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:27:16,566 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:27:20,355 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:27:20,355 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:27:20,393 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:27:20,394 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:27:20,395 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:27:20,395 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:27:20,397 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:27:20,404 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:27:39,715 Line:56 ConfigRefresh.getLastInfo -- and refresh ip
 [DEBUG] 2017-12-21 09:27:47,491 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?tableName=tblBuyInStock&parentCode=&operation=6&moduleType=&f_brother=&parentTableName=&winCurIndex=4&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:27:47,493 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblBuyInStock,];parentCode=[,];operation=[6,];moduleType=[,];f_brother=[,];parentTableName=[,];winCurIndex=[4,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:27:49,549 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=CompanyCode&operation=22&BillDate=2017-12-21&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup
 [DEBUG] 2017-12-21 09:27:49,549 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[CompanyCode,];operation=[22,];BillDate=[2017-12-21,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];
 [DEBUG] 2017-12-21 09:27:49,577 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblCompany&moduleType=&SysType=Supplier&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:27:49,578 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblCompany,];moduleType=[,];SysType=[Supplier,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:27:49,578 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=CompanyCode&operation=22&BillDate=2017-12-21&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:27:49,578 Line:229 TreeMgt.getTree sql= select classCode,ComFullName,ComNumber,id from tblCompany where statusId =0   and isCatalog=1  and moduleType in ('1','3') order by ComNumber
 [DEBUG] 2017-12-21 09:27:49,578 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[CompanyCode,];operation=[22,];BillDate=[2017-12-21,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:27:49,581 Line:3434 DynDBManager.popSelect selectName=ProviderInVoiceWithPayDate; sql=select * from (select tblCompany.classCode f1 ,(case when isnull(tblCompany.Discount,0)=0 then 100 else isnull(tblCompany.Discount,0) end) f2 ,case when len(tblCompany.DepartmentCode)>0 then tblCompany.DepartmentCode else '00101' end f3 ,case when len(tblCompany.DepartmentCode)>0 then tblDepartment.DeptFullName else '默认部门' end f4 ,case when len(tblCompany.EmployeeID)>0 then tblCompany.EmployeeID else '1' end f5 ,case when len(tblCompany.EmployeeID)>0 then tblEmployee.EmpFullName else 'admin' end f6 ,CONVERT(varchar(10),dateadd(Day,case tblCompany.SettleCys when 0 then null else tblCompany.SettleCys end,'2017-12-21'),121) f7 ,case tblCompany.InVoiceType when 1 then '0' when 2 then '0' else '0' end f8 ,tblCompany.ComFullName f9 ,tblCompany.ComNumber f10 ,tblCompany.ComFullNamePYM f11 
,tblCompany.isCatalog as childCount,ROW_NUMBER() over( order by tblCompany.ComNumber,tblCompany.ComFullName) as row_id from tblCompany
  left join tblEmployee on tblCompany.EmployeeID=tblEmployee.id
  left join tblDepartment on tblCompany.DepartmentCode=tblDepartment.classCode
      where 1=1  and (tblCompany.ClientFlag=1 or tblCompany.ClientFlag=3)   and (tblCompany.statusId!='-1')) a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:27:51,372 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=StockCode&operation=22&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup
 [DEBUG] 2017-12-21 09:27:51,372 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[StockCode,];operation=[22,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];
 [DEBUG] 2017-12-21 09:27:51,400 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblStock&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:27:51,400 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblStock,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:27:51,400 Line:229 TreeMgt.getTree sql= select classCode,StockFullName,StockNumber,id from tblStock where statusId =0   and isCatalog=1 order by StockNumber
 [DEBUG] 2017-12-21 09:27:51,401 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStock&fieldName=StockCode&operation=22&isMain=true&url=@URL:&src=menu&MOID=41&MOOP=add&popupWin=MainPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:27:51,402 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStock,];fieldName=[StockCode,];operation=[22,];isMain=[true,];url=[@URL:,];src=[menu,];MOID=[41,];MOOP=[add,];popupWin=[MainPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:27:51,404 Line:3434 DynDBManager.popSelect selectName=Stock; sql=select * from (select tblStock.classCode f1 ,tblStock.StockNumber f2 ,tblStock.StockFullName f3 ,tblStock.StockFullNamePYM f4 
,tblStock.isCatalog as childCount,ROW_NUMBER() over( order by tblStock.StockNumber,tblStock.StockFullName) as row_id from tblStock where 1=1 and tblStock.statusid!='-1' and tblStock.workFlowNodeName='finish' and tblStock.classCode like '_____') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:27:54,454 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup
 [DEBUG] 2017-12-21 09:27:54,454 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];
 [DEBUG] 2017-12-21 09:27:54,489 Line:135 BaseAction.execute 请求地址：/TreeAction.do?tableName=tblGoods&moduleType=&SysType=&MOID=41&editable=&subSql=
 [DEBUG] 2017-12-21 09:27:54,490 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblGoods,];moduleType=[,];SysType=[,];MOID=[41,];editable=[,];subSql=[,];
 [DEBUG] 2017-12-21 09:27:54,490 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do?keyId=&tableName=tblBuyInStockDet&fieldName=GoodsCode&operation=22&CompanyCode=00003&tblBuyInStockDet_BuyOrderID=&tblBuyInStockDet_BuyAskPriceID=&isMain=false&src=menu&MOID=41&MOOP=add&url=@URL:&popupWin=ChildPopup&checkTab=Y
 [DEBUG] 2017-12-21 09:27:54,490 Line:229 TreeMgt.getTree sql= select classCode,GoodsFullName,GoodsNumber,id from tblGoods where statusId =0   and isCatalog=1 order by GoodsNumber
 [DEBUG] 2017-12-21 09:27:54,491 Line:146 BaseAction.execute 操作人:admin;请求数据：keyId=[,];tableName=[tblBuyInStockDet,];fieldName=[GoodsCode,];operation=[22,];CompanyCode=[00003,];tblBuyInStockDet_BuyOrderID=[,];tblBuyInStockDet_BuyAskPriceID=[,];isMain=[false,];src=[menu,];MOID=[41,];MOOP=[add,];url=[@URL:,];popupWin=[ChildPopup,];checkTab=[Y,];
 [DEBUG] 2017-12-21 09:27:54,497 Line:3434 DynDBManager.popSelect selectName=GoodsBuy; sql=select * from (select (case when 'PriceNo'='Price' and isnull(tblCustomerPriceDet.BuyPrice,0)!=0 then tblCustomerPriceDet.BuyPrice else tblGoods.PreBuyPrice end) f1 ,tblGoods.classCode f2 ,tblGoodsUnit.UnitD f3 ,tblGoodsUnit.SecUnitD f4 ,tblGoods.GoodsNumber f5 ,tblGoods.GoodsFullName f6 ,tblGoods.GoodsSpec f7 ,tblGoods.BaseUnit f8 ,tblGoods.GoodsFullNamePYM f9 
,tblGoods.isCatalog as childCount,ROW_NUMBER() over( order by tblGoods.GoodsNumber,tblGoods.GoodsFullName) as row_id from tblGoods left join tblGoodsUnit with(index(IX_tblGoodsUnit_refdefault)) on tblGoodsUnit.f_ref=tblGoods.id and tblGoodsUnit.DefaultAssit=1
  left join tblCustomerPriceDet on tblGoods.classcode = tblCustomerPriceDet.GoodsCode and tblCustomerPriceDet.f_ref=(select id from tblCustomerPrice where companyCode='00003') where 1=1 and 1=1  and tblGoods.workFlowNodeName='finish' and tblGoods.statusid!='-1') a where  row_id between 1 and 100 order by row_id 
 [DEBUG] 2017-12-21 09:28:52,232 Line:135 BaseAction.execute 请求地址：/UserFunctionAction.do
 [DEBUG] 2017-12-21 09:28:52,234 Line:146 BaseAction.execute 操作人:admin;请求数据：conver=[,];operation=[1,];org.apache.struts.taglib.html.TOKEN=[,];tableName=[tblBuyInStock,];parentCode=[,];button=[,];noback=[false,];fresh=[,];detLineNo=[,];logicValidate=[,];defineInfo=[,];moduleType=[,];parentTableName=[,];winCurIndex=[4,];popWinName=[PopMainOpdiv,];defineName=[,];checkFieldName=[,];isTab=[,];deliverTo=[,];hasFrame=[,];ButtonType=[,];ButtonTypeName=[,];OAWorkFlow=[false,];ChangeAmt=[0,];checkPersons=[,];workFlowNode=[,];workFlowNodeName=[,];CurNeedPayAmt=[0,];InvoiceStatus=[0,];NeedPayAmt=[0,];BillNo=[BI1712210004,];BillDate=[2017-12-21,];CompanyCode=[00003,];tblCompany_ComFullName=[麦田食品,];DepartmentCode=[00101,];EmployeeID=[1,];tblEmployee_EmpFullName=[admin,];tblDepartment_DeptFullName=[默认部门,];StockCode=[00002,];tblStock_StockFullName=[总仓2,];InVoiceType=[3,];PayAmount=[0,];ProceDureExp=[0,];AccAmt=[0,];FactOutcome=[0,];freightAcc=[,];freightAmount=[0,];AlreadyPayAmt=[0,];DiscountAmount=[0,];Currency=[,];CurAlrPayAmt=[0,];CurDiscountAmount=[0,];CurProceDureExp=[0,];ProjectCode=[,];Period=[,];PeriodMonth=[,];PeriodYear=[,];InvoiceAmount=[0,];NoInvoiceAmount=[0,];CurBackAmount=[0,];BuyAskPriceID=[,];BuyOrderID=[,];BuyOrderNo=[,];CurAlreadyPayAmt=[0,];BackAmount=[0,];CheckPersont=[,];TrackNo=[,];Discount=[100,];DisAmount=[0,];Tax=[0,];PayDate=[,];CurrencyRate=[1,];TotalAmount=[1300,];TotalTaxAmount=[1300,];TotalCoTaxAmt=[0,];CurTotalAmount=[1300,];CertificateNo=[,];AfterChangeAmt=[,];CurAfterChangeAmt=[,];CurChangeAmt=[,];printCount=[0,];SCompanyID=[,];statusId=[0,];finishTime=[,];lastUpdateBy=[,];lastUpdateTime=[,];createBy=[,];createTime=[,];tblBuyInStockDetPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblBuyPayAccountPopupType=[$globals.getTableInfoBean(${rowlist.tableName}).popupType,];tblBuyInStockDet_tblGoods_GoodsNumber=[xl0001,xl0002,xl0003,xl0004,xl0005,xl0006,xl0007,xl0008,xl0009,xl0010,xl0011,xl0012,xl0013,];tblBuyInStockDet_tblGoods_GoodsFullName=[萝卜馅,白菜馅,芹菜馅,香菇馅,牛肉馅,驴肉馅,猪肉馅,韭菜馅,土豆馅,冬瓜馅,南瓜馅,芥菜馅,三鲜馅,];tblBuyInStockDet_tblGoods_GoodsSpec=[,,,,,,,,,,,,,];tblBuyInStockDet_tblGoods_BaseUnit=[,,,,,,,,,,,,,];tblBuyInStockDet_Qty=[100,100,100,100,100,100,100,100,100,100,100,100,100,];tblBuyInStockDet_Price=[1,1,1,1,1,1,1,1,1,1,1,1,1,];tblBuyInStockDet_Amount=[100,100,100,100,100,100,100,100,100,100,100,100,100,];tblBuyInStockDet_Remark=[,,,,,,,,,,,,,];tblBuyInStockDet_StockCode=[,,,,,,,,,,,,,];tblBuyInStockDet_BuyOrderID=[,,,,,,,,,,,,,];tblBuyInStockDet_BuyAskPriceID=[,,,,,,,,,,,,,];tblBuyInStockDet_SalesOutID=[,,,,,,,,,,,,,];tblBuyInStockDet_GoodsCode=[0000500001,0000500002,0000500003,0000500004,0000500005,0000500006,0000500007,0000500008,0000500009,000050000A,000050000B,000050000C,000050000D,];tblBuyInStockDet_BatchNo=[,,,,,,,,,,,,,];tblBuyInStockDet_Inch=[,,,,,,,,,,,,,];tblBuyInStockDet_Hue=[,,,,,,,,,,,,,];tblBuyInStockDet_yearNO=[,,,,,,,,,,,,,];tblBuyInStockDet_ProDate=[,,,,,,,,,,,,,];tblBuyInStockDet_Availably=[,,,,,,,,,,,,,];tblBuyInStockDet_Seq=[,,,,,,,,,,,,,];tblBuyInStockDet_Discount=[100,100,100,100,100,100,100,100,100,100,100,100,100,];tblBuyInStockDet_DisPrice=[1,1,1,1,1,1,1,1,1,1,1,1,1,];tblBuyInStockDet_DisBackAmt=[100,100,100,100,100,100,100,100,100,100,100,100,100,];tblBuyInStockDet_DisAmount=[0,0,0,0,0,0,0,0,0,0,0,0,0,];tblBuyInStockDet_TaxPrice=[1,1,1,1,1,1,1,1,1,1,1,1,1,];tblBuyInStockDet_TaxAmount=[100,100,100,100,100,100,100,100,100,100,100,100,100,];tblBuyInStockDet_CoTaxAmt=[0,0,0,0,0,0,0,0,0,0,0,0,0,];tblBuyInStockDet_CurPrice=[1,1,1,1,1,1,1,1,1,1,1,1,1,];tblBuyInStockDet_CurAmount=[100,100,100,100,100,100,100,100,100,100,100,100,100,];tblBuyInStockDet_ApportionAmt=[,,,,,,,,,,,,,];tblBuyInStockDet_SourceID=[,,,,,,,,,,,,,];tblBuyInStockDet_InvoiceAmount=[0,0,0,0,0,0,0,0,0,0,0,0,0,];tblBuyInStockDet_PresentSampleType=[,,,,,,,,,,,,,];tblBuyInStockDet_NotPayQty=[,,,,,,,,,,,,,];tblBuyInStockDet_PayQty=[,,,,,,,,,,,,,];tblBuyInStockDet_SecQty=[0,0,0,0,0,0,0,0,0,0,0,0,0,];tblBuyInStockDet_BaseQty=[0,0,0,0,0,0,0,0,0,0,0,0,0,];tblBuyInStockDet_CheckBarCode=[,,,,,,,,,,,,,];tblBuyInStockDet_BackPayQty=[,,,,,,,,,,,,,];tblBuyInStockDet_PreferAmount=[,,,,,,,,,,,,,];tblBuyInStockDet_detsId=[,,,,,,,,,,,,,];tblBuyPayAccount_Paytype=[1,];tblBuyPayAccount_tblAccTypeInfo_AccName=[,];tblBuyPayAccount_Amount=[0,];tblBuyPayAccount_Remark=[,];tblBuyPayAccount_Account=[,];tblBuyPayAccount_ExeBalFcAmt=[,];tblBuyPayAccount_detsId=[,];Remark=[,];
 [DEBUG] 2017-12-21 09:28:52,236 Line:3843 添加单据desingId=null工作流designId=eae3edac_0906121936579370110
 [DEBUG] 2017-12-21 09:28:52,249 Line:5847  INSERT INTO  tblBuyInStock(ChangeAmt,checkPersons,id,workFlowNode,workFlowNodeName,CurNeedPayAmt,InvoiceStatus,NeedPayAmt,BillNo,BillDate,CompanyCode,DepartmentCode,EmployeeID,StockCode,InVoiceType,PayAmount,ProceDureExp,AccAmt,FactOutcome,freightAcc,freightAmount,AlreadyPayAmt,DiscountAmount,Currency,CurAlrPayAmt,CurDiscountAmount,CurProceDureExp,ProjectCode,Period,PeriodMonth,PeriodYear,Remark,InvoiceAmount,NoInvoiceAmount,CurBackAmount,BuyAskPriceID,BuyOrderID,BuyOrderNo,CurAlreadyPayAmt,BackAmount,CheckPersont,TrackNo,Discount,DisAmount,Tax,PayDate,CurrencyRate,TotalAmount,TotalTaxAmount,TotalCoTaxAmt,CurTotalAmount,Attachment,CertificateNo,AfterChangeAmt,CurAfterChangeAmt,CurChangeAmt,printCount,SCompanyID,statusId,finishTime,lastUpdateBy,lastUpdateTime,createBy,createTime) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,249 Line:5853 1:0.0
 [DEBUG] 2017-12-21 09:28:52,249 Line:5853 2:
 [DEBUG] 2017-12-21 09:28:52,249 Line:5853 3:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,250 Line:5853 4:-1
 [DEBUG] 2017-12-21 09:28:52,250 Line:5853 5:finish
 [DEBUG] 2017-12-21 09:28:52,250 Line:5853 6:0.0
 [DEBUG] 2017-12-21 09:28:52,250 Line:5853 7:0
 [DEBUG] 2017-12-21 09:28:52,250 Line:5853 8:0.0
 [DEBUG] 2017-12-21 09:28:52,250 Line:5853 9:BI1712210004
 [DEBUG] 2017-12-21 09:28:52,250 Line:5853 10:2017-12-21
 [DEBUG] 2017-12-21 09:28:52,251 Line:5853 11:00003
 [DEBUG] 2017-12-21 09:28:52,251 Line:5853 12:00101
 [DEBUG] 2017-12-21 09:28:52,251 Line:5853 13:1
 [DEBUG] 2017-12-21 09:28:52,251 Line:5853 14:00002
 [DEBUG] 2017-12-21 09:28:52,251 Line:5853 15:3
 [DEBUG] 2017-12-21 09:28:52,251 Line:5853 16:0.0
 [DEBUG] 2017-12-21 09:28:52,251 Line:5853 17:0.0
 [DEBUG] 2017-12-21 09:28:52,252 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,252 Line:5853 19:0.0
 [DEBUG] 2017-12-21 09:28:52,252 Line:5853 20:
 [DEBUG] 2017-12-21 09:28:52,252 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,252 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,252 Line:5853 23:0.0
 [DEBUG] 2017-12-21 09:28:52,253 Line:5853 24:
 [DEBUG] 2017-12-21 09:28:52,253 Line:5853 25:0.0
 [DEBUG] 2017-12-21 09:28:52,253 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,253 Line:5853 27:0.0
 [DEBUG] 2017-12-21 09:28:52,253 Line:5853 28:
 [DEBUG] 2017-12-21 09:28:52,253 Line:5853 29:12
 [DEBUG] 2017-12-21 09:28:52,253 Line:5853 30:12
 [DEBUG] 2017-12-21 09:28:52,254 Line:5853 31:2017
 [DEBUG] 2017-12-21 09:28:52,254 Line:5853 32:
 [DEBUG] 2017-12-21 09:28:52,254 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,254 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,254 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,254 Line:5853 36:
 [DEBUG] 2017-12-21 09:28:52,254 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,255 Line:5853 38:
 [DEBUG] 2017-12-21 09:28:52,255 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,255 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,255 Line:5853 41:
 [DEBUG] 2017-12-21 09:28:52,255 Line:5853 42:
 [DEBUG] 2017-12-21 09:28:52,255 Line:5853 43:100.0
 [DEBUG] 2017-12-21 09:28:52,255 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,256 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,256 Line:5853 46:
 [DEBUG] 2017-12-21 09:28:52,256 Line:5853 47:1.0
 [DEBUG] 2017-12-21 09:28:52,256 Line:5853 48:1300.0
 [DEBUG] 2017-12-21 09:28:52,256 Line:5853 49:1300.0
 [DEBUG] 2017-12-21 09:28:52,256 Line:5853 50:0.0
 [DEBUG] 2017-12-21 09:28:52,257 Line:5853 51:1300.0
 [DEBUG] 2017-12-21 09:28:52,257 Line:5853 52:
 [DEBUG] 2017-12-21 09:28:52,257 Line:5853 53:
 [DEBUG] 2017-12-21 09:28:52,257 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,257 Line:5853 55:0.0
 [DEBUG] 2017-12-21 09:28:52,257 Line:5853 56:0.0
 [DEBUG] 2017-12-21 09:28:52,258 Line:5853 57:0
 [DEBUG] 2017-12-21 09:28:52,258 Line:5853 58:00001
 [DEBUG] 2017-12-21 09:28:52,258 Line:5853 59:0
 [DEBUG] 2017-12-21 09:28:52,258 Line:5853 60:2017-12-21 09:28:52
 [DEBUG] 2017-12-21 09:28:52,258 Line:5853 61:1
 [DEBUG] 2017-12-21 09:28:52,258 Line:5853 62:2017-12-21 09:28:52
 [DEBUG] 2017-12-21 09:28:52,258 Line:5853 63:1
 [DEBUG] 2017-12-21 09:28:52,259 Line:5853 64:2017-12-21 09:28:52
 [DEBUG] 2017-12-21 09:28:52,263 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,263 Line:5853 1:b83a05a1_1712210928522630037
 [DEBUG] 2017-12-21 09:28:52,263 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,264 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,264 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,264 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,264 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,264 Line:5853 7:0000500001
 [DEBUG] 2017-12-21 09:28:52,264 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,264 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,265 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,265 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,265 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,265 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,265 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,265 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,265 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,266 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,266 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,266 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,266 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,266 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,266 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,267 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,267 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,267 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,267 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,267 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,268 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,268 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,268 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,268 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,268 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,268 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,269 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,269 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,269 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,269 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,269 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,269 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,269 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,269 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,270 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,270 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,270 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,270 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,270 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,270 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,270 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,271 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,271 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,271 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,271 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,271 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,271 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,271 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,272 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,272 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,272 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,272 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,272 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,272 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,272 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,278 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,278 Line:5853 1:b83a05a1_1712210928522780038
 [DEBUG] 2017-12-21 09:28:52,278 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,279 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,279 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,279 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,279 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,279 Line:5853 7:0000500002
 [DEBUG] 2017-12-21 09:28:52,279 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,279 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,280 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,280 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,280 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,280 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,280 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,280 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,280 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,280 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,281 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,281 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,281 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,281 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,281 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,281 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,281 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,282 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,282 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,282 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,282 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,282 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,282 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,282 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,283 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,283 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,283 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,283 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,283 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,283 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,283 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,284 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,284 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,284 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,284 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,284 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,284 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,284 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,285 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,285 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,285 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,285 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,285 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,285 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,285 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,286 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,286 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,286 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,286 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,286 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,286 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,286 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,287 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,287 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,287 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,288 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,288 Line:5853 1:b83a05a1_1712210928522880039
 [DEBUG] 2017-12-21 09:28:52,288 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,288 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,288 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,289 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,289 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,289 Line:5853 7:0000500003
 [DEBUG] 2017-12-21 09:28:52,289 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,289 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,289 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,289 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,290 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,290 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,290 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,290 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,290 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,290 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,291 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,291 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,291 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,291 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,291 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,291 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,292 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,292 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,292 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,292 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,292 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,292 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,293 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,293 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,293 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,293 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,293 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,293 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,294 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,294 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,294 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,294 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,295 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,295 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,295 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,295 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,295 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,296 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,296 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,296 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,296 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,296 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,296 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,296 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,296 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,297 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,297 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,297 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,297 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,297 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,297 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,297 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,298 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,298 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,298 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,299 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,299 Line:5853 1:b83a05a1_1712210928522990040
 [DEBUG] 2017-12-21 09:28:52,299 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,300 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,300 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,300 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,300 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,300 Line:5853 7:0000500004
 [DEBUG] 2017-12-21 09:28:52,300 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,300 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,301 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,301 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,301 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,301 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,301 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,301 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,301 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,302 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,302 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,302 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,302 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,302 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,302 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,302 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,303 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,303 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,303 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,303 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,303 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,303 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,303 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,304 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,304 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,304 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,304 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,304 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,304 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,304 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,305 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,305 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,305 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,305 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,305 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,305 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,305 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,306 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,306 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,306 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,306 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,306 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,307 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,307 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,308 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,309 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,309 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,309 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,309 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,309 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,309 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,309 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,309 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,310 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,310 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,311 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,311 Line:5853 1:b83a05a1_1712210928523110041
 [DEBUG] 2017-12-21 09:28:52,311 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,311 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,311 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,311 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,312 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,312 Line:5853 7:0000500005
 [DEBUG] 2017-12-21 09:28:52,312 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,312 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,312 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,312 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,312 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,313 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,313 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,313 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,313 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,313 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,313 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,313 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,314 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,314 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,314 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,314 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,314 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,314 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,314 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,315 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,315 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,315 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,315 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,315 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,315 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,315 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,316 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,316 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,316 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,316 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,316 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,316 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,316 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,317 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,317 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,317 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,317 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,317 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,317 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,317 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,318 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,318 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,318 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,318 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,318 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,318 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,318 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,319 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,319 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,319 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,319 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,319 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,319 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,319 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,320 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,320 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,321 Line:5853 1:b83a05a1_1712210928523200042
 [DEBUG] 2017-12-21 09:28:52,321 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,321 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,321 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,321 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,321 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,321 Line:5853 7:0000500006
 [DEBUG] 2017-12-21 09:28:52,322 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,322 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,322 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,322 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,322 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,322 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,322 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,323 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,323 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,323 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,323 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,323 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,324 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,324 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,324 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,324 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,324 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,324 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,324 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,325 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,325 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,325 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,325 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,325 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,325 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,325 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,326 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,326 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,326 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,326 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,326 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,326 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,326 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,327 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,327 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,327 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,327 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,327 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,327 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,327 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,328 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,328 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,328 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,328 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,328 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,328 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,328 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,328 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,329 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,329 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,329 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,329 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,329 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,329 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,329 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,335 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,336 Line:5853 1:b83a05a1_1712210928523350043
 [DEBUG] 2017-12-21 09:28:52,336 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,336 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,336 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,336 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,336 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,337 Line:5853 7:0000500007
 [DEBUG] 2017-12-21 09:28:52,337 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,337 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,337 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,337 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,337 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,337 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,338 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,338 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,338 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,338 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,338 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,338 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,338 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,339 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,339 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,339 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,339 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,339 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,340 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,340 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,340 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,340 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,340 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,340 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,341 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,341 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,341 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,341 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,341 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,341 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,342 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,342 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,342 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,342 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,342 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,342 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,342 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,343 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,343 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,343 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,343 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,343 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,343 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,343 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,344 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,344 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,344 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,344 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,344 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,344 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,344 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,345 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,345 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,345 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,345 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,346 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,346 Line:5853 1:b83a05a1_1712210928523460044
 [DEBUG] 2017-12-21 09:28:52,346 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,347 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,347 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,347 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,347 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,347 Line:5853 7:0000500008
 [DEBUG] 2017-12-21 09:28:52,347 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,347 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,348 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,348 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,348 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,348 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,348 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,348 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,348 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,349 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,349 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,349 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,349 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,349 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,349 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,349 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,350 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,350 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,350 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,350 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,350 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,350 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,350 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,351 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,351 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,351 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,351 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,351 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,351 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,351 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,352 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,352 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,352 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,352 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,352 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,352 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,352 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,352 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,353 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,353 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,353 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,353 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,353 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,353 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,353 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,354 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,354 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,354 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,354 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,354 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,354 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,354 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,355 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,355 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,355 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,356 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,356 Line:5853 1:b83a05a1_1712210928523560045
 [DEBUG] 2017-12-21 09:28:52,356 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,356 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,356 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,357 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,357 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,357 Line:5853 7:0000500009
 [DEBUG] 2017-12-21 09:28:52,357 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,357 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,358 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,358 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,358 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,358 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,359 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,359 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,359 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,359 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,360 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,360 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,360 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,360 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,360 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,361 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,361 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,361 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,361 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,361 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,361 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,361 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,362 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,362 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,362 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,362 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,362 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,362 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,362 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,363 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,363 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,363 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,363 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,363 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,363 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,363 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,363 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,364 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,364 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,364 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,364 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,364 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,364 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,364 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,365 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,365 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,365 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,365 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,365 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,365 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,365 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,366 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,366 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,366 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,366 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,367 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,367 Line:5853 1:b83a05a1_1712210928523670046
 [DEBUG] 2017-12-21 09:28:52,367 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,367 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,367 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,368 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,368 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,368 Line:5853 7:000050000A
 [DEBUG] 2017-12-21 09:28:52,368 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,368 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,368 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,368 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,369 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,369 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,369 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,369 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,369 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,369 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,369 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,370 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,370 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,370 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,370 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,370 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,370 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,370 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,371 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,371 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,371 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,371 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,371 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,371 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,371 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,371 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,372 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,372 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,372 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,372 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,372 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,372 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,372 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,373 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,373 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,373 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,373 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,374 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,375 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,375 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,375 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,375 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,376 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,376 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,376 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,376 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,376 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,376 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,376 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,377 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,377 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,377 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,377 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,377 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,377 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,378 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,378 Line:5853 1:b83a05a1_1712210928523780047
 [DEBUG] 2017-12-21 09:28:52,379 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,379 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,379 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,379 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,379 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,379 Line:5853 7:000050000B
 [DEBUG] 2017-12-21 09:28:52,379 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,380 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,380 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,380 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,380 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,380 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,380 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,380 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,381 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,381 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,381 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,381 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,381 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,381 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,381 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,382 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,382 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,382 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,382 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,382 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,382 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,382 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,383 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,383 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,383 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,383 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,383 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,383 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,383 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,383 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,384 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,384 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,384 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,384 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,384 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,384 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,384 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,385 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,385 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,385 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,385 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,385 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,385 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,385 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,386 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,386 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,386 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,386 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,386 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,386 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,386 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,386 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,387 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,387 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,387 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,388 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,388 Line:5853 1:b83a05a1_1712210928523880048
 [DEBUG] 2017-12-21 09:28:52,388 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,388 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,388 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,389 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,389 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,389 Line:5853 7:000050000C
 [DEBUG] 2017-12-21 09:28:52,389 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,389 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,389 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,389 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,390 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,390 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,390 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,390 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,390 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,390 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,390 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,391 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,391 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,391 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,391 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,391 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,391 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,392 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,392 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,392 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,392 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,392 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,392 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,392 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,393 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,393 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,393 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,393 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,393 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,393 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,393 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,393 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,394 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,394 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,394 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,394 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,394 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,394 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,394 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,395 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,395 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,395 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,395 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,395 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,395 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,395 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,396 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,396 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,396 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,396 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,396 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,396 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,396 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,397 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,397 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,398 Line:5847  INSERT INTO  tblBuyInStockDet(id,f_ref,StockCode,BuyOrderID,BuyAskPriceID,SalesOutID,GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,Seq,Qty,Price,Amount,freightAmount,UnitIntQty,UnitBaseQty,UnitQty,UnitPrice,Discount,DisPrice,DisBackAmt,DisAmount,TaxPrice,TaxAmount,CoTaxAmt,CurPrice,CurAmount,PreferBackAmount,BackAmt,ApportionAmt,PrePayAmt,PayAmt,SourceID,TotalPayAmt,CurPayAmt,CurPrePayAmt,CurTotalPayAmt,BackQty,FactInQty,NoInvoiceAmount,NotInvoiceQty,InQty,InStatus,InvoiceAmount,InvoiceQty,InvoiceStatus,PresentSampleType,NeedPayAmt,NotPayQty,PayQty,SecQty,BaseQty,CheckBarCode,BackPayQty,PreferAmount,Remark,CurNeedPayAmt,SCompanyID) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
 [DEBUG] 2017-12-21 09:28:52,398 Line:5853 1:b83a05a1_1712210928523970049
 [DEBUG] 2017-12-21 09:28:52,398 Line:5853 2:b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,398 Line:5853 3:
 [DEBUG] 2017-12-21 09:28:52,398 Line:5853 4:
 [DEBUG] 2017-12-21 09:28:52,398 Line:5853 5:
 [DEBUG] 2017-12-21 09:28:52,399 Line:5853 6:
 [DEBUG] 2017-12-21 09:28:52,399 Line:5853 7:000050000D
 [DEBUG] 2017-12-21 09:28:52,399 Line:5853 8:
 [DEBUG] 2017-12-21 09:28:52,399 Line:5853 9:
 [DEBUG] 2017-12-21 09:28:52,399 Line:5853 10:
 [DEBUG] 2017-12-21 09:28:52,399 Line:5853 11:
 [DEBUG] 2017-12-21 09:28:52,399 Line:5853 12:
 [DEBUG] 2017-12-21 09:28:52,399 Line:5853 13:
 [DEBUG] 2017-12-21 09:28:52,400 Line:5853 14:
 [DEBUG] 2017-12-21 09:28:52,400 Line:5853 15:100.0
 [DEBUG] 2017-12-21 09:28:52,400 Line:5853 16:1.0
 [DEBUG] 2017-12-21 09:28:52,400 Line:5853 17:100.0
 [DEBUG] 2017-12-21 09:28:52,400 Line:5853 18:0.0
 [DEBUG] 2017-12-21 09:28:52,400 Line:5853 19:0
 [DEBUG] 2017-12-21 09:28:52,400 Line:5853 20:0.0
 [DEBUG] 2017-12-21 09:28:52,401 Line:5853 21:0.0
 [DEBUG] 2017-12-21 09:28:52,401 Line:5853 22:0.0
 [DEBUG] 2017-12-21 09:28:52,401 Line:5853 23:100.0
 [DEBUG] 2017-12-21 09:28:52,401 Line:5853 24:1.0
 [DEBUG] 2017-12-21 09:28:52,401 Line:5853 25:100.0
 [DEBUG] 2017-12-21 09:28:52,401 Line:5853 26:0.0
 [DEBUG] 2017-12-21 09:28:52,401 Line:5853 27:1.0
 [DEBUG] 2017-12-21 09:28:52,402 Line:5853 28:100.0
 [DEBUG] 2017-12-21 09:28:52,402 Line:5853 29:0.0
 [DEBUG] 2017-12-21 09:28:52,402 Line:5853 30:1.0
 [DEBUG] 2017-12-21 09:28:52,402 Line:5853 31:100.0
 [DEBUG] 2017-12-21 09:28:52,402 Line:5853 32:0.0
 [DEBUG] 2017-12-21 09:28:52,402 Line:5853 33:0.0
 [DEBUG] 2017-12-21 09:28:52,403 Line:5853 34:0.0
 [DEBUG] 2017-12-21 09:28:52,403 Line:5853 35:0.0
 [DEBUG] 2017-12-21 09:28:52,403 Line:5853 36:0.0
 [DEBUG] 2017-12-21 09:28:52,403 Line:5853 37:
 [DEBUG] 2017-12-21 09:28:52,403 Line:5853 38:0.0
 [DEBUG] 2017-12-21 09:28:52,403 Line:5853 39:0.0
 [DEBUG] 2017-12-21 09:28:52,403 Line:5853 40:0.0
 [DEBUG] 2017-12-21 09:28:52,404 Line:5853 41:0.0
 [DEBUG] 2017-12-21 09:28:52,404 Line:5853 42:0.0
 [DEBUG] 2017-12-21 09:28:52,404 Line:5853 43:0.0
 [DEBUG] 2017-12-21 09:28:52,404 Line:5853 44:0.0
 [DEBUG] 2017-12-21 09:28:52,404 Line:5853 45:0.0
 [DEBUG] 2017-12-21 09:28:52,404 Line:5853 46:0.0
 [DEBUG] 2017-12-21 09:28:52,404 Line:5853 47:0
 [DEBUG] 2017-12-21 09:28:52,405 Line:5853 48:0.0
 [DEBUG] 2017-12-21 09:28:52,405 Line:5853 49:0.0
 [DEBUG] 2017-12-21 09:28:52,405 Line:5853 50:0
 [DEBUG] 2017-12-21 09:28:52,405 Line:5853 51:
 [DEBUG] 2017-12-21 09:28:52,405 Line:5853 52:0.0
 [DEBUG] 2017-12-21 09:28:52,405 Line:5853 53:0.0
 [DEBUG] 2017-12-21 09:28:52,405 Line:5853 54:0.0
 [DEBUG] 2017-12-21 09:28:52,406 Line:5853 55:0
 [DEBUG] 2017-12-21 09:28:52,406 Line:5853 56:0
 [DEBUG] 2017-12-21 09:28:52,406 Line:5853 57:
 [DEBUG] 2017-12-21 09:28:52,406 Line:5853 58:0.0
 [DEBUG] 2017-12-21 09:28:52,406 Line:5853 59:0.0
 [DEBUG] 2017-12-21 09:28:52,406 Line:5853 60:
 [DEBUG] 2017-12-21 09:28:52,407 Line:5853 61:0.0
 [DEBUG] 2017-12-21 09:28:52,407 Line:5853 62:00001
 [DEBUG] 2017-12-21 09:28:52,415 Line:313 exeCondition:tblBuyInStock_Add :1300 < 0
 [DEBUG] 2017-12-21 09:28:52,419 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,419 Line:313 exeCondition:tblBuyInStock_Add :('3'=='3'&&0!=0)||0<0
 [DEBUG] 2017-12-21 09:28:52,419 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,420 Line:313 exeCondition:tblBuyInStock_Add :0 < 0
 [DEBUG] 2017-12-21 09:28:52,420 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,421 Line:313 exeCondition:tblBuyInStock_Add :0>0&&''.length==0
 [DEBUG] 2017-12-21 09:28:52,422 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,422 Line:313 exeCondition:tblBuyInStock_Add :''.length>0
 [DEBUG] 2017-12-21 09:28:52,423 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,425 Line:313 exeCondition:tblBuyInStock_Add :''.length>0
 [DEBUG] 2017-12-21 09:28:52,427 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,427 Line:313 exeCondition:tblBuyInStock_Add :true
 [DEBUG] 2017-12-21 09:28:52,428 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,429 Line:921 自定义执行的语句显示： tblBuyInStock_Add_QuoteOrder_Validate :select a.BillNo,billDate as BuyInDate from tblBuyOrder a,tblBuyInStockDet b where b.f_ref=? and b.BuyOrderID=a.id and a.BillDate>?
 [DEBUG] 2017-12-21 09:28:52,429 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,429 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,430 Line:988 2值：2017-12-21
 [DEBUG] 2017-12-21 09:28:52,439 Line:1043 ---上述语句时间---10
 [DEBUG] 2017-12-21 09:28:52,439 Line:313 exeCondition:tblBuyInStock_Add_QuoteOrder_Validate :'null'!='null'
 [DEBUG] 2017-12-21 09:28:52,440 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,441 Line:921 自定义执行的语句显示： tblBuyInStock_Add_QuoteOrder_Validate :select a.BillNo,c.ComFullName from tblBuyOrder a,tblBuyInStockDet b,tblCompany c where b.f_ref=? and b.BuyOrderID=a.id and a.CompanyCode=c.classCode and a.CompanyCode!=?
 [DEBUG] 2017-12-21 09:28:52,441 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,441 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,442 Line:988 2值：00003
 [DEBUG] 2017-12-21 09:28:52,448 Line:1043 ---上述语句时间---7
 [DEBUG] 2017-12-21 09:28:52,448 Line:313 exeCondition:tblBuyInStock_Add_QuoteOrder_Validate :'null'!='null'
 [DEBUG] 2017-12-21 09:28:52,449 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,449 Line:921 自定义执行的语句显示： tblBuyInStock_Add_QuoteOrder_Validate :select a.BillNo,c.ComFullName from tblBuyAskPrice a,tblBuyInStockDet b,tblCompany c where b.f_ref=? and b.BuyAskPriceID=a.id and a.CompanyCode=c.classCode and a.CompanyCode!=?
 [DEBUG] 2017-12-21 09:28:52,449 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,450 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,450 Line:988 2值：00003
 [DEBUG] 2017-12-21 09:28:52,457 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:28:52,458 Line:313 exeCondition:tblBuyInStock_Add_QuoteOrder_Validate :'null'!='null'
 [DEBUG] 2017-12-21 09:28:52,459 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,459 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select count(0) NoQuote from tblBuyInStockDet a left join tblBuyOrderDet b on isnull(a.BuyOrderID,'')=b.f_ref and a.GoodsCode=b.GoodsCode and (a.BatchNo=b.BatchNo or b.BatchNo='') and (a.Inch=b.Inch or b.Inch='') and (a.Hue=b.Hue or b.Hue='') and (a.yearNo=b.yearNo or b.yearNo='') and (a.ProDate=b.ProDate or b.ProDate='') and (a.Availably=b.Availably or b.Availably='') where ? ='true' and a.f_ref=? and b.id is null
 [DEBUG] 2017-12-21 09:28:52,459 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,460 Line:988 1值：false
 [DEBUG] 2017-12-21 09:28:52,460 Line:988 2值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,469 Line:1025 query condition columnName:NoQuote----value:0
 [DEBUG] 2017-12-21 09:28:52,469 Line:1043 ---上述语句时间---10
 [DEBUG] 2017-12-21 09:28:52,469 Line:313 exeCondition:tblBuyInStock_Add :0>0
 [DEBUG] 2017-12-21 09:28:52,470 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,470 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select tblBuyOrder.BillNo as BuyOrderID from tblBuyInStock left join tblBuyInStockDet on tblBuyInStock.id=tblBuyInStockDet.f_ref left join tblBuyOrderDet on tblBuyOrderDet.id=tblBuyInStockDet.SourceID inner join tblBuyOrder on tblBuyOrder.id=tblBuyOrderDet.f_ref where tblBuyInStockDet.f_ref=? and tblBuyInStock.InVoiceType!=tblBuyOrder.InVoiceType
 [DEBUG] 2017-12-21 09:28:52,471 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,471 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,478 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:28:52,479 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,480 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,480 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select tblGoods.GoodsFullName as GoodsQ from tblBuyInStockDet,tblGoods where len(ProDate)>0 and len(Availably)>0 and ProDate>Availably and tblGoods.classCode=tblBuyInStockDet.GoodsCode and f_ref=?
 [DEBUG] 2017-12-21 09:28:52,480 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,481 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,485 Line:1043 ---上述语句时间---5
 [DEBUG] 2017-12-21 09:28:52,485 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,486 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,486 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select tblGoods.GoodsFullName as GoodsQ from tblBuyInStockDet,tblGoods where isnull(tblBuyInStockDet.Qty,0)<=0 and tblGoods.classCode=tblBuyInStockDet.GoodsCode and f_ref=?
 [DEBUG] 2017-12-21 09:28:52,487 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,487 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,491 Line:1043 ---上述语句时间---5
 [DEBUG] 2017-12-21 09:28:52,492 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,493 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,493 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select b.GoodsFullName as GoodsP,b.garniture from tblBuyInStockDet a,tblGoods b where (isnull(a.Price,0)<0 or (b.garniture='2' and isnull(a.Price,0)=0)) and b.classCode=a.GoodsCode and a.f_ref=? and a.PresentSampleType not in ('1','2')
 [DEBUG] 2017-12-21 09:28:52,493 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,493 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,497 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:28:52,498 Line:313 exeCondition:tblBuyInStock_Add :'null'=='2' && 'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,499 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,499 Line:313 exeCondition:tblBuyInStock_Add :'null'=='1' && 'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,500 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,500 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select tblGoods.GoodsFullName as GoodsSample from tblBuyInStockDet,tblGoods where isnull(tblBuyInStockDet.Price,0)!=0 and tblGoods.classCode=tblBuyInStockDet.GoodsCode and f_ref=? and tblBuyInStockDet.PresentSampleType in ('1','2')
 [DEBUG] 2017-12-21 09:28:52,500 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,500 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,504 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:28:52,504 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,505 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,505 Line:313 exeCondition:tblBuyInStock_Add :false==true
 [DEBUG] 2017-12-21 09:28:52,506 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,507 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select 'disCountError' as disCountError from tblBuyInStockDet a where a.f_ref=? and (Discount<=0 or Discount>100)
 [DEBUG] 2017-12-21 09:28:52,507 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,508 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,510 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:28:52,510 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,511 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,511 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select dbo.getDigits('tblBuyInStockDet','TaxAmount',sum(tblBuyInStockDet.TaxAmount)) as SumDetAmt,dbo.getDigits('tblBuyInStockDet','TaxAmount',(cast(? as numeric(18,8))+cast(? as numeric(18,8)))) as sumMainAmt from tblBuyInStockDet where  tblBuyInStockDet.f_ref=?
 [DEBUG] 2017-12-21 09:28:52,511 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,511 Line:988 1值：1300
 [DEBUG] 2017-12-21 09:28:52,512 Line:988 2值：0
 [DEBUG] 2017-12-21 09:28:52,512 Line:988 3值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,543 Line:1025 query condition columnName:SumDetAmt----value:1300.0
 [DEBUG] 2017-12-21 09:28:52,543 Line:1025 query condition columnName:sumMainAmt----value:1300.0
 [DEBUG] 2017-12-21 09:28:52,544 Line:1043 ---上述语句时间---32
 [DEBUG] 2017-12-21 09:28:52,544 Line:313 exeCondition:tblBuyInStock_Add :1300.0!=1300.0
 [DEBUG] 2017-12-21 09:28:52,544 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,545 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select GoodsFullName as GoodsSeq from tblBuyInStockDet a left join tblgoods c on c.classCode=a.GoodsCode where c.seqIsUsed=0 and len(isnull(a.seq,''))=0 and (select isUsed from tblGoodsAttribute where propName='Seq')=1 and a.f_ref=?
 [DEBUG] 2017-12-21 09:28:52,545 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,545 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,555 Line:1043 ---上述语句时间---10
 [DEBUG] 2017-12-21 09:28:52,556 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,557 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,558 Line:921 自定义执行的语句显示： tblBuyInStock_Add_ManyAccount_Validate :select 'exisAccErr' as exisAccErr from tblBuyPayAccount where tblBuyPayAccount.f_ref=? and (len(isnull(tblBuyPayAccount.Account,''))>0 and isnull(tblBuyPayAccount.Amount,0)=0)
 [DEBUG] 2017-12-21 09:28:52,558 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,558 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,560 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:28:52,560 Line:313 exeCondition:tblBuyInStock_Add_ManyAccount_Validate :'null'!='null'
 [DEBUG] 2017-12-21 09:28:52,561 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,561 Line:921 自定义执行的语句显示： tblBuyInStock_Add_ManyAccount_Validate :select 'sameAcc' as sameAcc from tblBuyPayAccount where f_ref=? group by Account having count(Account)>1
 [DEBUG] 2017-12-21 09:28:52,562 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,562 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,565 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:28:52,565 Line:313 exeCondition:tblBuyInStock_Add_ManyAccount_Validate :'null'=='sameAcc'
 [DEBUG] 2017-12-21 09:28:52,566 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,566 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select AccNumber,AccName,IsForCur,Currency as CURD from tblAccTypeInfo where AccNumber=? and SCompanyID=?
 [DEBUG] 2017-12-21 09:28:52,566 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,567 Line:988 1值：
 [DEBUG] 2017-12-21 09:28:52,567 Line:988 2值：00001
 [DEBUG] 2017-12-21 09:28:52,574 Line:1043 ---上述语句时间---8
 [DEBUG] 2017-12-21 09:28:52,574 Line:921 自定义执行的语句显示： tblBuyInStock_Add :select Account as AnyAccount from tblBuyPayAccount left join tblAccTypeinfo on tblAccTypeinfo.Accnumber=tblBuyPayAccount.Account where f_ref=? and ((len(?) > 0 and tblAccTypeInfo.Currency!=?) or (len(?)=0 and len(tblAccTypeInfo.Currency)!=0))
 [DEBUG] 2017-12-21 09:28:52,575 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:52,575 Line:988 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,575 Line:988 2值：
 [DEBUG] 2017-12-21 09:28:52,576 Line:988 3值：
 [DEBUG] 2017-12-21 09:28:52,576 Line:988 4值：
 [DEBUG] 2017-12-21 09:28:52,580 Line:1043 ---上述语句时间---6
 [DEBUG] 2017-12-21 09:28:52,580 Line:313 exeCondition:tblBuyInStock_Add :''.length>0 && 1 <= 0
 [DEBUG] 2017-12-21 09:28:52,581 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,581 Line:313 exeCondition:tblBuyInStock_Add :'null' != 'null'
 [DEBUG] 2017-12-21 09:28:52,582 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,582 Line:313 exeCondition:tblBuyInStock_Add : (''.length == 0 && 1>0 &&1!=1)
 [DEBUG] 2017-12-21 09:28:52,583 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,584 Line:313 exeCondition:tblBuyInStock_Add :'false'=='true'
 [DEBUG] 2017-12-21 09:28:52,585 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,585 Line:313 exeCondition:tblBuyInStock_Add :true
 [DEBUG] 2017-12-21 09:28:52,586 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,587 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStock set AfterChangeAmt=TotalTaxAmount,CurAfterChangeAmt=CurTotalAmount,NoInvoiceAmount=TotalTaxAmount,InvoiceAmount=0,InvoiceStatus=0,NeedPayAmt=TotalTaxAmount-PayAmount+(case when freightAcc like '2202%' then freightAmount else 0 end),CurNeedPayAmt=round(CurTotalAmount-CurAlrPayAmt+(case when freightAcc like '2202%' then freightAmount/CurrencyRate else 0 end),?),AlreadyPayAmt=PayAmount,CurAlreadyPayAmt=CurAlrPayAmt,BackAmount=0,CurBackAmount=0,CertificateNo='' where id=?
 [DEBUG] 2017-12-21 09:28:52,587 Line:1154 1整数 值：2
 [DEBUG] 2017-12-21 09:28:52,588 Line:1157 2值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,592 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=1
 [DEBUG] 2017-12-21 09:28:52,592 Line:229 ************上述语句执行时间：5
 [DEBUG] 2017-12-21 09:28:52,593 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set PreferBackAmount=case when tblBuyInStock.TotalTaxAmount+tblBuyInStock.DiscountAmount=0 then 0 else round(tblBuyInStock.TotalTaxAmount*tblBuyInStockDet.TaxAmount/(tblBuyInStock.TotalTaxAmount+tblBuyInStock.DiscountAmount),?) end  FROM tblBuyInStock where tblBuyInStockDet.f_ref=? and tblBuyInstock.id=?
 [DEBUG] 2017-12-21 09:28:52,593 Line:1154 1整数 值：2
 [DEBUG] 2017-12-21 09:28:52,593 Line:1157 2值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,594 Line:1157 3值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,599 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=13
 [DEBUG] 2017-12-21 09:28:52,600 Line:229 ************上述语句执行时间：7
 [DEBUG] 2017-12-21 09:28:52,600 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set tblBuyInStockDet.PreferAmount=tblBuyInStockDet.TaxAmount-tblBuyInStockDet.PreferBackAmount FROM tblBuyInStock where tblBuyInStockDet.f_ref=? and tblBuyInstock.id=?
 [DEBUG] 2017-12-21 09:28:52,600 Line:1157 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,600 Line:1157 2值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,605 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=13
 [DEBUG] 2017-12-21 09:28:52,605 Line:229 ************上述语句执行时间：5
 [DEBUG] 2017-12-21 09:28:52,605 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set NoInvoiceAmount=PreferBackAmount,InvoiceAmount=0,InvoiceStatus=0,FactInQty=Qty,BackQty=0,InvoiceQty=0,NotInvoiceQty=Qty where f_ref=?
 [DEBUG] 2017-12-21 09:28:52,605 Line:1157 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,609 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=13
 [DEBUG] 2017-12-21 09:28:52,609 Line:229 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:28:52,609 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set freightAmount=case when (tblBuyInstock.TotalTaxAmount+tblBuyInstock.DiscountAmount)=0 then 0 else TaxAmount/(tblBuyInstock.TotalTaxAmount+tblBuyInstock.DiscountAmount)*tblBuyInstock.freightAmount end from tblBuyInstock where tblBuyInstock.id=? and f_ref=tblBuyInstock.id
 [DEBUG] 2017-12-21 09:28:52,610 Line:1157 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,612 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=13
 [DEBUG] 2017-12-21 09:28:52,613 Line:229 ************上述语句执行时间：4
 [DEBUG] 2017-12-21 09:28:52,613 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'false'=='false'
 [DEBUG] 2017-12-21 09:28:52,613 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,614 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set StockCode=(select StockCode from tblBuyInStock where id=?) where f_ref=?
 [DEBUG] 2017-12-21 09:28:52,614 Line:1157 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,614 Line:1157 2值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,617 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=13
 [DEBUG] 2017-12-21 09:28:52,617 Line:408 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:28:52,618 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :''.length>0
 [DEBUG] 2017-12-21 09:28:52,618 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,618 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :true
 [DEBUG] 2017-12-21 09:28:52,619 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,619 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:{call proc_BuyUpdateOrderQty(?,?,?,?)}
 [DEBUG] 2017-12-21 09:28:52,619 Line:1270 b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,620 Line:1270 add
 [DEBUG] 2017-12-21 09:28:52,684 Line:425 ************上述语句执行时间：65
 [DEBUG] 2017-12-21 09:28:52,684 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'true'=='true'
 [DEBUG] 2017-12-21 09:28:52,685 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,685 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set Availably=a.Availably from(select  b.id as id,case when tblGoods.AvailablyType='Day' then convert(varchar(10),dateadd(Day,tblGoods.Validity,ProDate),21) when tblGoods.AvailablyType='Month' then convert(varchar(10),dateadd(Month,tblGoods.Validity,ProDate),21) when tblGoods.AvailablyType='Year' then convert(varchar(10),dateadd(Year,tblGoods.Validity,ProDate),21) else '' end as Availably from tblBuyInStock  a join tblBuyInStockDet b on b.f_ref=a.id join tblGoods on tblGoods.classCode=b.GoodsCode where a.id=? and len(Availably)=0 and len(ProDate)!=0 and tblGoods.Validity!=0)a where tblBuyInStockDet.id=a.id
 [DEBUG] 2017-12-21 09:28:52,685 Line:1157 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,693 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=0
 [DEBUG] 2017-12-21 09:28:52,693 Line:408 ************上述语句执行时间：8
 [DEBUG] 2017-12-21 09:28:52,694 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_AccBefore:update tblBuyInStockDet set ProDate=a.ProDate from(select  b.id as id,case when tblGoods.AvailablyType='Day' then convert(varchar(10),dateadd(Day,(-1)*tblGoods.Validity,Availably),21) when tblGoods.AvailablyType='Month' then convert(varchar(10),dateadd(Month,(-1)*tblGoods.Validity,Availably),21) when tblGoods.AvailablyType='Year' then convert(varchar(10),dateadd(Year,(-1)*tblGoods.Validity,Availably),21) else '' end as ProDate from tblBuyInStock  a join tblBuyInStockDet b on b.f_ref=a.id join tblGoods on tblGoods.classCode=b.GoodsCode where a.id=? and len(ProDate)=0 and len(Availably)!=0 and tblGoods.Validity!=0)a where tblBuyInStockDet.id=a.id
 [DEBUG] 2017-12-21 09:28:52,694 Line:1157 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,702 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_AccBefore,  影响行数=0
 [DEBUG] 2017-12-21 09:28:52,702 Line:408 ************上述语句执行时间：8
 [DEBUG] 2017-12-21 09:28:52,702 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'0' != '0'
 [DEBUG] 2017-12-21 09:28:52,703 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,703 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'0' != '0'
 [DEBUG] 2017-12-21 09:28:52,704 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,704 Line:313 exeCondition:tblBuyInStock_Add_AccBefore :'0' == '0' && false==false
 [DEBUG] 2017-12-21 09:28:52,705 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,717 Line:313 exeCondition:tblBuyInStock_Add_One :'PriceNo'!='PriceNo'||'false'=='true'
 [DEBUG] 2017-12-21 09:28:52,718 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,718 Line:313 exeCondition:tblBuyInStock_Add_One :'0' != '0'
 [DEBUG] 2017-12-21 09:28:52,719 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,719 Line:313 exeCondition:tblBuyInStock_Add_One :'0' != '0'
 [DEBUG] 2017-12-21 09:28:52,720 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,720 Line:313 exeCondition:tblBuyInStock_Add_One :'false'=='true'
 [DEBUG] 2017-12-21 09:28:52,720 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,720 Line:313 exeCondition:tblBuyInStock_Add_One :""!=""
 [DEBUG] 2017-12-21 09:28:52,721 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,721 Line:313 exeCondition:tblBuyInStock_Add_One :true
 [DEBUG] 2017-12-21 09:28:52,722 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,722 Line:1081 自定义执行的语句显示： tblBuyInStock_Add_One:update tblBuyInStockDet set NotPayQty=Qty,PayQty=0 where f_ref=?
 [DEBUG] 2017-12-21 09:28:52,722 Line:1157 1值：b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,725 Line:1163 DefineSQLBean.execSql  define=tblBuyInStock_Add_One,  影响行数=13
 [DEBUG] 2017-12-21 09:28:52,725 Line:408 ************上述语句执行时间：3
 [DEBUG] 2017-12-21 09:28:52,726 Line:313 exeCondition:tblBuyInStock_Add_One :true
 [DEBUG] 2017-12-21 09:28:52,726 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,727 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_One:{call proc_BuyInPayAmort(?,?,?,?)}
 [DEBUG] 2017-12-21 09:28:52,727 Line:1270 b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,727 Line:1270 add
 [DEBUG] 2017-12-21 09:28:52,772 Line:425 ************上述语句执行时间：45
 [DEBUG] 2017-12-21 09:28:52,772 Line:313 exeCondition:tblBuyInStock_Add_One :3!=2
 [DEBUG] 2017-12-21 09:28:52,773 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,774 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_One:{call proc_insertStockDetGM(@Period=?,@PeriodYear=?,@PeriodMonth=?,@GoodsCode=?,@StockCode=?,@BillID=?,@BillType=?,@BillDate=?,@BillNo=?,@InstoreQty=?,@InstorePrice=?,@InstoreAmount=?,@createBy=?,@lastUpdateBy=?,@createTime=?,@lastUpdateTime=?,@SCompanyID=?,@MRemark=?,@DRemark=?,@SourceID=?,@CompanyCode=?,@EmployeeID=?,@DepartmentCode=?,@SalesPrice=?,@SalesAmount=?,@SalesQty=?,@Amount=?,@Price=?,@DiscountAmount=?,@TrackNo=?,@PresentSampleType=?,@from=?,@where=?,@retCode=?,@retVal=?)}
 [DEBUG] 2017-12-21 09:28:52,774 Line:1270 12
 [DEBUG] 2017-12-21 09:28:52,774 Line:1270 2017
 [DEBUG] 2017-12-21 09:28:52,775 Line:1270 12
 [DEBUG] 2017-12-21 09:28:52,775 Line:1270 tblBuyInStockDet.GoodsCode
 [DEBUG] 2017-12-21 09:28:52,775 Line:1270 tblBuyInStockDet.StockCode
 [DEBUG] 2017-12-21 09:28:52,775 Line:1270 b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:52,776 Line:1270 tblBuyInStock
 [DEBUG] 2017-12-21 09:28:52,776 Line:1270 2017-12-21
 [DEBUG] 2017-12-21 09:28:52,776 Line:1270 BI1712210004
 [DEBUG] 2017-12-21 09:28:52,777 Line:1270 tblBuyInStockDet.Qty
 [DEBUG] 2017-12-21 09:28:52,777 Line:1270 (tblBuyInStockDet.TaxAmount+tblBuyInStockDet.freightAmount)/tblBuyInStockDet.Qty
 [DEBUG] 2017-12-21 09:28:52,790 Line:1270 tblBuyInStockDet.TaxAmount+tblBuyInStockDet.freightAmount
 [DEBUG] 2017-12-21 09:28:52,791 Line:1270 1
 [DEBUG] 2017-12-21 09:28:52,792 Line:1270 1
 [DEBUG] 2017-12-21 09:28:52,792 Line:1270 2017-12-21 09:28:52
 [DEBUG] 2017-12-21 09:28:52,792 Line:1270 2017-12-21 09:28:52
 [DEBUG] 2017-12-21 09:28:52,793 Line:1270 00001
 [DEBUG] 2017-12-21 09:28:52,793 Line:1270 
 [DEBUG] 2017-12-21 09:28:52,793 Line:1270 tblBuyInStockDet.Remark
 [DEBUG] 2017-12-21 09:28:52,793 Line:1270 tblBuyInStockDet.id
 [DEBUG] 2017-12-21 09:28:52,793 Line:1270 00003
 [DEBUG] 2017-12-21 09:28:52,793 Line:1270 1
 [DEBUG] 2017-12-21 09:28:52,793 Line:1270 00101
 [DEBUG] 2017-12-21 09:28:52,794 Line:1270 tblBuyInStockDet.TaxPrice
 [DEBUG] 2017-12-21 09:28:52,794 Line:1270 tblBuyInStockDet.TaxAmount
 [DEBUG] 2017-12-21 09:28:52,794 Line:1270 tblBuyInStockDet.Qty
 [DEBUG] 2017-12-21 09:28:52,794 Line:1270 tblBuyInStockDet.DisAmount
 [DEBUG] 2017-12-21 09:28:52,794 Line:1270 tblBuyInStockDet.DisPrice
 [DEBUG] 2017-12-21 09:28:52,794 Line:1270 0
 [DEBUG] 2017-12-21 09:28:52,794 Line:1270 tblBuyInStockDet.TrackNo
 [DEBUG] 2017-12-21 09:28:52,795 Line:1270 tblBuyInStockDet.PresentSampleType
 [DEBUG] 2017-12-21 09:28:52,795 Line:1270 tblBuyInStockDet
 [DEBUG] 2017-12-21 09:28:52,795 Line:1270 f_ref='b83a05a1_1712210928522370036'
 [DEBUG] 2017-12-21 09:28:52,988 Line:1292 存储过程内部信息： select ROW_NUMBER() over(order by tblBuyInStockDet.id),'b83a05a1_1712210928522370036','2017-12-21','BI1712210004','tblBuyInStock',12,2017,12,'00003','1','00101','',tblBuyInStockDet.id,tblBuyInStockDet.TrackNo,tblBuyInStockDet.Remark,tblBuyInStockDet.GoodsCode,tblBuyInStockDet.StockCode,LTRIM(RTRIM(BatchNo)),LTRIM(RTRIM(Inch)),LTRIM(RTRIM(Hue)),LTRIM(RTRIM(yearNO)),LTRIM(RTRIM(ProDate)),LTRIM(RTRIM(Availably)),Seq,0,tblBuyInStockDet.Qty,(tblBuyInStockDet.TaxAmount+tblBuyInStockDet.freightAmount)/tblBuyInStockDet.Qty,tblBuyInStockDet.TaxAmount+tblBuyInStockDet.freightAmount,0,0,0,0,0,0,tblBuyInStockDet.Qty,tblBuyInStockDet.TaxPrice,tblBuyInStockDet.TaxAmount,tblBuyInStockDet.DisPrice,tblBuyInStockDet.DisAmount,0,0,tblBuyInStockDet.PresentSampleType,'',0,'1','1','2017-12-21 09:28:52','2017-12-21 09:28:52','00001' from tblBuyInStockDet where f_ref='b83a05a1_1712210928522370036' order by tblBuyInStockDet.id
 [DEBUG] 2017-12-21 09:28:52,989 Line:1292 存储过程内部信息： 13
 [DEBUG] 2017-12-21 09:28:52,989 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,989 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,989 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,990 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,990 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,990 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,990 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,990 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,990 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,990 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,991 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,991 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,991 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,991 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,991 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,991 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,992 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,992 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,992 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,992 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,992 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,992 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,992 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,992 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,993 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,993 Line:1292 存储过程内部信息： ************
 [DEBUG] 2017-12-21 09:28:52,993 Line:425 ************上述语句执行时间：220
 [DEBUG] 2017-12-21 09:28:52,993 Line:313 exeCondition:tblBuyInStock_Add_One :3==2
 [DEBUG] 2017-12-21 09:28:52,997 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:52,997 Line:313 exeCondition:tblBuyInStock_Add_One :true
 [DEBUG] 2017-12-21 09:28:52,998 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:52,998 Line:921 自定义执行的语句显示： validateSameSeq :select 'isUsed' as isUseSeq from tblGoodsAttribute where propName='Seq' and isUsed=1
 [DEBUG] 2017-12-21 09:28:52,999 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:53,000 Line:1043 ---上述语句时间---2
 [DEBUG] 2017-12-21 09:28:53,000 Line:313 exeCondition:validateSameSeq :'null'!='null'
 [DEBUG] 2017-12-21 09:28:53,001 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,001 Line:313 exeCondition:validateSameSeq :''!=''
 [DEBUG] 2017-12-21 09:28:53,001 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,001 Line:313 exeCondition:tblBuyInStock_Add_One :'add' == 'update'
 [DEBUG] 2017-12-21 09:28:53,002 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,002 Line:921 自定义执行的语句显示： tblBuyInStock_Add_One :select (cast(? as numeric(18,8))-cast(? as numeric(18,8))) as RNeedPayAmt,(cast(? as numeric(18,8))-cast(? as numeric(18,8))) as CRNeedPayAmt,cast(? as numeric(18,8))*cast(? as numeric(18,8)) as freightAmountCur
 [DEBUG] 2017-12-21 09:28:53,002 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:53,002 Line:988 1值：1300
 [DEBUG] 2017-12-21 09:28:53,003 Line:988 2值：0
 [DEBUG] 2017-12-21 09:28:53,003 Line:988 3值：1300
 [DEBUG] 2017-12-21 09:28:53,003 Line:988 4值：0
 [DEBUG] 2017-12-21 09:28:53,003 Line:988 5值：0
 [DEBUG] 2017-12-21 09:28:53,004 Line:988 6值：1
 [DEBUG] 2017-12-21 09:28:53,004 Line:1023 query condition columnName:RNeedPayAmt----value:1300.00000000
 [DEBUG] 2017-12-21 09:28:53,005 Line:1023 query condition columnName:CRNeedPayAmt----value:1300.00000000
 [DEBUG] 2017-12-21 09:28:53,005 Line:1023 query condition columnName:freightAmountCur----value:0E-16
 [DEBUG] 2017-12-21 09:28:53,005 Line:1043 ---上述语句时间---3
 [DEBUG] 2017-12-21 09:28:53,005 Line:313 exeCondition:tblBuyInStock_Add_One :'true'=='true'
 [DEBUG] 2017-12-21 09:28:53,006 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:53,017 Line:1361 自定义执行的语句显示： tblBuyInStock_Add_One:凭证模块--tblBuyInStock
 [DEBUG] 2017-12-21 09:28:53,022 Line:6876  DynDBManager. genCertificate 取表相关数据sql=select PeriodYear  as PeriodYear,Period  as Period, PeriodMonth as PeriodMonth,a.workFlowNodeName,CertificateNo,a.billNo,a.BillDate,a.createBy,a.createTime,a.lastUpdateBy,a.lastUpdateTime,a.SCompanyID,b.id EmployeeID,b.empFullName,a.DepartmentCode as DepartmentCode ,c.deptFullName as deptFullName, d.ComFullName as ComFullName from tblBuyInStock a left join tblEmployee b on  a.EmployeeId=b.id left join tblDepartment c on a.departmentCode=c.classCode left join tblCompany d on a.CompanyCode=d.classCode  where a.id=?
 [DEBUG] 2017-12-21 09:28:53,034 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'22210101' AccCode,case when (tblBuyInStock.InVoiceType=2 and tblBuyInStock.TotalCoTaxAmt>0) then tblBuyInStock.TotalCoTaxAmt else 0 end DebitAmount,case when (tblBuyInStock.InVoiceType=2 and tblBuyInStock.TotalCoTaxAmt>0) then tblBuyInStock.TotalCoTaxAmt/tblBuyInStock.CurrencyRate else 0 end DebitCurrencyAmount,0 LendAmount,0 LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:28:53,040 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'2202' AccCode,0 DebitAmount,0 DebitCurrencyAmount,case when tblBuyInStock.TotalTaxAmount+tblBuyInStock.freightAmount-tblBuyInStock.PayAmount>0 then tblBuyInStock.TotalTaxAmount+tblBuyInStock.freightAmount-tblBuyInStock.PayAmount else 0 end LendAmount,case when tblBuyInStock.TotalTaxAmount-tblBuyInStock.PayAmount>0 then tblBuyInStock.CurTotalAmount-tblBuyInStock.CurAlrPayAmt else 0 end LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:28:53,046 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'660303' AccCode,case when tblBuyInStock.ProceDureExp>0 then tblBuyInStock.ProceDureExp else 0 end DebitAmount,case when tblBuyInStock.ProceDureExp>0 then tblBuyInStock.CurProceDureExp else 0 end DebitCurrencyAmount,0 LendAmount,0 LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:28:53,052 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,tblBuyPayAccount.Account AccCode,0 DebitAmount,0 DebitCurrencyAmount,tblBuyPayAccount.Amount LendAmount,tblBuyPayAccount.ExeBalFcAmt LendCurrencyAmount from   tblBuyInStock join tblBuyPayAccount  on tblBuyInStock.id=tblBuyPayAccount.f_ref  join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:28:53,059 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'630106' AccCode,0 DebitAmount,0 DebitCurrencyAmount,case when tblBuyInStock.DiscountAmount!=0 then tblBuyInStock.DiscountAmount else 0 end LendAmount,case when tblBuyInStock.DiscountAmount!=0 then tblBuyInStock.CurDiscountAmount else 0 end LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:28:53,065 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStockDet.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,tblGoodsAccProp.AccCode AccCode,(case when tblBuyInStock.InVoiceType=2 then tblBuyInStockDet.DisBackAmt else tblBuyInStockDet.TaxAmount end)+tblBuyInStockDet.freightAmount DebitAmount,case when tblBuyInStock.InVoiceType=2 then tblBuyInStockDet.DisBackAmt/tblBuyInStock.CurrencyRate else tblBuyInStockDet.TaxAmount/tblBuyInStock.CurrencyRate end DebitCurrencyAmount,0 LendAmount,0 LendCurrencyAmount from   tblBuyInStock join tblBuyInStockDet  on tblBuyInStock.id=tblBuyInStockDet.f_ref  join tblGoods on tblBuyInStockDet.GoodsCode=tblGoods.classCode  join tblGoodsAccProp on tblGoods.CostMethod=tblGoodsAccProp.id  join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:28:53,079 Line:7058  DynDBManager. genCertificate 取凭证明细数据sql=select Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate,sum(DebitAmount) DebitAmount,sum(DebitCurrencyAmount) DebitCurrencyAmount,sum(LendAmount) LendAmount,sum(LendCurrencyAmount) LendCurrencyAmount  from ( select isnull('采购入库  等 '+tblCompanyCC.ComFullName,'') Comment,isnull(tblBuyInStock.CompanyCode,'') CompanyCode,isnull(tblBuyInStock.DepartmentCode,'') DepartmentCode,isnull(tblBuyInStock.EmployeeID,'') EmployeeID,isnull(tblBuyInStock.ProjectCode,'') ProjectCode, isnull(tblBuyInStock.StockCode,'') StockCode, isnull(tblBuyInStock.Currency,'') Currency,tblBuyInStock.CurrencyRate CurrencyRate,'2202' AccCode,case when tblBuyInStock.TotalTaxAmount+tblBuyInStock.freightAmount-tblBuyInStock.PayAmount<0 then abs(tblBuyInStock.TotalTaxAmount+tblBuyInStock.freightAmount-tblBuyInStock.PayAmount) else 0 end DebitAmount,case when tblBuyInStock.TotalTaxAmount-tblBuyInStock.PayAmount<0 then abs(tblBuyInStock.CurTotalAmount-tblBuyInStock.CurAlrPayAmt) else 0 end DebitCurrencyAmount,0 LendAmount,0 LendCurrencyAmount from   tblBuyInStock join  tblCompany tblCompanyCC  on tblBuyInStock.CompanyCode=tblCompanyCC.classCode   where tblBuyInStock.id=? ) detail  group by Comment,CompanyCode,DepartmentCode,EmployeeID,AccCode,ProjectCode,StockCode,Currency,CurrencyRate
 [DEBUG] 2017-12-21 09:28:53,088 Line:7182  DynDBManager. genCertificate 采购入库:tblBuyInStock取凭证明细 返回总行数=6合并后：2
 [DEBUG] 2017-12-21 09:28:53,212 Line:434 ************上述语句执行时间：206
 [DEBUG] 2017-12-21 09:28:53,212 Line:313 exeCondition:tblBuyInStock_Add_One :1300>0
 [DEBUG] 2017-12-21 09:28:53,213 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:53,213 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_One:{call proc_insertComIni(?,?,?,?,?,?,?)}
 [DEBUG] 2017-12-21 09:28:53,213 Line:1270 1b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:53,213 Line:1270 00003
 [DEBUG] 2017-12-21 09:28:53,214 Line:1270 1
 [DEBUG] 2017-12-21 09:28:53,214 Line:1270 2017-12-21
 [DEBUG] 2017-12-21 09:28:53,214 Line:1270 Period=12@SPFieldLink:PeriodYear=2017@SPFieldLink:PeriodMonth=12@SPFieldLink:PayTotalDebit=0@SPFieldLink:PayTotalLend=1300@SPFieldLink:RelationDocID=b83a05a1_1712210928522370036@SPFieldLink:Currency=@SPFieldLink:CurrencyRate=1@SPFieldLink:FcPayTotalDebit=0@SPFieldLink:FcPayTotalCredit=1300@SPFieldLink:createBy=1@SPFieldLink:createTime=2017-12-21 09:28:52@SPFieldLink:lastUpdateBy=1@SPFieldLink:lastUpdateTime=2017-12-21 09:28:52@SPFieldLink:SCompanyID=00001@SPFieldLink:BillType=tblBuyInStock@SPFieldLink:BillNo=BI1712210004@SPFieldLink:EmployeeID=1@SPFieldLink:DepartmentCode=00101@SPFieldLink:DiscountAmount=0@SPFieldLink:Remark=
 [DEBUG] 2017-12-21 09:28:53,265 Line:1292 存储过程内部信息： insert into tblCompanyIni (id,ItemNo,CompanyCode,BillDate,Period,PeriodYear,PeriodMonth,PayTotalDebit,PayTotalLend,RelationDocID,Currency,CurrencyRate,FcPayTotalDebit,FcPayTotalCredit,createBy,createTime,lastUpdateBy,lastUpdateTime,SCompanyID,BillType,BillNo,EmployeeID,DepartmentCode,DiscountAmount,Remark) values('1b83a05a1_1712210928522370036',3,'00003','2017-12-21','12','2017','12','0','1300','b83a05a1_1712210928522370036','','1','0','1300','1','2017-12-21 09:28:52','1','2017-12-21 09:28:52','00001','tblBuyInStock','BI1712210004','1','00101','0','')
 [DEBUG] 2017-12-21 09:28:53,266 Line:425 ************上述语句执行时间：53
 [DEBUG] 2017-12-21 09:28:53,266 Line:313 exeCondition:tblBuyInStock_Add_One :1300.00000000<0 && 1300>0 && 'true'=='false'
 [DEBUG] 2017-12-21 09:28:53,267 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,267 Line:313 exeCondition:tblBuyInStock_Add_One :1300.00000000<0 && 'true'=='false'
 [DEBUG] 2017-12-21 09:28:53,268 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,268 Line:313 exeCondition:tblBuyInStock_Add_One :1300.00000000<0 && 'true'=='true'
 [DEBUG] 2017-12-21 09:28:53,268 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,269 Line:313 exeCondition:tblBuyInStock_Add_One :0>0&&1300.00000000>=0
 [DEBUG] 2017-12-21 09:28:53,269 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,269 Line:313 exeCondition:tblBuyInStock_Add_One :''.indexOf('2202')>=0
 [DEBUG] 2017-12-21 09:28:53,270 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,270 Line:313 exeCondition:tblBuyInStock_Add_One :''.indexOf('1123')>=0
 [DEBUG] 2017-12-21 09:28:53,271 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,271 Line:921 自定义执行的语句显示： tblBuyInStock_Add_One :select (cast(? as numeric(18,8))-cast(? as numeric(18,8))) as RNeedPayAmt,(case when (cast(? as numeric(18,8))-cast(? as numeric(18,8)))>=0.0 then 'Pay' else 'PrePay' end) as rePayType,(cast(? as numeric(18,8))+cast(? as numeric(18,8))) as factAmt 
 [DEBUG] 2017-12-21 09:28:53,271 Line:922 上述自定义执行的语句参数显示： 
 [DEBUG] 2017-12-21 09:28:53,271 Line:988 1值：1300
 [DEBUG] 2017-12-21 09:28:53,272 Line:988 2值：0
 [DEBUG] 2017-12-21 09:28:53,272 Line:988 3值：1300
 [DEBUG] 2017-12-21 09:28:53,272 Line:988 4值：0
 [DEBUG] 2017-12-21 09:28:53,272 Line:988 5值：0
 [DEBUG] 2017-12-21 09:28:53,272 Line:988 6值：0
 [DEBUG] 2017-12-21 09:28:53,273 Line:1023 query condition columnName:RNeedPayAmt----value:1300.00000000
 [DEBUG] 2017-12-21 09:28:53,274 Line:1025 query condition columnName:rePayType----value:Pay
 [DEBUG] 2017-12-21 09:28:53,275 Line:1023 query condition columnName:factAmt----value:0E-8
 [DEBUG] 2017-12-21 09:28:53,275 Line:1043 ---上述语句时间---4
 [DEBUG] 2017-12-21 09:28:53,275 Line:313 exeCondition:tblBuyInStock_Add_One :0>0
 [DEBUG] 2017-12-21 09:28:53,276 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,276 Line:313 exeCondition:tblBuyInStock_Add_One :0>0
 [DEBUG] 2017-12-21 09:28:53,277 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,277 Line:313 exeCondition:tblBuyInStock_Add_One :'false'=='true'
 [DEBUG] 2017-12-21 09:28:53,277 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,278 Line:313 exeCondition:tblBuyInStock_Add_One :'false'=='true'
 [DEBUG] 2017-12-21 09:28:53,278 Line:321 flag:false
 [DEBUG] 2017-12-21 09:28:53,278 Line:313 exeCondition:tblBuyInStock_Add_One :true
 [DEBUG] 2017-12-21 09:28:53,279 Line:321 flag:true
 [DEBUG] 2017-12-21 09:28:53,279 Line:1264 自定义执行的语句显示： tblBuyInStock_Add_One:{call proc_BuyInUpdateSales(?,?,?,?)}
 [DEBUG] 2017-12-21 09:28:53,280 Line:1270 b83a05a1_1712210928522370036
 [DEBUG] 2017-12-21 09:28:53,280 Line:1270 add
 [DEBUG] 2017-12-21 09:28:53,288 Line:425 ************上述语句执行时间：9
 [DEBUG] 2017-12-21 09:28:54,803 Line:135 BaseAction.execute 请求地址：/UserFunctionQueryAction.do?tableName=tblBuyInStock&operation=5&keyId=b83a05a1_1712210928522370036&parentCode=null&f_brother=&checkTab=Y&parentTableName=&moduleType=&winCurIndex=4&fresh=&popWinName=PopMainOpdiv
 [DEBUG] 2017-12-21 09:28:54,804 Line:146 BaseAction.execute 操作人:admin;请求数据：tableName=[tblBuyInStock,];operation=[5,];keyId=[b83a05a1_1712210928522370036,];parentCode=[null,];f_brother=[,];checkTab=[Y,];parentTableName=[,];moduleType=[,];winCurIndex=[4,];fresh=[,];popWinName=[PopMainOpdiv,];
 [DEBUG] 2017-12-21 09:28:54,804 Line:5010 OAMyWorkFLowMgt.getOAMyWorkFlowInfo 取流程详情 sql=select a.createBy,applyType,a.checkPerson,nextNodeIds,currentNode,b.oaTimeLimitUnit,b.benchmarkTime,a.applyContent,a.departmentCode,a.tableName,a.keyId,a.id,a.lastNodeId,a.lastCheckPerson,a.applyContent,display as currentNodeName from OAMyWorkFlow a  left join OAMyWorkFlowDet b on a.id=b.f_ref left join OAWorkFlowNode c on c.flowId=a.applyType and c.keyId=a.currentNode  where a.keyId='b83a05a1_1712210928522370036' and  a.tableName='tblBuyInStock'
 [DEBUG] 2017-12-21 09:28:54,839 Line:1525  select * from  tblBuyInStockDet where f_ref = 'b83a05a1_1712210928522370036' order by detOrderNo
 [DEBUG] 2017-12-21 09:28:54,856 Line:1525  select * from  tblBuyPayAccount where f_ref = 'b83a05a1_1712210928522370036' order by detOrderNo
 [DEBUG] 2017-12-21 09:28:57,600 Line:135 BaseAction.execute 请求地址：/ReportDataAction.do
 [DEBUG] 2017-12-21 09:28:57,601 Line:146 BaseAction.execute 操作人:admin;请求数据：operation=[4,];reportNumber=[tblVirtualStock,];reportName=[虚拟库存查询,虚拟库存查询,];isClickQuery=[true,];isAllListQuery=[,];winCurIndex=[2,];src=[,];parentCode=[00005,];queryChannel=[normal,];SQLSave=[@SQL:{call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}@ParamList:00005@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:@Param:0@Param:tblGoods@Param:@Param:@end:,];query=[,];NoButton=[,];backParent=[,];checkTab=[Y,];defineOrderBy=[,];export=[,];noback=[false,];mainNumber=[,];detTable_list=[,];moduleType=[,];popWinName=[,];upperQtyQ=[,];StockCode=[,];hide_StockCode=[,];tblStock.StockFullName=[,];GoodsCode=[,];hide_GoodsCode=[,];tblGoods.GoodsNumber=[,];tblGoods.GoodsFullName=[,];tblGoods.GoodsSpec=[,];tblGoods.BaseUnit=[,];NumberType=[0,];DataType=[tblGoods,];mobileGoodsFullName=[,];pageSize=[100,];pageNo=[1,];
 [DEBUG] 2017-12-21 09:28:57,633 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:28:57,634 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:28:57,634 Line:568 ReportDataMgt.getReportData 参数2:100
 [DEBUG] 2017-12-21 09:28:57,634 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:28:57,634 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:28:57,634 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:28:57,634 Line:582 ReportDataMgt.getReportData 参数6:00005
 [DEBUG] 2017-12-21 09:28:57,635 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:28:57,635 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:28:57,635 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:28:57,635 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:28:57,635 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:28:57,635 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:28:57,635 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:28:57,636 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:28:57,636 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:28:57,636 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:28:57,636 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:28:57,636 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:28:57,679 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:28:57,679 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:28:57,679 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:28:57,680 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:28:57,680 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:28:57,680 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:28:57,680 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:28:57,680 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '00005_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:28:57,681 Line:689 通过SQL读原始数据：47
 [DEBUG] 2017-12-21 09:28:57,682 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:29:06,804 Line:2992 MobileAjax 请求地址：/MobileAjax?op=getSessEmp
 [DEBUG] 2017-12-21 09:29:06,805 Line:3003 MobileAjax 操作人:admin;请求数据：op=[getSessEmp,];
 [DEBUG] 2017-12-21 09:29:06,806 Line:243 AIOApi op=getSessEmp&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:29:06,806 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"departmentName":"默认部门","titleId":"12","name":"admin","id":"1"}}
 [DEBUG] 2017-12-21 09:29:06,819 Line:2992 MobileAjax 请求地址：/MobileAjax?op=getEnum&enum=duty
 [DEBUG] 2017-12-21 09:29:06,820 Line:3003 MobileAjax 操作人:admin;请求数据：op=[getEnum,];enum=[duty,];
 [DEBUG] 2017-12-21 09:29:06,820 Line:243 AIOApi op=getEnum&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:29:06,821 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":[{"name":"职员","value":"11"},{"name":"法人","value":"1"},{"name":"董事","value":"10"},{"name":"董事长","value":"9"},{"name":"总经理","value":"2"},{"name":"部门经理","value":"3"},{"name":"副经理","value":"5"},{"name":"部长","value":"4"},{"name":"副部长","value":"6"},{"name":"主管","value":"7"},{"name":"副主管","value":"8"},{"name":"其他","value":"12"}]}
 [DEBUG] 2017-12-21 09:29:08,856 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:29:08,857 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:29:08,858 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:29:08,882 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:29:08,883 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:29:08,883 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:29:08,884 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:29:08,884 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:29:08,884 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:29:08,885 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:29:08,885 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:29:08,885 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:29:08,886 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:29:08,886 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:29:08,887 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:29:08,888 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:29:08,888 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:29:08,889 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:29:08,889 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:29:08,889 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:29:08,890 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:29:08,890 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:29:08,932 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:29:08,932 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:29:08,932 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:29:08,932 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:29:08,933 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:29:08,933 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:29:08,933 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:29:08,933 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:29:08,934 Line:689 通过SQL读原始数据：51
 [DEBUG] 2017-12-21 09:29:08,934 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:29:08,941 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:29:11,780 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:29:11,780 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[00005,];StockCode=[,];
 [DEBUG] 2017-12-21 09:29:11,780 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:29:11,790 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:29:11,790 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:29:11,790 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:29:11,791 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:29:11,791 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:29:11,791 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:29:11,791 Line:582 ReportDataMgt.getReportData 参数6:00005
 [DEBUG] 2017-12-21 09:29:11,791 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:29:11,791 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:29:11,792 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:29:11,792 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:29:11,792 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:29:11,792 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:29:11,792 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:29:11,793 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:29:11,793 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:29:11,793 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:29:11,793 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:29:11,793 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:29:11,796 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:29:11,797 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:29:11,797 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:29:11,797 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:29:11,798 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:29:11,798 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:29:11,798 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:29:11,799 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '00005_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:29:11,800 Line:689 通过SQL读原始数据：10
 [DEBUG] 2017-12-21 09:29:11,801 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:29:11,822 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:30:56,544 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:30:56,547 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:30:56,548 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:30:56,623 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:30:56,624 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:30:56,624 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:30:56,625 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:30:56,625 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:30:56,625 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:30:56,626 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:30:56,626 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:30:56,627 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:30:56,627 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:30:56,628 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:30:56,628 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:30:56,628 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:30:56,629 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:30:56,629 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:30:56,630 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:30:56,630 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:30:56,630 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:30:56,631 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:30:56,779 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:30:56,779 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:30:56,779 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:30:56,780 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:30:56,780 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:30:56,781 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:30:56,781 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:30:56,781 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:30:56,782 Line:689 通过SQL读原始数据：158
 [DEBUG] 2017-12-21 09:30:56,783 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:30:56,790 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:30:59,886 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:30:59,887 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[00005,];StockCode=[,];
 [DEBUG] 2017-12-21 09:30:59,887 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:30:59,897 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:30:59,897 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:30:59,897 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:30:59,897 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:30:59,898 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:30:59,898 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:30:59,898 Line:582 ReportDataMgt.getReportData 参数6:00005
 [DEBUG] 2017-12-21 09:30:59,898 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:30:59,898 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:30:59,898 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:30:59,898 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:30:59,899 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:30:59,899 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:30:59,899 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:30:59,899 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:30:59,899 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:30:59,900 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:30:59,900 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:30:59,900 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:30:59,919 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:30:59,920 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:30:59,920 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:30:59,920 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:30:59,920 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:30:59,920 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:30:59,920 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:30:59,921 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '00005_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:30:59,922 Line:689 通过SQL读原始数据：25
 [DEBUG] 2017-12-21 09:30:59,922 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:30:59,935 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:31:17,887 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:31:17,890 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[,];StockCode=[,];
 [DEBUG] 2017-12-21 09:31:17,891 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:31:17,914 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:31:17,915 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:31:17,915 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:31:17,916 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:31:17,916 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:31:17,916 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:31:17,916 Line:582 ReportDataMgt.getReportData 参数6:
 [DEBUG] 2017-12-21 09:31:17,917 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:31:17,917 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:31:17,917 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:31:17,918 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:31:17,918 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:31:17,918 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:31:17,918 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:31:17,919 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:31:17,919 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:31:17,919 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:31:17,920 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:31:17,920 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:31:17,929 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:31:17,930 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:31:17,930 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:31:17,930 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:31:17,931 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:31:17,931 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:31:17,931 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:31:17,931 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish') as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:31:17,932 Line:689 通过SQL读原始数据：17
 [DEBUG] 2017-12-21 09:31:17,933 Line:1391 整理数据：1
 [DEBUG] 2017-12-21 09:31:17,942 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:31:20,543 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:31:20,543 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[00005,];StockCode=[,];
 [DEBUG] 2017-12-21 09:31:20,544 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:31:20,551 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:31:20,552 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:31:20,552 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:31:20,552 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:31:20,552 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:31:20,552 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:31:20,552 Line:582 ReportDataMgt.getReportData 参数6:00005
 [DEBUG] 2017-12-21 09:31:20,553 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:31:20,553 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:31:20,553 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:31:20,553 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:31:20,553 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:31:20,553 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:31:20,553 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:31:20,554 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:31:20,554 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:31:20,554 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:31:20,554 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:31:20,554 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:31:20,556 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:31:20,557 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:31:20,557 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:31:20,557 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:31:20,557 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:31:20,557 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:31:20,558 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:31:20,558 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '00005_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '00005%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:31:20,559 Line:689 通过SQL读原始数据：7
 [DEBUG] 2017-12-21 09:31:20,559 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:31:20,575 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:32:09,989 Line:2992 MobileAjax 请求地址：/MobileAjax?op=report&reportNumber=tblVirtualStock
 [DEBUG] 2017-12-21 09:32:09,991 Line:3003 MobileAjax 操作人:admin;请求数据：op=[report,];reportNumber=[tblVirtualStock,];pageNo=[1,];pageSize=[10,];src=[menu,];DataType=[tblGoods,];mobileGoodsFullName=[,];parentCode=[0000500002,];StockCode=[,];
 [DEBUG] 2017-12-21 09:32:09,991 Line:243 AIOApi op=report&sessionid=2AE484FDA18FB6426795B19FD27E3AED
 [DEBUG] 2017-12-21 09:32:10,026 Line:549 ReportDataMgt.getReportData SQL={call report_VirtualStock (@pageNo=?,@pageSize=?,@locale=?,@userId=?,@sunCompany=?,@classCode=?,@StockCode=?,@GoodsCode=?,@BatchNo=?,@Inch=?,@Hue=?,@yearNO=?,@ProDate=?,@Availably=?,@NumberType=?,@DataType=?,@upperQtyQ=?,@mobileGoodsFullName=?)}
 [DEBUG] 2017-12-21 09:32:10,027 Line:567 ReportDataMgt.getReportData 参数1:1
 [DEBUG] 2017-12-21 09:32:10,027 Line:568 ReportDataMgt.getReportData 参数2:10
 [DEBUG] 2017-12-21 09:32:10,027 Line:569 ReportDataMgt.getReportData 参数3:zh_CN
 [DEBUG] 2017-12-21 09:32:10,027 Line:570 ReportDataMgt.getReportData 参数4:1
 [DEBUG] 2017-12-21 09:32:10,027 Line:571 ReportDataMgt.getReportData 参数5:00001
 [DEBUG] 2017-12-21 09:32:10,028 Line:582 ReportDataMgt.getReportData 参数6:0000500002
 [DEBUG] 2017-12-21 09:32:10,028 Line:582 ReportDataMgt.getReportData 参数7:
 [DEBUG] 2017-12-21 09:32:10,028 Line:582 ReportDataMgt.getReportData 参数8:
 [DEBUG] 2017-12-21 09:32:10,028 Line:582 ReportDataMgt.getReportData 参数9:
 [DEBUG] 2017-12-21 09:32:10,028 Line:582 ReportDataMgt.getReportData 参数10:
 [DEBUG] 2017-12-21 09:32:10,028 Line:582 ReportDataMgt.getReportData 参数11:
 [DEBUG] 2017-12-21 09:32:10,028 Line:582 ReportDataMgt.getReportData 参数12:
 [DEBUG] 2017-12-21 09:32:10,028 Line:582 ReportDataMgt.getReportData 参数13:
 [DEBUG] 2017-12-21 09:32:10,029 Line:582 ReportDataMgt.getReportData 参数14:
 [DEBUG] 2017-12-21 09:32:10,029 Line:582 ReportDataMgt.getReportData 参数15:0
 [DEBUG] 2017-12-21 09:32:10,029 Line:582 ReportDataMgt.getReportData 参数16:tblGoods
 [DEBUG] 2017-12-21 09:32:10,029 Line:582 ReportDataMgt.getReportData 参数17:
 [DEBUG] 2017-12-21 09:32:10,029 Line:582 ReportDataMgt.getReportData 参数18:
 [DEBUG] 2017-12-21 09:32:10,102 Line:587 ReportDataMgt.getReportData warn 正在直接执行 SQL；无游标。
 [DEBUG] 2017-12-21 09:32:10,103 Line:587 ReportDataMgt.getReportData warn 商品，仓库权限语句
 [DEBUG] 2017-12-21 09:32:10,103 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:32:10,103 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:32:10,103 Line:587 ReportDataMgt.getReportData warn 解析出的查询条件
 [DEBUG] 2017-12-21 09:32:10,103 Line:587 ReportDataMgt.getReportData warn  
 [DEBUG] 2017-12-21 09:32:10,103 Line:587 ReportDataMgt.getReportData warn 最终显示数据的查询语句
 [DEBUG] 2017-12-21 09:32:10,104 Line:587 ReportDataMgt.getReportData warn SELECT ROW_NUMBER() OVER(ORDER BY tblGoods.GoodsNumber) AS rowid,
			tblGoods.classCode,
            tblGoods.isCatalog,
            tblGoods.classCode+ '#;#'+ CAST(tblGoods.isCatalog AS VARCHAR(10))+ '#;##;#' AS hide_GoodsCode,
            tblGoods.GoodsNumber AS GoodsNumber,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end as BatchNo,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end as Inch,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end as Hue,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end as yearNO,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end as ProDate,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end as Availably,sum(isnull(lastQty,0)),sum(isnull(inQtyNotAudit,0)),sum(isnull(SInQtyNotAudit,0)),sum(isnull(outQtyNotAudit,0)),sum(isnull(BOutQtyNotAudit,0)),sum(isnull(UseQty,0)),sum(isnull(buyOrderQty,0)),sum(isnull(salesOrderQty,0)),sum(isnull(UseQty,0))+sum(isnull(buyOrderQty,0))-sum(isnull(salesOrderQty,0)) as orderQty FROM (select GoodsNumber,classCode,isCatalog,upperQty,lowerQty from tblGoods where workFlowNodeName='finish' and (tblGoods.classCode like '0000500002_____')) as tblGoods  LEFT JOIN (SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,lastQty,inQtyNotAudit,SInQtyNotAudit,outQtyNotAudit,BOutQtyNotAudit,lastQty+inQtyNotAudit+SInQtyNotAudit-outQtyNotAudit-BOutQtyNotAudit as UseQty,0 as buyOrderQty,0 as salesOrderQty FROM tblStocks as b where 1=1 and (b.GoodsCode like '0000500002%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,NotInQty,0 FROM tblBuyOrder a,tblBuyOrderDet b WHERE a.id = b.f_ref AND b.NotInQty>0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '0000500002%') union all SELECT GoodsCode,BatchNo,Inch,Hue,yearNO,ProDate,Availably,0,0,0,0,0,0,0,NotOutQty FROM tblSalesOrder a,tblSalesOrderDet b WHERE a.id = b.f_ref AND b.NotOutQty> 0 AND a.statusId = 0 AND a.workFlowNodeName = 'finish' and (b.GoodsCode like '0000500002%')) as b on tblGoods.classCode = SUBSTRING(b.GoodsCode, 1, LEN(tblGoods.classCode)) group by tblGoods.classCode,tblGoods.GoodsNumber,tblGoods.isCatalog,tblGoods.upperQty,tblGoods.lowerQty,case when tblGoods.isCatalog=1 then '' else isnull(b.BatchNo,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Inch,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Hue,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.yearNO,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.ProDate,'') end,
						case when tblGoods.isCatalog=1 then '' else isnull(b.Availably,'') end  having 1=1 and abs(sum(isnull(lastQty,0)))+abs(sum(isnull(inQtyNotAudit,0)))+abs(sum(isnull(SInQtyNotAudit,0)))+abs(sum(isnull(outQtyNotAudit,0)))+abs(sum(isnull(BOutQtyNotAudit,0)))+abs(sum(isnull(buyOrderQty,0)))+abs(sum(isnull(salesOrderQty,0)))>0
 [DEBUG] 2017-12-21 09:32:10,104 Line:689 通过SQL读原始数据：77
 [DEBUG] 2017-12-21 09:32:10,104 Line:1391 整理数据：0
 [DEBUG] 2017-12-21 09:32:10,105 Line:2961 MobileAjax 操作人:admin;返回数据：{"code":"OK","msg":"","obj":{"conditions":[["StockCode",""],["GoodsCode",""],["NumberType","0"],["DataType","tblGoods"],["upperQtyQ",""],["mobileGoodsFullName",""]],"cols":[["classCode","-1","string","","GoodsCode"],["","-1","string","","classCode"],["商品编号","100","string","","GoodsNumber"],["商品名称","150","string","","GoodsFullName"],["商品规格","200","string","","GoodsSpec"],["单位","30","string","","BaseUnit"],["库存上限","90","float","","upperQty"],["库存下限","90","float","","lowerQty"],["实际库存","90","floatc等等！
 [DEBUG] 2017-12-21 09:57:59,947 Line:56 ConfigRefresh.getLastInfo -- and refresh ip
 [DEBUG] 2017-12-21 10:28:20,003 Line:56 ConfigRefresh.getLastInfo -- and refresh ip
 